<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>树莓派控制U型光电开关</title>
      <link href="/2021/12/15/shu-mei-pai-kong-zhi-u-xing-guang-dian-kai-guan/"/>
      <url>/2021/12/15/shu-mei-pai-kong-zhi-u-xing-guang-dian-kai-guan/</url>
      
        <content type="html"><![CDATA[<h2 id="树莓派控制U型光电开关"><a href="#树莓派控制U型光电开关" class="headerlink" title="树莓派控制U型光电开关"></a>树莓派控制U型光电开关</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>&emsp;&emsp;U型光电传感器是一种对射式光电传感器，它有一个发射端和接收端组成。它的工作原理是通过对红外发射光的阻断和导通，在红外接收管感应出的电流变化来实现开和关的判断。</p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/U型光电开关原理图.png" alt="U型光电开关原理图" style="zoom: 33%;" /><p>&emsp;&emsp;U型光电传感器由两部分组成：发射器和接收器。发射器发光，然后光线进入接收器，如果发射器和接收器之间的光速被障碍物挡住，接收器即使在一瞬间也将检测不到入射光，并且输出电平将会改变，光线隔断是高电平，没有挡住时是低电平。在这个实验中，我们将通过使用此更改来打开或关闭LED灯。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><div class="note warning"><p>本次编程有两个函数要注意</p></div><p><span class="inline-tag yellow"> warning 1 </span></p><p>有多种方式将GPIO的输入导入到程序中，polling(轮询)，interrupt(中断)，edge detection(边缘检测)，“轮询”式如果程序在错误的时间读取值，可能会错过输入。我们这里采用中断式。</p><p>需要定义上拉和下拉电阻</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GPIO.setup(channel, GPIO.IN, pull_up_down=GPIO.PUD_UP)</span><br><span class="line">GPIO.setup(channel, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)</span><br></pre></td></tr></table></figure><p>并不关心电平值，关心电平从低到高，, 为避免主程序忙于其它事情错过引脚的电平改变, 有两种方式:</p><p><span class="inline-tag blue">wait_for_edge()</span></p><p>阻塞程序的执行，直到检测到边缘为止。换句话说，等待按钮按下的示例可以改写成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GPIO.wait_for_edge(channel, GPIO.RISING)</span><br></pre></td></tr></table></figure><blockquote><p>检测的边缘参数有 GPIO.RISING， GPIO.FALLING ， GPIO.BOTH (上升沿、下降沿、升降沿)</p></blockquote><p><span class="inline-tag blue">event_detected()</span></p><p>用来与其他事物一起在循环中使用， 不同于polling轮询， 它不会产生阻塞，只要检测到指定参数的边缘事件(上升沿, 下降沿 或 升降沿)发生时，调用GPIO.event_detected(channel)的值就为”ture”(真)。通过在add_event_detect()函数中添加callback参数即可执行触发开关后的事件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Note that you can detect events for GPIO.RISING, GPIO.FALLING or GPIO.BOTH.</span></span><br><span class="line">GPIO.add_event_detect(channel, GPIO.RISING)  <span class="comment"># add rising edge detection on a channel</span></span><br><span class="line">do_something()</span><br><span class="line"><span class="keyword">if</span> GPIO.event_detected(channel):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Button pressed&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment">#  如果你想要不止一个回调函数:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_callback_one</span>(<span class="params">channel</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Callback one&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_callback_two</span>(<span class="params">channel</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Callback two&#x27;</span>)</span><br><span class="line">GPIO.add_event_detect(channel, GPIO.RISING)</span><br><span class="line">GPIO.add_event_callback(channel, my_callback_one)</span><br><span class="line">GPIO.add_event_callback(channel, my_callback_two)</span><br></pre></td></tr></table></figure><blockquote><p>回调函数是按顺序运行的，而不是并发的。这是因为只有一个线程用于回调，其中每个回调都按照它们被定义的顺序运行。</p></blockquote><p><span class="inline-tag yellow"> warning 2 </span></p><p>由于存在开关抖动(用示波器可以看到)，每次触发开关会调用多次回调函数，这不是我们希望的，有两种方式处理开关抖动：</p><ul><li><p>在开关两个引脚之间添加一个0.1uF的电容</p></li><li><p>软件消抖</p></li></ul><p>这里使用第二种方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># add rising edge detection on a channel, ignoring further edges for 200ms for switch bounce handling</span></span><br><span class="line">GPIO.add_event_detect(channel, GPIO.RISING, callback=my_callback, bouncetime=<span class="number">200</span>)</span><br></pre></td></tr></table></figure><h3 id="正式编程"><a href="#正式编程" class="headerlink" title="正式编程"></a>正式编程</h3><p>定义针脚参数和初始化设置函数 <code>setup()</code>，添加边缘事件检测函数 <code>GPIO.wait_for_edge()</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br><span class="line"></span><br><span class="line">PIPin  = <span class="number">11</span></span><br><span class="line">Rpin   = <span class="number">12</span></span><br><span class="line">Gpin   = <span class="number">13</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setup</span>():</span></span><br><span class="line">    GPIO.setmode(GPIO.BOARD)       <span class="comment"># Numbers GPIOs by physical location</span></span><br><span class="line">    GPIO.setup(Gpin, GPIO.OUT)     <span class="comment"># Set Green Led Pin mode to output</span></span><br><span class="line">    GPIO.setup(Rpin, GPIO.OUT)     <span class="comment"># Set Red Led Pin mode to output</span></span><br><span class="line">    GPIO.setup(PIPin, GPIO.IN, pull_up_down=GPIO.PUD_UP)    <span class="comment"># Set BtnPin&#x27;s mode is input, and pull up to high level(3.3V)</span></span><br><span class="line">    GPIO.add_event_detect(PIPin, GPIO.BOTH, callback=detect, bouncetime=<span class="number">200</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Raspberry Pi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive数据仓库搭建</title>
      <link href="/2021/04/12/hive-shu-ju-cang-ku-da-jian/"/>
      <url>/2021/04/12/hive-shu-ju-cang-ku-da-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>首先到MySQL官方下载yum rpm库，<a href="https://dev.mysql.com/downloads/repo/yum/">点击跳转</a>，下载rpm包</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_%E4%B8%8B%E8%BD%BDrpm.png" alt="基于气象数据的环境状况及变化趋势分析_下载rpm"><br>将下载好的rpm包使用xftp上传至CentOS服务器</p><p>安装MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">sudo yum module <span class="built_in">disable</span> mysql</span><br><span class="line">sudo yum install mysql-community-server</span><br></pre></td></tr></table></figure><p>启动MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><p>查看MySQL默认密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grep <span class="string">&#x27;temporary password&#x27;</span> /var/<span class="built_in">log</span>/mysqld.log</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录MySQL</span></span><br><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>修改MySQL默认密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;MyNewPass4!&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="Hive数据仓库"><a href="#Hive数据仓库" class="headerlink" title="Hive数据仓库"></a>Hive数据仓库</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>在集群的Master1上下载二进制文件（北京理工大学服务器）</p><blockquote><p>因为我的Hadoop是3.1.4版本，因此我选择3.1.x的Hive</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxf apache-hive-3.1.2-bin.tar.gz</span><br><span class="line"><span class="comment"># 重命名</span></span><br><span class="line">mv apache-hive-3.1.2-bin hive</span><br><span class="line"><span class="comment"># 删除压缩包</span></span><br><span class="line">rm -rf apache-hive-3.1.2-bin.tar.gz</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>在环境变量中追加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HIVE_HOME=/usr/<span class="built_in">local</span>/hive</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>保存后，重载系统环境变量配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="Hive配置文件"><a href="#Hive配置文件" class="headerlink" title="Hive配置文件"></a>Hive配置文件</h3><p>首先在Hadoop的core-site.xml中添加以下配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="hive-site-xml"><a href="#hive-site-xml" class="headerlink" title="hive-site.xml"></a>hive-site.xml</h4><p>位于hive安装目录下的conf中，hive-default.xml.template为其模板文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv hive-default.xml.template hive-site.xml</span><br></pre></td></tr></table></figure><p>搜索<em>hive.exec.scratchdir</em>，将该<em>name</em>对应的<em>value</em>修改为*/user/hive/tmp*</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.scratchdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/user/hive/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>hive.querylog.location,<em>将该</em>name</em>对应的<em>value</em>修改为*/user/hive/log/hadoop*</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.querylog.location<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/user/hive/log/hadoop<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Location of Hive run time structured logfile<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>javax.jdo.option.connectionURL,<em>将该</em>name</em>对应的<em>value</em>修改为<em>MySQL</em>的地址</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://127.0.0.1:3306/hive?createDatabaseIfNotExist=true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">JDBC connectstring for a JDBC metastore.</span><br><span class="line">To use SSL toencrypt/authenticate the connection, provide</span><br><span class="line">database-specific SSL flag in theconnection URL.</span><br><span class="line">For example,jdbc:postgresql://myhost/db?ssl=true for postgres database.</span><br><span class="line"><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>javax.jdo.option.ConnectionDriverName</em>，将该<em>name</em>对应的<em>value</em>修改为<em>MySQL</em>驱动类路径<br>注意 新版jdbc应该是com.mysql.cj.jdbc.Driver，取代旧版的com.mysql.jdbc.Driver</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.cj.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Driverclass name for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>javax.jdo.option.ConnectionUserName</em>，将对应的<em>value</em>修改为<em>MySQL</em>数据库登录名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>MySQL数据库登录名<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Username touse against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>javax.jdo.option.ConnectionPassword</em>，将对应的<em>value</em>修改为<em>MySQL</em>数据库的登录密码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>MySQL数据库的登录密码<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>password to useagainst metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建<em>tmp</em>目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/software/apache-hive-2.3.0-bin/tmp</span><br></pre></td></tr></table></figure><p>修改 hive-site.xml</p><p>把所有<code>$&#123;system:java.io.tmpdir&#125;</code>改成<code>/usr/local/software/apache-hive-2.3.0-bin/tmp</code></p><p>把所有<code>$&#123;system:user.name&#125;</code>改成<code>$&#123;user.name&#125;</code></p><h4 id="hive-env-sh"><a href="#hive-env-sh" class="headerlink" title="hive-env.sh"></a>hive-env.sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv hive-env.sh.template hive-env.sh</span><br></pre></td></tr></table></figure><p>按照下图修改以下三行，记得取消注释</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_Hive%E9%85%8D%E7%BD%AE.png" alt="基于气象数据的环境状况及变化趋势分析_Hive配置"></p><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><p>下载JDBC并复制到hive的lib目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-8.0.22.tar.gz</span><br><span class="line">tar -zxvf mysql-connector-java-8.0.22.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mysql-connector-java-8.0.22</span><br><span class="line">mv mysql-connector-java-8.0.22.jar /usr/<span class="built_in">local</span>/hive/lib</span><br><span class="line">rm -rf mysql-connector-java-8.0.22.tar.gz mysql-connector-java-8.0.22</span><br></pre></td></tr></table></figure><h3 id="guava-jar"><a href="#guava-jar" class="headerlink" title="guava.jar"></a>guava.jar</h3><p>hive和hadoop的guava.jar的版本不一致，会引发异常，因此将Hadoop的guava.jar复制到hive的lib目录下，并删除hive原有的guava.jar</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_Guava.png" alt="guava"></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>初始化一般会遇到错误，请看下面的踩坑，包含解决办法</p><p>进入bin目录，初始化MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/hive/bin</span><br><span class="line">./schematool -initSchema -dbType mysql</span><br></pre></td></tr></table></figure><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑*"></a>踩坑*</h3><p>这里有一个十分重要的点，全部配置完后，可能会有一个字符编码错误</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_Hive%E6%8A%A5%E9%94%99.png" alt="&quot;基于气象数据的环境状况及变化趋势分析_Hive报错&quot;"></p><p>这里可以看到我的报错是3215行，第96个字符，我们打开vim检查一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim hive-site.xml</span><br></pre></td></tr></table></figure><p>打开vim后，按esc，输入 <code>:set nu</code> 显示行号</p><p>再次输入冒号加行号，跳转到指定行，我这里是3215行，因此输入 <code>:3215</code> </p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_%E6%A3%80%E6%9F%A5%E9%94%99%E8%AF%AF.png" alt="基于气象数据的环境状况及变化趋势分析_检查错误"><br>可以看到这里有一个<code>for&amp;#8;</code> 将其改为<code>for;</code>，保存退出即可</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>执行<code>hive</code>命令，即可进入Hive的shell模式，执行<code>show databases;</code>命令以确认Hive可用</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_hive%E6%B5%8B%E8%AF%95.png" alt="基于气象数据的环境状况及变化趋势分析_hive测试"></p><p><strong>远程模式</strong></p><p>启动Hive服务端<code>hiveserver2 &amp;</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_Hive%E8%BF%9C%E7%A8%8B%E6%A8%A1%E5%BC%8F.png"><br>使用IDEA的database工具远程连接Hive</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_IDEA_DataBase.png"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_hive%E8%BF%9C%E7%A8%8B.png"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_hive%E8%BF%9C%E7%A8%8B1.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Azkaban安装与简单应用</title>
      <link href="/2020/12/27/azkaban-an-zhuang-yu-jian-dan-ying-yong/"/>
      <url>/2020/12/27/azkaban-an-zhuang-yu-jian-dan-ying-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="Azkaban-任务调度"><a href="#Azkaban-任务调度" class="headerlink" title="Azkaban 任务调度"></a>Azkaban 任务调度</h2><h3 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git zip</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/azkaban/azkaban.git</span><br><span class="line">unzip azkaban-master.zip</span><br><span class="line">mv azkaban-master azkaban</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>跳过测试，直接编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban</span><br><span class="line">./gradlew build installDist -x <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Azkaban编译.png" alt="基于气象数据的环境状况及变化趋势分析_Azkaban编译"></p><p>查看编译完成的Azkaban目录</p><h3 id="数据库初始化"><a href="#数据库初始化" class="headerlink" title="数据库初始化"></a>数据库初始化</h3><p>将Azkaban安装目录下的<code>azkaban-db/build/sql</code>里的<code>create-all-sql-0.1.0-SNAPSHOT.sql</code>发送到MySQL服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban/azkaban-db/build/sql</span><br><span class="line">scp create-all-sql-0.1.0-SNAPSHOT.sql 192.168.100.102:/home</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_发送SQL.png" alt="基于气象数据的环境状况及变化趋势分析_发送SQL"></p><p>ssh登录到远程服务器，进入sql文件所在目录，然后登陆MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database azkaban;</span><br><span class="line">use azkaban;</span><br><span class="line">source <span class="keyword">create</span><span class="operator">-</span><span class="keyword">all</span><span class="operator">-</span><span class="keyword">sql</span><span class="number">-0.1</span><span class="number">.0</span><span class="operator">-</span>SNAPSHOT.sql</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_初始化MySQL.png" alt="基于气象数据的环境状况及变化趋势分析_初始化MySQL" style="zoom:67%;" /><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_查看初始化结果.png" alt="基于气象数据的环境状况及变化趋势分析_查看初始化结果"></p><h3 id="创建SSL连接"><a href="#创建SSL连接" class="headerlink" title="创建SSL连接"></a>创建SSL连接</h3><p>进入Azkaban根目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban</span><br><span class="line">keytool -keystore keystore -<span class="built_in">alias</span> jetty -genkey -keyalg RSA </span><br></pre></td></tr></table></figure><p>按提示操作即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">输入密钥库口令:  </span><br><span class="line">再次输入新口令: </span><br><span class="line">您的名字与姓氏是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">您的组织单位名称是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">您的组织名称是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">您所在的城市或区域名称是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">您所在的省/市/自治区名称是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">该单位的双字母国家/地区代码是什么?</span><br><span class="line">  [Unknown]:  CN</span><br><span class="line">CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=CN是否正确?</span><br><span class="line">  [否]:  是</span><br><span class="line"></span><br><span class="line">输入 &lt;jetty&gt; 的密钥口令</span><br><span class="line">    (如果和密钥库口令相同, 按回车): </span><br></pre></td></tr></table></figure><h3 id="Azkaban-Web"><a href="#Azkaban-Web" class="headerlink" title="Azkaban Web"></a>Azkaban Web</h3><p>Web服务器安装，首先进入azkaban的<code>azkaban-web-server/build/distributions</code>文件夹，编译好的webserver就在此处</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban/azkaban-web-server/build/distributions</span><br><span class="line">tar -zxvf azkaban-web-server-0.1.0-SNAPSHOT.tar.gz</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_AzkabanWeb1.png" alt="基于气象数据的环境状况及变化趋势分析_AzkabanWeb1"></p><p>进入conf文件夹，对<code>azkaban.properties</code>文件进行配置</p><p>主要配置时区、MySQL连接信息，所有涉及到路径的信息全部采用绝对路径</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Azkaban Personalization Settings</span></span><br><span class="line"><span class="meta">azkaban.name</span>=<span class="string">Test</span></span><br><span class="line"><span class="meta">azkaban.label</span>=<span class="string">My Local Azkaban</span></span><br><span class="line"><span class="meta">azkaban.color</span>=<span class="string">#FF3601</span></span><br><span class="line"><span class="meta">azkaban.default.servlet.path</span>=<span class="string">/index</span></span><br><span class="line"><span class="comment"># 添加下面这一条</span></span><br><span class="line"><span class="meta">azkaban.jobtype.plugin.dir</span>=<span class="string">/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/plugins/jobtypes</span></span><br><span class="line"><span class="meta">web.resource.dir</span>=<span class="string">/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/web/</span></span><br><span class="line"><span class="meta">default.timezone.id</span>=<span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="comment"># Azkaban UserManager class</span></span><br><span class="line"><span class="meta">user.manager.class</span>=<span class="string">azkaban.user.XmlUserManager</span></span><br><span class="line"><span class="meta">user.manager.xml.file</span>=<span class="string">/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/conf/azkaban-users.xml</span></span><br><span class="line"><span class="comment"># Loader for projects</span></span><br><span class="line"><span class="meta">executor.global.properties</span>=<span class="string">/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/conf/global.properties</span></span><br><span class="line"><span class="meta">azkaban.project.dir</span>=<span class="string">projects</span></span><br><span class="line"><span class="comment"># Velocity dev mode</span></span><br><span class="line"><span class="meta">velocity.dev.mode</span>=<span class="string">false</span></span><br><span class="line"><span class="comment"># Azkaban Jetty server properties.</span></span><br><span class="line"><span class="meta">jetty.use.ssl</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">jetty.maxThreads</span>=<span class="string">25</span></span><br><span class="line"><span class="meta">jetty.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="comment"># Azkaban Executor settings</span></span><br><span class="line"><span class="comment"># mail settings</span></span><br><span class="line"><span class="meta">mail.sender</span>=<span class="string"></span></span><br><span class="line"><span class="meta">mail.host</span>=<span class="string"></span></span><br><span class="line"><span class="comment"># User facing web server configurations used to construct the user facing server URLs. They are useful when there is a reverse proxy between Azkaban web servers and users.</span></span><br><span class="line"><span class="comment"># enduser -&gt; myazkabanhost:443 -&gt; proxy -&gt; localhost:8081</span></span><br><span class="line"><span class="comment"># when this parameters set then these parameters are used to generate email links.</span></span><br><span class="line"><span class="comment"># if these parameters are not set then jetty.hostname, and jetty.port(if ssl configured jetty.ssl.port) are used.</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_hostname=myazkabanhost.com</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_ssl_port=443</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_port=8081</span></span><br><span class="line"><span class="meta">job.failure.email</span>=<span class="string"></span></span><br><span class="line"><span class="meta">job.success.email</span>=<span class="string"></span></span><br><span class="line"><span class="meta">lockdown.create.projects</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">cache.directory</span>=<span class="string">cache</span></span><br><span class="line"><span class="comment"># JMX stats</span></span><br><span class="line"><span class="meta">jetty.connector.stats</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">executor.connector.stats</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># Azkaban mysql settings by default. Users should configure their own username and password.</span></span><br><span class="line"><span class="meta">database.type</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">mysql.port</span>=<span class="string">3306</span></span><br><span class="line"><span class="meta">mysql.host</span>=<span class="string"># 数据库IP</span></span><br><span class="line"><span class="meta">mysql.database</span>=<span class="string">azkaban</span></span><br><span class="line"><span class="meta">mysql.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">mysql.password</span>=<span class="string"># 数据库密码</span></span><br><span class="line"><span class="meta">mysql.numconnections</span>=<span class="string">100</span></span><br><span class="line"><span class="comment">#Multiple Executor</span></span><br><span class="line"><span class="meta">azkaban.use.multiple.executors</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">azkaban.executorselector.filters</span>=<span class="string">StaticRemainingFlowSize,CpuStatus# 删除最小内存限制</span></span><br><span class="line"><span class="meta">azkaban.executorselector.comparator.NumberOfAssignedFlowComparator</span>=<span class="string">1</span></span><br><span class="line"><span class="meta">azkaban.executorselector.comparator.Memory</span>=<span class="string">1</span></span><br><span class="line"><span class="meta">azkaban.executorselector.comparator.LastDispatched</span>=<span class="string">1</span></span><br><span class="line"><span class="meta">azkaban.executorselector.comparator.CpuUsage</span>=<span class="string">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Azkaban-Executor"><a href="#Azkaban-Executor" class="headerlink" title="Azkaban Executor"></a>Azkaban Executor</h3><p>Executor安装，首先进入azkaban的<code>azkaban-exec-server/build/distributions</code>文件夹，编译好的Executor就在此处</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban/azkaban-exec-server/build/distributions</span><br><span class="line">tar -zxvf azkaban-exec-server-0.1.0-SNAPSHOT.tar.gz</span><br></pre></td></tr></table></figure><p>进入conf文件夹，对<code>azkaban.properties</code>文件进行配置</p><p>同样的，需要配置时区以及MySQL连接信息，所有涉及到路径的信息全部采用绝对路径</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Azkaban Personalization Settings</span></span><br><span class="line"><span class="meta">azkaban.name</span>=<span class="string">Test</span></span><br><span class="line"><span class="meta">azkaban.label</span>=<span class="string">My Local Azkaban</span></span><br><span class="line"><span class="meta">azkaban.color</span>=<span class="string">#FF3601</span></span><br><span class="line"><span class="meta">azkaban.default.servlet.path</span>=<span class="string">/index</span></span><br><span class="line"><span class="meta">web.resource.dir</span>=<span class="string">/usr/local/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/web/</span></span><br><span class="line"><span class="meta">default.timezone.id</span>=<span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="comment"># Azkaban UserManager class</span></span><br><span class="line"><span class="meta">user.manager.class</span>=<span class="string">azkaban.user.XmlUserManager</span></span><br><span class="line"><span class="meta">user.manager.xml.file</span>=<span class="string">/usr/local/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/conf/azkaban-users.xml</span></span><br><span class="line"><span class="comment"># Loader for projects</span></span><br><span class="line"><span class="meta">executor.global.properties</span>=<span class="string">/usr/local/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/conf/global.properties</span></span><br><span class="line"><span class="meta">azkaban.project.dir</span>=<span class="string">projects</span></span><br><span class="line"><span class="comment"># Velocity dev mode</span></span><br><span class="line"><span class="meta">velocity.dev.mode</span>=<span class="string">false</span></span><br><span class="line"><span class="comment"># Azkaban Jetty server properties.</span></span><br><span class="line"><span class="meta">jetty.use.ssl</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">jetty.maxThreads</span>=<span class="string">25</span></span><br><span class="line"><span class="meta">jetty.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="comment"># Where the Azkaban web server is located</span></span><br><span class="line"><span class="meta">azkaban.webserver.url</span>=<span class="string">http://localhost:8081</span></span><br><span class="line"><span class="comment"># mail settings</span></span><br><span class="line"><span class="meta">mail.sender</span>=<span class="string"></span></span><br><span class="line"><span class="meta">mail.host</span>=<span class="string"></span></span><br><span class="line"><span class="comment"># User facing web server configurations used to construct the user facing server URLs. They are useful when there is a reverse proxy between Azkaban web servers and users.</span></span><br><span class="line"><span class="comment"># enduser -&gt; myazkabanhost:443 -&gt; proxy -&gt; localhost:8081</span></span><br><span class="line"><span class="comment"># when this parameters set then these parameters are used to generate email links.</span></span><br><span class="line"><span class="comment"># if these parameters are not set then jetty.hostname, and jetty.port(if ssl configured jetty.ssl.port) are used.</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_hostname=myazkabanhost.com</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_ssl_port=443</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_port=8081</span></span><br><span class="line"><span class="meta">job.failure.email</span>=<span class="string"></span></span><br><span class="line"><span class="meta">job.success.email</span>=<span class="string"></span></span><br><span class="line"><span class="meta">lockdown.create.projects</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">cache.directory</span>=<span class="string">cache</span></span><br><span class="line"><span class="comment"># JMX stats</span></span><br><span class="line"><span class="meta">jetty.connector.stats</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">executor.connector.stats</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># Azkaban plugin settings</span></span><br><span class="line"><span class="meta">azkaban.jobtype.plugin.dir</span>=<span class="string">/usr/local/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/plugins/jobtypes</span></span><br><span class="line"><span class="comment"># Azkaban mysql settings by default. Users should configure their own username and password.</span></span><br><span class="line"><span class="meta">database.type</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">mysql.port</span>=<span class="string">3306</span></span><br><span class="line"><span class="meta">mysql.host</span>=<span class="string">数据库IP</span></span><br><span class="line"><span class="meta">mysql.database</span>=<span class="string">azkaban</span></span><br><span class="line"><span class="meta">mysql.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">mysql.password</span>=<span class="string">数据库密码</span></span><br><span class="line"><span class="meta">mysql.numconnections</span>=<span class="string">100</span></span><br><span class="line"><span class="comment"># Azkaban Executor settings</span></span><br><span class="line"><span class="meta">executor.maxThreads</span>=<span class="string">50</span></span><br><span class="line"><span class="meta">executor.flow.threads</span>=<span class="string">30</span></span><br><span class="line"><span class="meta">executor.port</span>=<span class="string">12321</span></span><br></pre></td></tr></table></figure><p>下载新版JDBC驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-8.0.22.tar.gz</span><br><span class="line">tar -zxvf mysql-connector-java-8.0.22.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mysql-connector-java-8.0.22</span><br><span class="line">mv mysql-connector-java-8.0.22.jar /usr/<span class="built_in">local</span>/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/lib</span><br><span class="line">rm -rf mysql-connector-java-8.0.22.tar.gz mysql-connector-java-8.0.22</span><br></pre></td></tr></table></figure><p>修改<code>/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/plugins/jobtypes</code>下的commonprivate.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set execute-as-user</span></span><br><span class="line"><span class="meta">execute.as.user</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">azkaban.native.lib</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><p>将这个配置文件复制到azkaban的exec-server路径下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/plugins/ /usr/<span class="built_in">local</span>/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT</span><br></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>在<code>/etc/profile/</code>添加Azkaban的变量路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AZKABAN_WEB_HOME=/usr/<span class="built_in">local</span>/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT</span><br><span class="line">AZKABAN_EXEC_HOME=/usr/<span class="built_in">local</span>/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$AZKABAN_EXEC_HOME</span>/bin:<span class="variable">$AZKABAN_WEB_HOME</span>/bin</span><br></pre></td></tr></table></figure><h3 id="启动测试"><a href="#启动测试" class="headerlink" title="启动测试"></a>启动测试</h3><p>首先启动Executor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-exec.sh</span><br><span class="line">jps</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_exec.png" alt="基于气象数据的环境状况及变化趋势分析_exec" style="zoom:67%;" /><p>手动激活</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://master1:12321/executor?action=activate</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_active.png" alt="基于气象数据的环境状况及变化趋势分析_active"></p><p>启动webserver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-web.sh</span><br><span class="line">jps</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_web.png" alt="基于气象数据的环境状况及变化趋势分析_web"></p><p>浏览器访问master1:8081的Azkaban Web页面</p><p>如果未修改azkaban-user.xml，那么可以使用默认密码登录，用户名和密码都是azkaban</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_web8081.png" alt="基于气象数据的环境状况及变化趋势分析_web8081"></p><h2 id="简单应用"><a href="#简单应用" class="headerlink" title="简单应用"></a>简单应用</h2><h3 id="编写-job文件"><a href="#编写-job文件" class="headerlink" title="编写.job文件"></a>编写.job文件</h3><p>foo.job</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>=<span class="built_in">command</span></span><br><span class="line"><span class="built_in">command</span>=<span class="built_in">echo</span> <span class="string">&quot;TestFoo&quot;</span> &gt;&gt; /home/Hadoop/AzkabanTest/foo.txt</span><br></pre></td></tr></table></figure><p>bar.job</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>=<span class="built_in">command</span></span><br><span class="line">dependencies=foo</span><br><span class="line"><span class="built_in">command</span>=<span class="built_in">echo</span> <span class="string">&quot;TestBar&quot;</span> &gt;&gt; /home/Hadoop/AzkabanTest/bar.txt</span><br></pre></td></tr></table></figure><p>将他们打包，使用xftp发送到物理机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip azDemo.zip *.job</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_zip.png" alt="基于气象数据的环境状况及变化趋势分析_zip"></p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_xftp.png" alt="基于气象数据的环境状况及变化趋势分析_xftp" style="zoom: 50%;" /><h3 id="在UI中新建项目"><a href="#在UI中新建项目" class="headerlink" title="在UI中新建项目"></a>在UI中新建项目</h3><p>点击右上角绿色的新建项目</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_创建工作流.png" alt="基于气象数据的环境状况及变化趋势分析_创建工作流" style="zoom: 50%;" /><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_创建工作流update.png" alt="基于气象数据的环境状况及变化趋势分析_创建工作流update"></p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_flow.png" alt="基于气象数据的环境状况及变化趋势分析_flow"></p><p>点击execute flow即可查看流程图</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_execflow.png" alt="基于气象数据的环境状况及变化趋势分析_execflow" style="zoom:50%;" /><p>点击右下角的立即执行即可查看执行结果</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_success.png" alt="基于气象数据的环境状况及变化趋势分析_success" style="zoom: 80%;" /><p>​                   </p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_succeed.png" alt="基于气象数据的环境状况及变化趋势分析_succeed" style="zoom: 50%;" />]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Sqoop安装与简单应用</title>
      <link href="/2020/12/27/sqoop-an-zhuang-yu-jian-dan-ying-yong/"/>
      <url>/2020/12/27/sqoop-an-zhuang-yu-jian-dan-ying-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="Sqoop-安装"><a href="#Sqoop-安装" class="headerlink" title="Sqoop 安装"></a>Sqoop 安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/sqoop/1.4.7/sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz</span><br><span class="line">tar -zxf sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz</span><br><span class="line">mv sqoop-1.4.7.bin__hadoop-2.6.0 sqoop</span><br><span class="line">rm -rf sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>在文件最后添加以下两行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> SQOOP_HOME=/usr/<span class="built_in">local</span>/sqoop</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SQOOP_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>重载配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="Sqoop配置文件"><a href="#Sqoop配置文件" class="headerlink" title="Sqoop配置文件"></a>Sqoop配置文件</h3><p>Sqoop的配置文件都在Sqoop安装目录的conf文件夹下，也就是/usr/local/sqoop</p><p>/conf</p><h4 id="sqoop-env-sh"><a href="#sqoop-env-sh" class="headerlink" title="sqoop-env.sh"></a>sqoop-env.sh</h4><p>将sqoop-env.sh的模板文件sqoop-env-template.sh重命名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv sqoop-env-template.sh sqoop-env.sh</span><br><span class="line">vim sqoop-env.sh</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_Sqoop_env.png" alt="基于气象数据的环境状况及变化趋势分析_Sqoop_env"></p><p>注意:根据实际路径配置HADOOP_COMMON_HOME，HADOOP_MAPRED_HOME，HIVE_HOME，HIVE_CONF_DIR</p><h4 id="hadoop-core-site-xml"><a href="#hadoop-core-site-xml" class="headerlink" title="hadoop core-site.xml"></a>hadoop core-site.xml</h4><p>在Hadoop的<code>core-site.xml</code>中添加以下配置（应该在hadoop安装目录下的<code>etc/hadoop</code>里）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>保存并重启Hadoop集群</p><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><p>下载JDBC并复制到Sqoop的lib目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-8.0.22.tar.gz</span><br><span class="line">tar -zxvf mysql-connector-java-8.0.22.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mysql-connector-java-8.0.22</span><br><span class="line">mv mysql-connector-java-8.0.22.jar /usr/<span class="built_in">local</span>/sqoop/lib</span><br><span class="line">rm -rf mysql-connector-java-8.0.22.tar.gz mysql-connector-java-8.0.22</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><h3 id="hive-common"><a href="#hive-common" class="headerlink" title="hive-common"></a>hive-common</h3><p>需要将hive里的hive-common-3.1.2.jar 复制到sqoop的lib里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/hive/lib/hive-common-3.1.2.jar /usr/<span class="built_in">local</span>/sqoop/lib/</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动Hadoop集群，校验版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqoop version</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E5%9F%BA%E4%BA%8E%E6%B0%94%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E7%8A%B6%E5%86%B5%E5%8F%8A%E5%8F%98%E5%8C%96%E8%B6%8B%E5%8A%BF%E5%88%86%E6%9E%90_Sqoop_ver.png" alt="基于气象数据的环境状况及变化趋势分析_Sqoop_ver"></p><h1 id="Sqoop案例"><a href="#Sqoop案例" class="headerlink" title="Sqoop案例"></a>Sqoop案例</h1><h2 id="MySQL迁移到HDFS"><a href="#MySQL迁移到HDFS" class="headerlink" title="MySQL迁移到HDFS"></a>MySQL迁移到HDFS</h2><p>首先看一下MySQL表中的内容</p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Sqoop安装与简单应用_weather表.png" alt="Sqoop安装与简单应用_weather表" style="zoom:67%;" /><p>迁移</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sqoop import \</span><br><span class="line">-Dorg.apache.sqoop.splitter.allow_text_splitter=<span class="literal">true</span> \</span><br><span class="line">--connect jdbc:mysql://39.106.111.245:3306/qweather \</span><br><span class="line">--username root \</span><br><span class="line">--password @Hanzhuo0403! \</span><br><span class="line">--table weather \</span><br><span class="line">--target-dir /sqoop/trans \</span><br><span class="line">--fields-terminated-by <span class="string">&quot;\t&quot;</span></span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Sqoop安装与简单应用_导出MySQL表.png" alt="Sqoop安装与简单应用_导出MySQL表" style="zoom:67%;" /><p>命令以MapReduce的形式提交到Hadoop集群运行</p><p>查看HDFS文件系统</p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Sqoop安装与简单应用_查看HDFS.png" alt="Sqoop安装与简单应用_查看HDFS" style="zoom: 50%;" />]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于气象数据的环境状况及变化趋势分析</title>
      <link href="/2020/12/21/ji-yu-qi-xiang-shu-ju-de-huan-jing-zhuang-kuang-ji-bian-hua-qu-shi-fen-xi/"/>
      <url>/2020/12/21/ji-yu-qi-xiang-shu-ju-de-huan-jing-zhuang-kuang-ji-bian-hua-qu-shi-fen-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="项目概要"><a href="#项目概要" class="headerlink" title="项目概要"></a>项目概要</h1><p>基于大数据技术的气象数据分析</p><p>​        使用Python爬虫爬取和风天气数据，存储到MySQL，将数据定时导出到云服务器的Flume监控文件夹里，Fulme将新改动的文件上传至HDFS，然后提交到MapReduce进行清洗，结果输出到HDFS，并导入到Hive数据仓库，使用HQL统计分析，并将结果导出到HDFS文件系统，使用Sqoop工具将HDFS文件迁移到MySQL中，并使用SpringBoot+Echarts将其可视化展示。</p><h2 id="数据来源"><a href="#数据来源" class="headerlink" title="数据来源"></a>数据来源</h2><p>​    和风天气提供全球天气预报、气象可视化、商业化气象服务和天气API数据,包括30天预报、灾害预警、空气质量AQI、历史天气、生活指数、分钟降水、交通天气等</p><h2 id="技术应用"><a href="#技术应用" class="headerlink" title="技术应用"></a>技术应用</h2><p>数据采集：Python爬虫，Flume跨集群流式传输，MySQL数据库</p><p>数据清洗：基于Hadoop HA高可用集群的MapReduce</p><p>数据处理：Sqoop数据迁移，Hive数据仓库，HQL统计分析</p><p>数据展示：前端HTML+JavaScript+Echarts，后端SpringBoot，交互Ajax</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><blockquote><p> MySQL服务器安装在阿里云CentOS 7 64位，</p></blockquote><p>首先到MySQL官方下载yum rpm库，<a href="https://dev.mysql.com/downloads/repo/yum/">点击跳转</a>，下载rpm包</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_下载rpm.png" alt="基于气象数据的环境状况及变化趋势分析_下载rpm"></p><p>将下载好的rpm包使用xftp上传至CentOS服务器</p><p>安装MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">sudo yum module <span class="built_in">disable</span> mysql</span><br><span class="line">sudo yum install mysql-community-server</span><br></pre></td></tr></table></figure><p>启动MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><p>查看MySQL默认密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grep <span class="string">&#x27;temporary password&#x27;</span> /var/<span class="built_in">log</span>/mysqld.log</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录MySQL</span></span><br><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>修改MySQL默认密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;MyNewPass4!&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="Hadoop-HA-集群"><a href="#Hadoop-HA-集群" class="headerlink" title="Hadoop HA 集群"></a>Hadoop HA 集群</h2><p>略</p><h2 id="Hive数据仓库"><a href="#Hive数据仓库" class="headerlink" title="Hive数据仓库"></a>Hive数据仓库</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>在集群的Master1上下载二进制文件（北京理工大学服务器）</p><blockquote><p>因为我的Hadoop是3.1.4版本，因此我选择3.1.x的Hive</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxf apache-hive-3.1.2-bin.tar.gz</span><br><span class="line"><span class="comment"># 重命名</span></span><br><span class="line">mv apache-hive-3.1.2-bin hive</span><br><span class="line"><span class="comment"># 删除压缩包</span></span><br><span class="line">rm -rf apache-hive-3.1.2-bin.tar.gz</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>在环境变量中追加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HIVE_HOME=/usr/<span class="built_in">local</span>/hive</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>保存后，重载系统环境变量配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="Hive配置文件"><a href="#Hive配置文件" class="headerlink" title="Hive配置文件"></a>Hive配置文件</h3><h4 id="hive-site-xml"><a href="#hive-site-xml" class="headerlink" title="hive-site.xml"></a>hive-site.xml</h4><p>位于hive安装目录下的conf中，hive-default.xml.template为其模板文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv hive-default.xml.template hive-site.xml</span><br></pre></td></tr></table></figure><p>搜索<em>hive.exec.scratchdir</em>，将该<em>name</em>对应的<em>value</em>修改为*/user/hive/tmp*</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.scratchdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/user/hive/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>hive.querylog.location,<em>将该</em>name</em>对应的<em>value</em>修改为*/user/hive/log/hadoop*</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.querylog.location<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/user/hive/log/hadoop<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Location of Hive run time structured logfile<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>javax.jdo.option.connectionURL,<em>将该</em>name</em>对应的<em>value</em>修改为<em>MySQL</em>的地址</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://127.0.0.1:3306/hive?createDatabaseIfNotExist=true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">JDBC connectstring for a JDBC metastore.</span><br><span class="line">To use SSL toencrypt/authenticate the connection, provide</span><br><span class="line">database-specific SSL flag in theconnection URL.</span><br><span class="line">For example,jdbc:postgresql://myhost/db?ssl=true for postgres database.</span><br><span class="line"><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>javax.jdo.option.ConnectionDriverName</em>，将该<em>name</em>对应的<em>value</em>修改为<em>MySQL</em>驱动类路径<br>注意 新版jdbc应该是com.mysql.cj.jdbc.Driver，取代旧版的com.mysql.jdbc.Driver</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.cj.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Driverclass name for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>javax.jdo.option.ConnectionUserName</em>，将对应的<em>value</em>修改为<em>MySQL</em>数据库登录名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>MySQL数据库登录名<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Username touse against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>搜索<em>javax.jdo.option.ConnectionPassword</em>，将对应的<em>value</em>修改为<em>MySQL</em>数据库的登录密码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>MySQL数据库的登录密码<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>password to useagainst metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建<em>tmp</em>目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/<span class="built_in">local</span>/software/apache-hive-2.3.0-bin/tmp</span><br></pre></td></tr></table></figure><p>修改 hive-site.xml</p><p>把<code>$&#123;system:java.io.tmpdir&#125;</code>改成<code>/usr/local/software/apache-hive-2.3.0-bin/tmp</code></p><p>把<code>$&#123;system:user.name&#125;</code>改成<code>$&#123;user.name&#125;</code></p><h4 id="hive-env-sh"><a href="#hive-env-sh" class="headerlink" title="hive-env.sh"></a>hive-env.sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv hive-env.sh.template hive-env.sh</span><br></pre></td></tr></table></figure><p>按照下图修改以下三行，记得取消注释</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Hive配置.png" alt="基于气象数据的环境状况及变化趋势分析_Hive配置"></p><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><p>下载JDBC并复制到hive的lib目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-8.0.22.tar.gz</span><br><span class="line">tar -zxvf mysql-connector-java-8.0.22.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mysql-connector-java-8.0.22</span><br><span class="line">mv mysql-connector-java-8.0.22.jar /usr/<span class="built_in">local</span>/hive/lib</span><br><span class="line">rm -rf mysql-connector-java-8.0.22.tar.gz mysql-connector-java-8.0.22</span><br></pre></td></tr></table></figure><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>初始化一般会遇到错误，请看下面的踩坑，包含解决办法</p><p>进入bin目录，初始化MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/hive/bin</span><br><span class="line">./schematool -initSchema -dbType mysql</span><br></pre></td></tr></table></figure><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑*"></a>踩坑*</h3><p>这里有一个十分重要的点，全部配置完后，可能会有一个字符编码错误</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Hive报错.png" alt="基于气象数据的环境状况及变化趋势分析_Hive报错" style="zoom:80%;" /><p>这里可以看到我的报错是3215行，第96个字符，我们打开vim检查一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim hive-site.xml</span><br></pre></td></tr></table></figure><p>打开vim后，按esc，输入 <code>:set nu</code> 显示行号</p><p>再次输入冒号加行号，跳转到指定行，我这里是3215行，因此输入 <code>:3215</code> </p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_检查错误.png" alt="基于气象数据的环境状况及变化趋势分析_检查错误"></p><p>可以看到这里有一个<code>for&amp;#8;</code> 将其改为<code>for;</code>，保存退出即可</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>执行<code>hive</code>命令，即可进入Hive的shell模式，执行<code>show databases;</code>命令以确认Hive可用</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_hive测试.png" alt="基于气象数据的环境状况及变化趋势分析_hive测试"></p><h2 id="Sqoop数据迁移"><a href="#Sqoop数据迁移" class="headerlink" title="Sqoop数据迁移"></a>Sqoop数据迁移</h2><h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/sqoop/1.4.7/sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz</span><br><span class="line">tar -zxf sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz</span><br><span class="line">mv sqoop-1.4.7.bin__hadoop-2.6.0 sqoop</span><br><span class="line">rm -rf sqoop-1.4.7.bin__hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>在文件最后添加以下两行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> SQOOP_HOME=/usr/<span class="built_in">local</span>/sqoop</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SQOOP_HOME</span>/bin</span><br></pre></td></tr></table></figure><p>重载配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="Sqoop配置文件"><a href="#Sqoop配置文件" class="headerlink" title="Sqoop配置文件"></a>Sqoop配置文件</h3><p>Sqoop的配置文件都在Sqoop安装目录的conf文件夹下，也就是/usr/local/sqoop</p><p>/conf</p><h4 id="sqoop-env-sh"><a href="#sqoop-env-sh" class="headerlink" title="sqoop-env.sh"></a>sqoop-env.sh</h4><p>将sqoop-env.sh的模板文件sqoop-env-template.sh重命名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv sqoop-env-template.sh sqoop-env.sh</span><br><span class="line">vim sqoop-env.sh</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Sqoop_env.png" alt="基于气象数据的环境状况及变化趋势分析_Sqoop_env"></p><p>注意:根据实际路径配置HADOOP_COMMON_HOME，HADOOP_MAPRED_HOME，HIVE_HOME，HIVE_CONF_DIR</p><h4 id="hadoop-core-site-xml"><a href="#hadoop-core-site-xml" class="headerlink" title="hadoop core-site.xml"></a>hadoop core-site.xml</h4><p>在Hadoop的<code>core-site.xml</code>中添加以下配置（应该在hadoop安装目录下的<code>etc/hadoop</code>里）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>保存并重启Hadoop集群</p><h3 id="JDBC-1"><a href="#JDBC-1" class="headerlink" title="JDBC"></a>JDBC</h3><p>将Hive的JDBC复制到sqoop的lib目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/hive/lib/mysql-connector-java-8.0.22.jar /usr/<span class="built_in">local</span>/sqoop/lib/</span><br></pre></td></tr></table></figure><h3 id="hive-common"><a href="#hive-common" class="headerlink" title="hive-common"></a>hive-common</h3><p>需要将hive里的hive-common-3.1.2.jar 复制到sqoop的lib里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/hive/lib/hive-common-3.1.2.jar /usr/<span class="built_in">local</span>/sqoop/lib/</span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>启动Hadoop集群，校验版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqoop version</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Sqoop_ver.png" alt="基于气象数据的环境状况及变化趋势分析_Sqoop_ver"></p><h2 id="Azkaban-任务调度"><a href="#Azkaban-任务调度" class="headerlink" title="Azkaban 任务调度"></a>Azkaban 任务调度</h2><h3 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install git zip</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/azkaban/azkaban.git</span><br><span class="line">unzip azkaban-master.zip</span><br><span class="line">mv azkaban-master azkaban</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><p>跳过测试，直接编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban</span><br><span class="line">./gradlew build installDist -x <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Azkaban编译.png" alt="基于气象数据的环境状况及变化趋势分析_Azkaban编译"></p><p>查看编译完成的Azkaban目录</p><h3 id="数据库初始化"><a href="#数据库初始化" class="headerlink" title="数据库初始化"></a>数据库初始化</h3><p>将Azkaban安装目录下的<code>azkaban-db/build/sql</code>里的<code>create-all-sql-0.1.0-SNAPSHOT.sql</code>发送到MySQL服务器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban/azkaban-db/build/sql</span><br><span class="line">scp create-all-sql-0.1.0-SNAPSHOT.sql 192.168.100.102:/home</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_发送SQL.png" alt="基于气象数据的环境状况及变化趋势分析_发送SQL"></p><p>ssh登录到远程服务器，进入sql文件所在目录，然后登陆MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database azkaban;</span><br><span class="line">use azkaban;</span><br><span class="line">source <span class="keyword">create</span><span class="operator">-</span><span class="keyword">all</span><span class="operator">-</span><span class="keyword">sql</span><span class="number">-0.1</span><span class="number">.0</span><span class="operator">-</span>SNAPSHOT.sql</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_初始化MySQL.png" alt="基于气象数据的环境状况及变化趋势分析_初始化MySQL" style="zoom:67%;" /><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_查看初始化结果.png" alt="基于气象数据的环境状况及变化趋势分析_查看初始化结果"></p><h3 id="创建SSL连接"><a href="#创建SSL连接" class="headerlink" title="创建SSL连接"></a>创建SSL连接</h3><p>进入Azkaban根目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban</span><br><span class="line">keytool -keystore keystore -<span class="built_in">alias</span> jetty -genkey -keyalg RSA </span><br></pre></td></tr></table></figure><p>按提示操作即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">输入密钥库口令:  </span><br><span class="line">再次输入新口令: </span><br><span class="line">您的名字与姓氏是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">您的组织单位名称是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">您的组织名称是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">您所在的城市或区域名称是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">您所在的省/市/自治区名称是什么?</span><br><span class="line">  [Unknown]:  </span><br><span class="line">该单位的双字母国家/地区代码是什么?</span><br><span class="line">  [Unknown]:  CN</span><br><span class="line">CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=CN是否正确?</span><br><span class="line">  [否]:  是</span><br><span class="line"></span><br><span class="line">输入 &lt;jetty&gt; 的密钥口令</span><br><span class="line">    (如果和密钥库口令相同, 按回车): </span><br></pre></td></tr></table></figure><h3 id="Azkaban-Web"><a href="#Azkaban-Web" class="headerlink" title="Azkaban Web"></a>Azkaban Web</h3><p>Web服务器安装，首先进入azkaban的<code>azkaban-web-server/build/distributions</code>文件夹，编译好的webserver就在此处</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban/azkaban-web-server/build/distributions</span><br><span class="line">tar -zxvf azkaban-web-server-0.1.0-SNAPSHOT.tar.gz</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_AzkabanWeb1.png" alt="基于气象数据的环境状况及变化趋势分析_AzkabanWeb1"></p><p>进入conf文件夹，对<code>azkaban.properties</code>文件进行配置</p><p>主要配置时区、MySQL连接信息，所有涉及到路径的信息全部采用绝对路径</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Azkaban Personalization Settings</span></span><br><span class="line"><span class="meta">azkaban.name</span>=<span class="string">Test</span></span><br><span class="line"><span class="meta">azkaban.label</span>=<span class="string">My Local Azkaban</span></span><br><span class="line"><span class="meta">azkaban.color</span>=<span class="string">#FF3601</span></span><br><span class="line"><span class="meta">azkaban.default.servlet.path</span>=<span class="string">/index</span></span><br><span class="line"><span class="comment"># 添加下面这一条</span></span><br><span class="line"><span class="meta">azkaban.jobtype.plugin.dir</span>=<span class="string">/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/plugins/jobtypes</span></span><br><span class="line"><span class="meta">web.resource.dir</span>=<span class="string">/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/web/</span></span><br><span class="line"><span class="meta">default.timezone.id</span>=<span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="comment"># Azkaban UserManager class</span></span><br><span class="line"><span class="meta">user.manager.class</span>=<span class="string">azkaban.user.XmlUserManager</span></span><br><span class="line"><span class="meta">user.manager.xml.file</span>=<span class="string">/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/conf/azkaban-users.xml</span></span><br><span class="line"><span class="comment"># Loader for projects</span></span><br><span class="line"><span class="meta">executor.global.properties</span>=<span class="string">/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/conf/global.properties</span></span><br><span class="line"><span class="meta">azkaban.project.dir</span>=<span class="string">projects</span></span><br><span class="line"><span class="comment"># Velocity dev mode</span></span><br><span class="line"><span class="meta">velocity.dev.mode</span>=<span class="string">false</span></span><br><span class="line"><span class="comment"># Azkaban Jetty server properties.</span></span><br><span class="line"><span class="meta">jetty.use.ssl</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">jetty.maxThreads</span>=<span class="string">25</span></span><br><span class="line"><span class="meta">jetty.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="comment"># Azkaban Executor settings</span></span><br><span class="line"><span class="comment"># mail settings</span></span><br><span class="line"><span class="meta">mail.sender</span>=<span class="string"></span></span><br><span class="line"><span class="meta">mail.host</span>=<span class="string"></span></span><br><span class="line"><span class="comment"># User facing web server configurations used to construct the user facing server URLs. They are useful when there is a reverse proxy between Azkaban web servers and users.</span></span><br><span class="line"><span class="comment"># enduser -&gt; myazkabanhost:443 -&gt; proxy -&gt; localhost:8081</span></span><br><span class="line"><span class="comment"># when this parameters set then these parameters are used to generate email links.</span></span><br><span class="line"><span class="comment"># if these parameters are not set then jetty.hostname, and jetty.port(if ssl configured jetty.ssl.port) are used.</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_hostname=myazkabanhost.com</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_ssl_port=443</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_port=8081</span></span><br><span class="line"><span class="meta">job.failure.email</span>=<span class="string"></span></span><br><span class="line"><span class="meta">job.success.email</span>=<span class="string"></span></span><br><span class="line"><span class="meta">lockdown.create.projects</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">cache.directory</span>=<span class="string">cache</span></span><br><span class="line"><span class="comment"># JMX stats</span></span><br><span class="line"><span class="meta">jetty.connector.stats</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">executor.connector.stats</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># Azkaban mysql settings by default. Users should configure their own username and password.</span></span><br><span class="line"><span class="meta">database.type</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">mysql.port</span>=<span class="string">3306</span></span><br><span class="line"><span class="meta">mysql.host</span>=<span class="string"># 数据库IP</span></span><br><span class="line"><span class="meta">mysql.database</span>=<span class="string">azkaban</span></span><br><span class="line"><span class="meta">mysql.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">mysql.password</span>=<span class="string"># 数据库密码</span></span><br><span class="line"><span class="meta">mysql.numconnections</span>=<span class="string">100</span></span><br><span class="line"><span class="comment">#Multiple Executor</span></span><br><span class="line"><span class="meta">azkaban.use.multiple.executors</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">azkaban.executorselector.filters</span>=<span class="string">StaticRemainingFlowSize,CpuStatus# 删除最小内存限制</span></span><br><span class="line"><span class="meta">azkaban.executorselector.comparator.NumberOfAssignedFlowComparator</span>=<span class="string">1</span></span><br><span class="line"><span class="meta">azkaban.executorselector.comparator.Memory</span>=<span class="string">1</span></span><br><span class="line"><span class="meta">azkaban.executorselector.comparator.LastDispatched</span>=<span class="string">1</span></span><br><span class="line"><span class="meta">azkaban.executorselector.comparator.CpuUsage</span>=<span class="string">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Azkaban-Executor"><a href="#Azkaban-Executor" class="headerlink" title="Azkaban Executor"></a>Azkaban Executor</h3><p>Executor安装，首先进入azkaban的<code>azkaban-exec-server/build/distributions</code>文件夹，编译好的Executor就在此处</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/azkaban/azkaban-exec-server/build/distributions</span><br><span class="line">tar -zxvf azkaban-exec-server-0.1.0-SNAPSHOT.tar.gz</span><br></pre></td></tr></table></figure><p>进入conf文件夹，对<code>azkaban.properties</code>文件进行配置</p><p>同样的，需要配置时区以及MySQL连接信息，所有涉及到路径的信息全部采用绝对路径</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Azkaban Personalization Settings</span></span><br><span class="line"><span class="meta">azkaban.name</span>=<span class="string">Test</span></span><br><span class="line"><span class="meta">azkaban.label</span>=<span class="string">My Local Azkaban</span></span><br><span class="line"><span class="meta">azkaban.color</span>=<span class="string">#FF3601</span></span><br><span class="line"><span class="meta">azkaban.default.servlet.path</span>=<span class="string">/index</span></span><br><span class="line"><span class="meta">web.resource.dir</span>=<span class="string">/usr/local/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/web/</span></span><br><span class="line"><span class="meta">default.timezone.id</span>=<span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="comment"># Azkaban UserManager class</span></span><br><span class="line"><span class="meta">user.manager.class</span>=<span class="string">azkaban.user.XmlUserManager</span></span><br><span class="line"><span class="meta">user.manager.xml.file</span>=<span class="string">/usr/local/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/conf/azkaban-users.xml</span></span><br><span class="line"><span class="comment"># Loader for projects</span></span><br><span class="line"><span class="meta">executor.global.properties</span>=<span class="string">/usr/local/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/conf/global.properties</span></span><br><span class="line"><span class="meta">azkaban.project.dir</span>=<span class="string">projects</span></span><br><span class="line"><span class="comment"># Velocity dev mode</span></span><br><span class="line"><span class="meta">velocity.dev.mode</span>=<span class="string">false</span></span><br><span class="line"><span class="comment"># Azkaban Jetty server properties.</span></span><br><span class="line"><span class="meta">jetty.use.ssl</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">jetty.maxThreads</span>=<span class="string">25</span></span><br><span class="line"><span class="meta">jetty.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="comment"># Where the Azkaban web server is located</span></span><br><span class="line"><span class="meta">azkaban.webserver.url</span>=<span class="string">http://localhost:8081</span></span><br><span class="line"><span class="comment"># mail settings</span></span><br><span class="line"><span class="meta">mail.sender</span>=<span class="string"></span></span><br><span class="line"><span class="meta">mail.host</span>=<span class="string"></span></span><br><span class="line"><span class="comment"># User facing web server configurations used to construct the user facing server URLs. They are useful when there is a reverse proxy between Azkaban web servers and users.</span></span><br><span class="line"><span class="comment"># enduser -&gt; myazkabanhost:443 -&gt; proxy -&gt; localhost:8081</span></span><br><span class="line"><span class="comment"># when this parameters set then these parameters are used to generate email links.</span></span><br><span class="line"><span class="comment"># if these parameters are not set then jetty.hostname, and jetty.port(if ssl configured jetty.ssl.port) are used.</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_hostname=myazkabanhost.com</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_ssl_port=443</span></span><br><span class="line"><span class="comment"># azkaban.webserver.external_port=8081</span></span><br><span class="line"><span class="meta">job.failure.email</span>=<span class="string"></span></span><br><span class="line"><span class="meta">job.success.email</span>=<span class="string"></span></span><br><span class="line"><span class="meta">lockdown.create.projects</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">cache.directory</span>=<span class="string">cache</span></span><br><span class="line"><span class="comment"># JMX stats</span></span><br><span class="line"><span class="meta">jetty.connector.stats</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">executor.connector.stats</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># Azkaban plugin settings</span></span><br><span class="line"><span class="meta">azkaban.jobtype.plugin.dir</span>=<span class="string">/usr/local/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/plugins/jobtypes</span></span><br><span class="line"><span class="comment"># Azkaban mysql settings by default. Users should configure their own username and password.</span></span><br><span class="line"><span class="meta">database.type</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">mysql.port</span>=<span class="string">3306</span></span><br><span class="line"><span class="meta">mysql.host</span>=<span class="string">数据库IP</span></span><br><span class="line"><span class="meta">mysql.database</span>=<span class="string">azkaban</span></span><br><span class="line"><span class="meta">mysql.user</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">mysql.password</span>=<span class="string">数据库密码</span></span><br><span class="line"><span class="meta">mysql.numconnections</span>=<span class="string">100</span></span><br><span class="line"><span class="comment"># Azkaban Executor settings</span></span><br><span class="line"><span class="meta">executor.maxThreads</span>=<span class="string">50</span></span><br><span class="line"><span class="meta">executor.flow.threads</span>=<span class="string">30</span></span><br><span class="line"><span class="meta">executor.port</span>=<span class="string">12321</span></span><br></pre></td></tr></table></figure><p>下载新版JDBC驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-8.0.22.tar.gz</span><br><span class="line">tar -zxvf mysql-connector-java-8.0.22.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mysql-connector-java-8.0.22</span><br><span class="line">mv mysql-connector-java-8.0.22.jar /usr/<span class="built_in">local</span>/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/lib</span><br><span class="line">rm -rf mysql-connector-java-8.0.22.tar.gz mysql-connector-java-8.0.22</span><br></pre></td></tr></table></figure><p>修改<code>/usr/local/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT/plugins/jobtypes</code>下的commonprivate.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># set execute-as-user</span></span><br><span class="line"><span class="meta">execute.as.user</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">azkaban.native.lib</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure><p>将这个配置文件复制到azkaban的exec-server路径下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/<span class="built_in">local</span>/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT/plugins/ /usr/<span class="built_in">local</span>/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT</span><br></pre></td></tr></table></figure><h3 id="环境变量-1"><a href="#环境变量-1" class="headerlink" title="环境变量"></a>环境变量</h3><p>在<code>/etc/profile/</code>添加Azkaban的变量路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AZKABAN_WEB_HOME=/usr/<span class="built_in">local</span>/azkaban/azkaban-web-server/build/distributions/azkaban-web-server-0.1.0-SNAPSHOT</span><br><span class="line">AZKABAN_EXEC_HOME=/usr/<span class="built_in">local</span>/azkaban/azkaban-exec-server/build/distributions/azkaban-exec-server-0.1.0-SNAPSHOT</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$AZKABAN_EXEC_HOME</span>/bin:<span class="variable">$AZKABAN_WEB_HOME</span>/bin</span><br></pre></td></tr></table></figure><h3 id="启动测试"><a href="#启动测试" class="headerlink" title="启动测试"></a>启动测试</h3><p>首先启动Executor</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-exec.sh</span><br><span class="line">jps</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_exec.png" alt="基于气象数据的环境状况及变化趋势分析_exec" style="zoom:67%;" /><p>手动激活</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://master1:12321/executor?action=activate</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_active.png" alt="基于气象数据的环境状况及变化趋势分析_active"></p><p>启动webserver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-web.sh</span><br><span class="line">jps</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_web.png" alt="基于气象数据的环境状况及变化趋势分析_web"></p><p>浏览器访问master1:8081的Azkaban Web页面</p><p>如果未修改azkaban-user.xml，那么可以使用默认密码登录，用户名和密码都是azkaban</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_web8081.png" alt="基于气象数据的环境状况及变化趋势分析_web8081"></p><h1 id="数据采集"><a href="#数据采集" class="headerlink" title="数据采集"></a>数据采集</h1><p>本阶段采用部署在阿里云服务器上的Python爬虫，通过和风天气API，爬取最近的天气数据，然后把结果存储到阿里云的MySQL数据库中</p><p>云服务器上的Python脚本将每日新增的数据导出到指定文件夹</p><p>云上的Flume监控该文件夹，发现新数据生成后，通过avro协议流式传输到本地虚拟集群上</p><p>本地虚拟机的Flume接受远程流式数据，并写入到HDFS中</p><h2 id="API调试"><a href="#API调试" class="headerlink" title="API调试"></a>API调试</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>​    点击进入<a href="https://dev.qweather.com/">和风天气开发者平台</a>， 注册账号并登录，进入控制台，点击应用管理 -&gt; 创建应用</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_选择应用版本.png" alt="基于气象数据的环境状况及变化趋势分析_选择应用版本" style="zoom:67%;" /><p>创建一个任意名称的应用，下一步选择KEY为Web API，并输入Web API名称即可</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_选择KEY类型.png" alt="基于气象数据的环境状况及变化趋势分析_选择KEY类型" style="zoom: 67%;" /><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_应用.png" alt="基于气象数据的环境状况及变化趋势分析_应用"></p><p>为了安全，将KEY打码在下文中用123ABC代替</p><h3 id="API文档"><a href="#API文档" class="headerlink" title="API文档"></a>API文档</h3><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_API概述.png" alt="基于气象数据的环境状况及变化趋势分析_API概述" style="zoom:80%;" /><p>通过查阅API开发文档概述，发现想要获取某些位置的信息，必须先获取该城市的代号</p><p>通过查阅名词释义，找到一个Github链接，提供了一些常见城市的Location ID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/qwd/LocationList.git</span><br></pre></td></tr></table></figure><p>国内城市ID列表在文件 <code>China-City-List-latest.csv</code> 中</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_LocationID.png" alt="基于气象数据的环境状况及变化趋势分析_LocationID"></p><p>此时我们拿到了城市的LocationID，下一步探索API如何请求</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_API分析.png" alt="基于气象数据的环境状况及变化趋势分析_API分析" style="zoom:80%;" /><p>API如上图，请求参数向下继续看</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_历史数据API参数.png" alt="基于气象数据的环境状况及变化趋势分析_历史数据API参数"></p><p>只有这两个是必须参数，因此我们构造一个最简单的请求测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://devapi.qweather.com/v7/weather/now?location=101010100&amp;key=123abc</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_API测试.png" alt="基于气象数据的环境状况及变化趋势分析_API测试"></p><p>API测试成功</p><p>当然，以上只是最简单的应用案例，想要达到应用的目标还需要使用其他API，需要进一步构造请求以达到数据采集的目的，以下是我用到的API</p><ol><li><p>和风天气提供历史十天的数据：</p><p><strong>天气历史数据</strong> <strong>HTTP GET</strong></p><ul><li>商业版 <code>https://datasetapi.qweather.com/v7/historical/weather?&#123;请求参数&#125;</code></li></ul><p><strong>空气质量历史数据</strong> <strong>HTTP GET</strong></p><ul><li>商业版 <code>https://datasetapi.qweather.com/v7/historical/air?&#123;请求参数&#125;</code></li></ul></li><li><p>每日实时天气数据</p><p><strong>实况天气</strong> <strong>HTTP GET</strong></p><ul><li>商业版 <code>https://api.qweather.com/v7/weather/now?&#123;请求参数&#125;</code></li><li>开发版 <code>https://devapi.qweather.com/v7/weather/now?&#123;请求参数&#125;</code></li></ul></li></ol><h2 id="编写爬虫"><a href="#编写爬虫" class="headerlink" title="编写爬虫"></a>编写爬虫</h2><p>爬虫上传至GitHub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/HanZhuo-ii/Hefeng-Weather.git</span><br></pre></td></tr></table></figure><p>爬虫运行完成后会将数据保存到阿里云MySQL数据库</p><h2 id="数据传输"><a href="#数据传输" class="headerlink" title="数据传输"></a>数据传输</h2><p>编写Python脚本，定时将数据导出到 <code>/home/Hadoop/Data/weatherData</code> 目录，CSV文件，然后使用Flume监控该目录，</p><h3 id="MySQL数据导出"><a href="#MySQL数据导出" class="headerlink" title="MySQL数据导出"></a>MySQL数据导出</h3><p>使用Python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">client = pymysql.connect(<span class="string">&quot;39.106.111.245&quot;</span>, <span class="string">&quot;hanzhuo&quot;</span>, <span class="string">&quot;000403&quot;</span>, <span class="string">&quot;qweather&quot;</span>)</span><br><span class="line">cursor = client.cursor()</span><br><span class="line"></span><br><span class="line">date = (datetime.datetime.now() - datetime.timedelta(days=<span class="number">0</span>)).strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>)</span><br><span class="line">cursor.execute(<span class="string">&quot;select * from qweather.weather where `time`=&#x27;&#123;&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(date))</span><br><span class="line">data = cursor.fetchall()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&quot;weatherData&quot;</span>):</span><br><span class="line">    os.mkdir(<span class="string">&quot;weatherData&quot;</span>)</span><br><span class="line">filename = <span class="string">&#x27;weatherData/&#123;&#125;.csv&#x27;</span>.<span class="built_in">format</span>(date)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, mode=<span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> item:</span><br><span class="line">            f.write(<span class="built_in">str</span>(i))</span><br><span class="line">            <span class="keyword">if</span> i != item[-<span class="number">1</span>]:</span><br><span class="line">                f.write(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">        f.write(<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="Flume负载均衡流式传输"><a href="#Flume负载均衡流式传输" class="headerlink" title="Flume负载均衡流式传输"></a>Flume负载均衡流式传输</h3><p>本地虚拟机master1上的Flume配置文件，Master2上的配置文件只需要修改该端口号为45679即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">a1.sources = r1</span><br><span class="line">a1.channels = c1</span><br><span class="line">a1.sinks = k1</span><br><span class="line"></span><br><span class="line"># 具体定义source</span><br><span class="line">a1.sources.r1.type = avro</span><br><span class="line">a1.sources.r1.bind = 0.0.0.0# 接受任何来源的Flume数据流</span><br><span class="line">a1.sources.r1.port = 45678# 虚拟机1 Flume端口</span><br><span class="line"></span><br><span class="line"># 具体定义channel</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line"># 定义拦截器，为消息添加时间戳</span><br><span class="line">a1.sources.r1.interceptors = i1</span><br><span class="line">a1.sources.r1.interceptors.i1.type = org.apache.flume.interceptor.TimestampInterceptor$Builder</span><br><span class="line"></span><br><span class="line"># 具体定义sink</span><br><span class="line">a1.sinks.k1.type = hdfs</span><br><span class="line">a1.sinks.k1.hdfs.path = /flume/weatherData# 虚拟机HDFS路径</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix = events-</span><br><span class="line">a1.sinks.k1.hdfs.fileType = DataStream# 数据流，防止乱码</span><br><span class="line">a1.sinks.k1.hdfs.round = true</span><br><span class="line"></span><br><span class="line">a1.sinks.k1.hdfs.rollInterval=10# 如果有变动，每十秒生成一个文件</span><br><span class="line">a1.sinks.k1.hdfs.rollSize=0</span><br><span class="line">a1.sinks.k1.hdfs.rollCount=0</span><br><span class="line">a1.sinks.k1.hdfs.idleTimeout=0</span><br><span class="line">a1.sinks.k1.hdfs.roundUnit = minute</span><br><span class="line">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class="line">a1.sinks.k1.hdfs.fileType=DataStream</span><br><span class="line"></span><br><span class="line"># 不按照条数生成文件</span><br><span class="line">a1.sinks.k1.hdfs.rollCount = 0</span><br><span class="line">##HDFS上的文件达到128M时生成一个文件</span><br><span class="line">a1.sinks.k1.hdfs.rollSize = 10240</span><br><span class="line">##HDFS上的文件达到60秒生成一个文件</span><br><span class="line">a1.sinks.k1.hdfs.rollInterval = 120</span><br><span class="line"></span><br><span class="line"># 组装source、channel、sink</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><p>修改云服务器上的Flume配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#从本地的文件夹中读取文件，然后发送为avro文件</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.channels = c1</span><br><span class="line">a1.sinks = k1, k2</span><br><span class="line"></span><br><span class="line">#set gruop</span><br><span class="line">a1.sinkgroups = g1</span><br><span class="line"></span><br><span class="line">#具体定义source</span><br><span class="line">a1.sources.r1.type = spooldir</span><br><span class="line">a1.sources.r1.spoolDir = /home/Hadoop/Data/weatherData# 监控的文件夹</span><br><span class="line"></span><br><span class="line">#具体定义channel</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">#定义sink k1</span><br><span class="line">a1.sinks.k1.type = avro</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line">a1.sinks.k1.hostname = 183.198.0.216# 这一项为本地虚拟机所在的公网IP</span><br><span class="line">a1.sinks.k1.port = 45678# 本地虚拟机Master1向公网暴露的端口</span><br><span class="line"></span><br><span class="line">#定义sink k2</span><br><span class="line">a1.sinks.k2.type = avro</span><br><span class="line">a1.sinks.k2.channel = c1</span><br><span class="line">a1.sinks.k2.hostname = 183.198.0.216# 这一项为本地虚拟机所在的公网IP</span><br><span class="line">a1.sinks.k2.port = 45679# 本地虚拟机Master2向公网暴露的端口</span><br><span class="line"></span><br><span class="line">#set sink group</span><br><span class="line">a1.sinkgroups.g1.sinks = k1 k2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#set failover</span><br><span class="line">a1.sinkgroups.g1.processor.type = load_balance</span><br><span class="line">a1.sinkgroups.g1.processor.backoff = true</span><br><span class="line">a1.sinkgroups.g1.processor.selector = round_robin</span><br><span class="line">a1.sinkgroups.g1.processor.selector.maxTimeOut=10000</span><br></pre></td></tr></table></figure><p>如果虚拟机网络是NAT模式，则需要配置虚拟机端口转发</p><p>因为是NAT模式，多了一个网关，网络流量直接发送到物理机，此时就需要将服务器来的数据通过NAT网关，转发到虚拟机上的指定端口。</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_虚拟网络编辑器.png" alt="基于气象数据的环境状况及变化趋势分析_虚拟网络编辑器"></p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_端口转发.png" alt="基于气象数据的环境状况及变化趋势分析_端口转发" style="zoom:80%;" /><p>再添加一个端口转发，到Master2</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_添加端口转发.png" alt="基于气象数据的环境状况及变化趋势分析_添加端口转发" style="zoom: 67%;" /><p>如果你的物理机是通过路由器联网，则还需要在路由器上配置端口转发</p><p>因为通过路由器上网，网络流量会先发送到路由器，也相当于一个网关</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_路由器端口转发.png" alt="基于气象数据的环境状况及变化趋势分析_路由器端口转发" style="zoom:67%;" /><p>物理机局域网IP查询方法：</p><p>设置–网络和Internet–状态–点击右侧你的联网方式，点击属性，在下方找到IPV4地址即可</p><p>启动Flume</p><p>首先启动虚拟机的Flume，再启动阿里云的Flume</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flume-ng agent --conf conf --conf-file weatherData.conf --name a1 -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_启动Flume.png" alt="基于气象数据的环境状况及变化趋势分析_启动Flume" style="zoom:67%;" /><h1 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h1><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><p>利用MapReduce进行数据清洗，并存储到Hive中，主要将空值替换为Hive中能识别到的空值</p><h3 id="创建Maven项目"><a href="#创建Maven项目" class="headerlink" title="创建Maven项目"></a>创建Maven项目</h3><p>略</p><h3 id="编写MapReduce程序"><a href="#编写MapReduce程序" class="headerlink" title="编写MapReduce程序"></a>编写MapReduce程序</h3><p>导包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.NullWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.BasicConfigurator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br></pre></td></tr></table></figure><p>清洗函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">verifyData</span><span class="params">(String[] words)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (words[<span class="number">7</span>].equals(<span class="string">&quot;-&quot;</span>))&#123;</span><br><span class="line">        words[<span class="number">7</span>] = <span class="string">&quot;\\N&quot;</span>;<span class="comment">// Hive中空值为\N</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> StringUtils.join(words, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义Mapper，继承：org.apache.hadoop.mapreduce.Mapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 自定义Mapper继承：org.apache.hadoop.mapreduce.Mapper，实现map方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCountMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">LongWritable</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">NullWritable</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(LongWritable key, Text value, Context context)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String[] words = value.toString().split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        String text = verifyData(words);</span><br><span class="line">        context.write(<span class="keyword">new</span> Text(text), NullWritable.get());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>工作流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    Date d = <span class="keyword">new</span> Date();</span><br><span class="line">    System.out.println(d);</span><br><span class="line">    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">    String dateNowStr = sdf.format(d);</span><br><span class="line"></span><br><span class="line">    BasicConfigurator.configure();</span><br><span class="line">    Configuration conf = <span class="keyword">new</span> Configuration();</span><br><span class="line"></span><br><span class="line">    Job job = Job.getInstance(conf);</span><br><span class="line">    job.setJarByClass(VerifyData.class);</span><br><span class="line"></span><br><span class="line">    job.setNumReduceTasks(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    job.setMapperClass(WordCountMapper.class);</span><br><span class="line"></span><br><span class="line">    job.setMapOutputKeyClass(Text.class);</span><br><span class="line">    job.setMapOutputValueClass(IntWritable.class);</span><br><span class="line"></span><br><span class="line">    job.setOutputKeyClass(Text.class);</span><br><span class="line">    job.setOutputValueClass(IntWritable.class);</span><br><span class="line"></span><br><span class="line">    FileInputFormat.setInputPaths(job, <span class="keyword">new</span> Path(args[<span class="number">0</span>]));</span><br><span class="line">    FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]+<span class="string">&quot;/&quot;</span>+dateNowStr));  <span class="comment">// 每日执行一次</span></span><br><span class="line">    <span class="keyword">boolean</span> b = job.waitForCompletion(<span class="keyword">true</span>);</span><br><span class="line">    System.exit(b ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编译jar包"><a href="#编译jar包" class="headerlink" title="编译jar包"></a>编译jar包</h3><p>首先配置打包环境</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_ProjectStru.png" alt="基于气象数据的环境状况及变化趋势分析_ProjectStru"></p><p>添加打包方式</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_AddJar.png" alt="基于气象数据的环境状况及变化趋势分析_AddJar"></p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_AddJar1.png" alt="基于气象数据的环境状况及变化趋势分析_AddJar1"></p><p>回到项目，点击Build-&gt;Artifacts，选择Build即可</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_BuildJar.png" alt="基于气象数据的环境状况及变化趋势分析_BuildJar"></p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_BuildJar1.png" alt="基于气象数据的环境状况及变化趋势分析_BuildJar1"></p><h3 id="集群运行JAR包"><a href="#集群运行JAR包" class="headerlink" title="集群运行JAR包"></a>集群运行JAR包</h3><p>使用XFTP将打包好的jar包上传到Hadoop集群，执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop jar MapReduceDataVerify.jar org.myorg.VerifyData /flume/weatherData /MapReduce</span><br></pre></td></tr></table></figure><p>说明：</p><p>org.myorg 主函数包名</p><p>VerifyData 主函数</p><p>/flume/weatherData 为HDFS的数据目录</p><p>/MapReduce 为HDFS输出目录</p><h2 id="导入Hive"><a href="#导入Hive" class="headerlink" title="导入Hive"></a>导入Hive</h2><h3 id="启动Hive-Server"><a href="#启动Hive-Server" class="headerlink" title="启动Hive Server"></a>启动Hive Server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hiveserver2 &amp;</span><br></pre></td></tr></table></figure><p>执行后需要等待一段时间，大概几分钟，直到master1:10002可以访问为止</p><h3 id="IDEA连接Hive"><a href="#IDEA连接Hive" class="headerlink" title="IDEA连接Hive"></a>IDEA连接Hive</h3><p>打开IDEA，右侧的Database，新建一个Hive连接，如图所示（需要在IDEA的setting-plugins下载bigdata tools）</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Tools.png" alt="基于气象数据的环境状况及变化趋势分析_Tools"></p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Hive链接.png" alt="基于气象数据的环境状况及变化趋势分析_Hive链接"></p><p>填入相关信息，进行连接</p><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p>首先按照字段创建数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> default.qweather</span><br><span class="line">(</span><br><span class="line">ID string,</span><br><span class="line">region <span class="type">int</span>,</span><br><span class="line">name string,</span><br><span class="line">time_ string,</span><br><span class="line">aqi string,</span><br><span class="line">level string,</span><br><span class="line">category string,</span><br><span class="line">primary_ string,</span><br><span class="line">pm10 string,</span><br><span class="line">pm2p5 string,</span><br><span class="line">no2 string,</span><br><span class="line">so2 string,</span><br><span class="line">co string,</span><br><span class="line">o3 string,</span><br><span class="line">tempMin string,</span><br><span class="line">tempMax string,</span><br><span class="line">text string,</span><br><span class="line">windScale string,</span><br><span class="line">windSpeed string,</span><br><span class="line">humidity string,</span><br><span class="line">precip string,</span><br><span class="line">pressure string</span><br><span class="line">)<span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> default.qweather</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> qweather_pk</span><br><span class="line"><span class="keyword">primary</span> key (ID) disable novalidate;</span><br></pre></td></tr></table></figure><h3 id="编写Shell"><a href="#编写Shell" class="headerlink" title="编写Shell"></a>编写Shell</h3><p>将MapReduce清洗完的数据导入到Hive数据仓库中，因为文件较多，编写shell脚本可以减少工作量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim HiveImport.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"></span><br><span class="line">todaydate=`date -d -0days +%Y-%m-%d`</span><br><span class="line">`hdfs dfs -rm /MapReduce/qweather/$todaydate/_SUCCESS`</span><br><span class="line">for file_path in `hdfs dfs -ls /MapReduce/qweather/$todaydate | awk  -F &#x27; &#x27;  &#x27;&#123;print $8&#125;&#x27; `</span><br><span class="line">do</span><br><span class="line">        echo $file_path</span><br><span class="line">        hive -e &quot;LOAD DATA INPATH &#x27;$file_path&#x27; INTO TABLE default.qweather&quot;;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>编写完成后执行shell脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh HiveImport.sh</span><br></pre></td></tr></table></figure><h3 id="查询导入结果"><a href="#查询导入结果" class="headerlink" title="查询导入结果"></a>查询导入结果</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> default.qweather;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_查询导入结果.png" alt="基于气象数据的环境状况及变化趋势分析_查询导入结果"></p><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><h3 id="确认需求"><a href="#确认需求" class="headerlink" title="确认需求"></a>确认需求</h3><p>统计城市在某段时间内的平均AQI（空气质量），分析出这段时间平均空气质量最好的城市与最差的城市</p><p>统计城市在某段时间内的晴天天数与雨天天数，分析晴天最多的城市与雨天次数最多的城市</p><h3 id="编写HQL"><a href="#编写HQL" class="headerlink" title="编写HQL"></a>编写HQL</h3><p>该语句可以将查询结果导出到HDFS文件系统中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> overwrite directory &quot;/user/hive/warehouse/select/qweather&quot;</span><br><span class="line"><span class="type">row</span> format delimited</span><br><span class="line">fields terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line"><span class="keyword">select</span> ttt1.name <span class="keyword">as</span> name, ttt1.rain <span class="keyword">as</span> sum_rain, ttt1.sun <span class="keyword">as</span> sum_run, ttt2.aqi <span class="keyword">as</span> avg_aqi <span class="keyword">from</span></span><br><span class="line">    (<span class="keyword">select</span> tt1.name, tt1.rain, tt2.sun <span class="keyword">from</span></span><br><span class="line">        (<span class="keyword">select</span> t1.name, t2.rain <span class="keyword">from</span></span><br><span class="line">            (<span class="keyword">select</span> name <span class="keyword">from</span> qweather <span class="keyword">group</span> <span class="keyword">by</span> name) <span class="keyword">as</span> t1</span><br><span class="line">                <span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line">            (<span class="keyword">select</span> name, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> rain <span class="keyword">from</span> qweather <span class="keyword">where</span> text <span class="keyword">like</span> &quot;%雨%&quot; <span class="keyword">group</span> <span class="keyword">by</span> name) <span class="keyword">as</span> t2</span><br><span class="line">            <span class="keyword">on</span> t1.name <span class="operator">=</span> t2.name) <span class="keyword">as</span> tt1</span><br><span class="line">            <span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line">        (<span class="keyword">select</span> name, <span class="built_in">count</span>(text) <span class="keyword">as</span> sun <span class="keyword">from</span> qweather <span class="keyword">where</span> text<span class="operator">=</span>&quot;晴&quot; <span class="keyword">group</span> <span class="keyword">by</span> name) <span class="keyword">as</span> tt2</span><br><span class="line">        <span class="keyword">on</span> tt1.name<span class="operator">=</span>tt2.name) <span class="keyword">as</span> ttt1</span><br><span class="line">        <span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line">    (<span class="keyword">select</span> name, <span class="built_in">avg</span>(aqi) <span class="keyword">as</span> aqi <span class="keyword">from</span> qweather <span class="keyword">group</span> <span class="keyword">by</span> name) <span class="keyword">as</span> ttt2</span><br><span class="line"><span class="keyword">on</span> ttt1.name <span class="operator">=</span> ttt2.name;</span><br></pre></td></tr></table></figure><h2 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h2><h3 id="MySQL创建表"><a href="#MySQL创建表" class="headerlink" title="MySQL创建表"></a>MySQL创建表</h3><p>首先按照上面的查询结果，创建MySQL表，注意顺序要一致</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `weatheranaly` (</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">40</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `sum_rain` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `sum_run` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `avg_aqi` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`name`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br></pre></td></tr></table></figure><h3 id="Sqoop数据迁移-1"><a href="#Sqoop数据迁移-1" class="headerlink" title="Sqoop数据迁移"></a>Sqoop数据迁移</h3><p>使用Sqoop将HDFS中的查询结果导入到MySQL</p><p>hive中为null的是以\N代替的，hive表中列的值如果为null，就需要添加参数</p><p><code> --input-null-string &#39;\\N&#39; --input-null-non-string &#39;\\N&#39;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sqoop <span class="built_in">export</span> --connect \</span><br><span class="line">jdbc:mysql://127.0.0.1:3306/qweather \</span><br><span class="line">--username root \</span><br><span class="line">--password MyNewPass4! \</span><br><span class="line">--table weatheranaly \</span><br><span class="line">--fields-terminated-by <span class="string">&#x27;,&#x27;</span> \</span><br><span class="line">--export-dir /user/hive/warehouse/select/qweather \</span><br><span class="line">--input-null-string <span class="string">&#x27;\\N&#x27;</span> --input-null-non-string <span class="string">&#x27;\\N&#x27;</span></span><br></pre></td></tr></table></figure><p>迁移成功截图</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_迁移到MySQL.png" alt="基于气象数据的环境状况及变化趋势分析_迁移到MySQL" style="zoom:67%;" /><h3 id="查询迁移结果"><a href="#查询迁移结果" class="headerlink" title="查询迁移结果"></a>查询迁移结果</h3><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_查询迁移结果.png" alt="基于气象数据的环境状况及变化趋势分析_查询迁移结果" style="zoom:67%;" /><h1 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h1><h2 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_创建SB0.png" alt="基于气象数据的环境状况及变化趋势分析_创建SB0"></p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_创建SB.png" alt="基于气象数据的环境状况及变化趋势分析_创建SB"></p><p>按照下图勾选所需要的Dependencies</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_创建SB1.png" alt="基于气象数据的环境状况及变化趋势分析_创建SB1"></p><p>选择 file - setting 设置Maven仓库，选择本地仓库路径即可</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_本地Maven0.png" alt="基于气象数据的环境状况及变化趋势分析_本地Maven0"></p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_本地Maven1.png" alt="基于气象数据的环境状况及变化趋势分析_本地Maven1"></p><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>前端部分选用Echart5进行可视化</p><p>编译下载echarts，定制需要的echarts模块</p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_下载Echarts.png" alt="基于气象数据的环境状况及变化趋势分析_下载Echarts" style="zoom:67%;" /><p>等待自动编译</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_等待编译.png" alt="基于气象数据的环境状况及变化趋势分析_等待编译"></p><p>将所需资源文件放到resource文件夹中</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_网页位置.png" alt="基于气象数据的环境状况及变化趋势分析_网页位置"></p><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><h4 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h4><h5 id="rootJumpIndex-java"><a href="#rootJumpIndex-java" class="headerlink" title="rootJumpIndex.java"></a>rootJumpIndex.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myblog.datav.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">rootJumpIndex</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">jump</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="DataAPI-java"><a href="#DataAPI-java" class="headerlink" title="DataAPI.java"></a>DataAPI.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myblog.datav.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.myblog.datav.selectData.selectData;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataAPI</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/areaEchartsData&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">areaEchartsData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> selectData.areaEchartsData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/areaEchartsMap&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">areaEchartsMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> selectData.areaEchartsMap();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/SJZTodayInfo&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">SJZTodayInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> selectData.SJZTodayInfo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/avgAQITop10&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">avgAQITop10</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> selectData.avgAQITop10();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/SJZTodayPollution&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">SJZTodayPollution</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> selectData.SJZTodayPollution();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/temp&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">temp</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> selectData.temp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/sumRain&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">sumRain</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> selectData.sumRain();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="selectData-java"><a href="#selectData-java" class="headerlink" title="selectData.java"></a>selectData.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.myblog.datav.selectData;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">selectData</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">selectData</span><span class="params">(JdbcTemplate jdbcTemplate)</span> </span>&#123;</span><br><span class="line">        selectData.jdbcTemplate = jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">SJZTodayInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//        String date = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).format(new Date());</span></span><br><span class="line">        String sql = <span class="string">&quot;SELECT tempMin, tempMax, aqi, text FROM qweather.weather where name=\&quot;石家庄\&quot; and time=\&quot;2020-12-20\&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//        String sql = str + date;</span></span><br><span class="line">        Map&lt;String, Object&gt; map = jdbcTemplate.queryForMap(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">areaEchartsData</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String sql = <span class="string">&quot;SELECT name, avg_aqi as value FROM qweather.weatheranaly;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; data = <span class="keyword">new</span> ArrayList&lt;&gt;();    <span class="comment">// 初始化用于存储数据的列表</span></span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; list = jdbcTemplate.queryForList(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map&lt;String, Object&gt; temp: list) &#123;</span><br><span class="line">            temp.replace(<span class="string">&quot;value&quot;</span>, <span class="keyword">new</span> Double(String.valueOf(temp.get(<span class="string">&quot;value&quot;</span>))).intValue());</span><br><span class="line">            data.add(temp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">areaEchartsMap</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String sql = <span class="string">&quot;SELECT * FROM qweather.citylocation;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; data = <span class="keyword">new</span> HashMap&lt;&gt;();    <span class="comment">// 初始化用于存储数据的列表</span></span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; list = jdbcTemplate.queryForList(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map&lt;String, Object&gt; temp: list) &#123;</span><br><span class="line"></span><br><span class="line">            List&lt;Double&gt; array = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            array.add(<span class="keyword">new</span> Double(String.valueOf(temp.get(<span class="string">&quot;Longitude&quot;</span>))));</span><br><span class="line">            array.add(<span class="keyword">new</span> Double(String.valueOf(temp.get(<span class="string">&quot;Latitude&quot;</span>))));</span><br><span class="line">            data.put(String.valueOf(temp.get(<span class="string">&quot;name&quot;</span>)), array);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">avgAQITop10</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;SELECT name, avg_aqi FROM qweather.weatheranaly ORDER BY avg_aqi DESC limit 10;&quot;</span>;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; list = jdbcTemplate.queryForList(sql);</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; data = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; listTemp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        listTemp.add(<span class="string">&quot;score&quot;</span>);</span><br><span class="line">        listTemp.add(<span class="string">&quot;AQI&quot;</span>);</span><br><span class="line">        listTemp.add(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        data.add(listTemp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span> (Map&lt;String, Object&gt; temp: list) &#123;</span><br><span class="line">            listTemp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            listTemp.add(String.valueOf(i*<span class="number">10</span>));</span><br><span class="line">            listTemp.add(String.valueOf(temp.get(<span class="string">&quot;avg_aqi&quot;</span>)));</span><br><span class="line">            listTemp.add(String.valueOf(temp.get(<span class="string">&quot;name&quot;</span>)));</span><br><span class="line">            data.add(<span class="number">1</span>, listTemp);</span><br><span class="line">            i -=  <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">SJZTodayPollution</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//        String date = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).format(new Date());</span></span><br><span class="line">        String sql = <span class="string">&quot;SELECT pm2p5, pm10, no2, so2, co, o3 FROM qweather.weather where name=\&quot;石家庄\&quot; and time=\&quot;2020-12-20\&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//        String sql = str + date;</span></span><br><span class="line">        Map&lt;String, Object&gt; map = jdbcTemplate.queryForMap(sql);</span><br><span class="line">        List&lt;Object&gt; data = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String key:map.keySet()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; temp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            temp.put(<span class="string">&quot;name&quot;</span>, key);</span><br><span class="line">            temp.put(<span class="string">&quot;value&quot;</span>, map.get(key));</span><br><span class="line">            data.add(temp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">temp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;SELECT time, tempMin, tempMax FROM qweather.weather WHERE name=\&quot;石家庄\&quot; ORDER BY time DESC LIMIT 15;&quot;</span>;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; list = jdbcTemplate.queryForList(sql);</span><br><span class="line">        Map&lt;String, Object&gt; data = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        List&lt;Object&gt; tempMin = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;Object&gt; tempMax = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;Object&gt; time = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map&lt;String, Object&gt; temp: list)&#123;</span><br><span class="line">            tempMin.add(<span class="number">0</span>, temp.get(<span class="string">&quot;tempMin&quot;</span>));</span><br><span class="line">            tempMax.add(<span class="number">0</span>, temp.get(<span class="string">&quot;tempMax&quot;</span>));</span><br><span class="line">            time.add(<span class="number">0</span>, String.valueOf(temp.get(<span class="string">&quot;time&quot;</span>)).split(<span class="string">&quot;-&quot;</span>)[<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        data.put(<span class="string">&quot;tempMin&quot;</span>, tempMin);</span><br><span class="line">        data.put(<span class="string">&quot;tempMax&quot;</span>, tempMax);</span><br><span class="line">        data.put(<span class="string">&quot;date&quot;</span>, time);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">sumRain</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;SELECT name, count(*) as sumRain FROM qweather.weather WHERE text LIKE \&quot;%雨%\&quot; GROUP BY name ORDER BY sumRain DESC LIMIT 8;\n&quot;</span>;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; list = jdbcTemplate.queryForList(sql);</span><br><span class="line">        List&lt;Object&gt; name = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;Object&gt; value = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map&lt;String, Object&gt; temp: list)&#123;</span><br><span class="line">            name.add(temp.get(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">            value.add(temp.get(<span class="string">&quot;sumRain&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">        map.put(<span class="string">&quot;sumRain&quot;</span>, value);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数据交换"><a href="#数据交换" class="headerlink" title="数据交换"></a>数据交换</h3><p>采用Ajax技术，将后端提供的数据以json形式返回给前端页面</p><p>ajaxDataLoad.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> SelectData = <span class="function"><span class="keyword">function</span> (<span class="params">api</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> returnData;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        <span class="attr">url</span>: api,</span><br><span class="line">        <span class="comment">//type、contentType必填,指明传参方式</span></span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">async</span> : <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">contentType</span>: <span class="string">&quot;application/json;charset=utf-8&quot;</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">response</span>)</span>&#123;</span><br><span class="line">            <span class="comment">//前端调用成功后，可以处理后端传回的json格式数据。</span></span><br><span class="line">            returnData = response;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> returnData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="工作流调度"><a href="#工作流调度" class="headerlink" title="工作流调度"></a>工作流调度</h1><p>整体运行逻辑由运行在Master2上的Azkaban控制，后端使用Shell脚本，然后使用Azkaban调度Shell脚本的运行，方便维护。</p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Azkaban调度流程.png" alt="基于气象数据的环境状况及变化趋势分析_Azkaban调度流程"></p><p><img src= "/img/loading.gif" data-lazy-src="D:\Hexo\cdn\images\基于气象数据的环境状况及变化趋势分析_Azkaban调度中.png" alt="基于气象数据的环境状况及变化趋势分析_Azkaban调度中"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Flume 监控日志文件夹</title>
      <link href="/2020/12/20/flume-jian-kong-ri-zhi-wen-jian-jia/"/>
      <url>/2020/12/20/flume-jian-kong-ri-zhi-wen-jian-jia/</url>
      
        <content type="html"><![CDATA[<div class="note info"><p>Flume搭建详见 <a href="https://myblog.org.cn/2020/12/20/flume-an-zhuang-pei-zhi/">FLume安装配置</a></p></div><h2 id="Flume-配置"><a href="#Flume-配置" class="headerlink" title="Flume 配置"></a>Flume 配置</h2><p>新建flume配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim sources-watching.conf</span><br></pre></td></tr></table></figure><p>同样的，打开<a href="http://flume.apache.org/releases/content/1.9.0/FlumeUserGuide.html">Apache Flume官方文档</a>，查看配置文件</p><h3 id="资源文件夹"><a href="#资源文件夹" class="headerlink" title="资源文件夹"></a>资源文件夹</h3><p>即想要监控的文件夹</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7_doc.png" alt="doc"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7_source.png" alt="source"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a1.channels = ch-1</span><br><span class="line">a1.sources = src-1</span><br><span class="line"></span><br><span class="line">a1.sources.src-1.type = spooldir</span><br><span class="line">a1.sources.src-1.channels = ch-1</span><br><span class="line">a1.sources.src-1.spoolDir = /var/<span class="built_in">log</span>/apache/flumeSpool<span class="comment"># 资源文件夹</span></span><br><span class="line">a1.sources.src-1.fileHeader = <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="存储目标"><a href="#存储目标" class="headerlink" title="存储目标"></a>存储目标</h3><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7_hdfs.png" alt="hdfs"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7_doc1.png" alt="doc1"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a1.channels = c1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.sinks.k1.type = hdfs</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line">a1.sinks.k1.hdfs.path = /flume/events/%y-%m-%d/%H%M/%S</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix = events-</span><br><span class="line">a1.sinks.k1.hdfs.round = <span class="literal">true</span></span><br><span class="line">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class="line">a1.sinks.k1.hdfs.roundUnit = minute</span><br></pre></td></tr></table></figure><p>以上两个是官方给出的例子，可以看到有一些冲突，我们解决一下冲突：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代理Agent为a1，数据源名为s1，数据去处为k1，频道为c1</span></span><br><span class="line">a1.sources = s1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 来源</span></span><br><span class="line">a1.sources.s1.type = spooldir</span><br><span class="line">a1.sources.s1.spoolDir = /var/<span class="built_in">log</span>/apache/flumeSpool<span class="comment"># 日志资源</span></span><br><span class="line">a1.sources.s1.fileHeader = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 去路</span></span><br><span class="line">a1.sinks.k1.type = hdfs</span><br><span class="line">a1.sinks.k1.hdfs.path = /flume/events/%y-%m-%d/%H%M/%S</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix = upload-</span><br><span class="line">a1.sinks.k1.hdfs.round = <span class="literal">true</span></span><br><span class="line">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class="line">a1.sinks.k1.hdfs.roundUnit = minute</span><br><span class="line">a1.sinks.k1.hdfs.useLocalTimeStamp = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">a1.sources.s1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7_conf.png" alt="conf"></p><h3 id="jar包"><a href="#jar包" class="headerlink" title="jar包"></a>jar包</h3><p>删除flume目录下的 <code>lib/guava.xxx.jar</code></p><p>进入Hadoop安装目录，我的Hadooop安装路径为 <code>/usr/local/hadoop-3.1.4</code></p><p>将hadoop安装目录下 <code>share/hadoop/common/lib</code> 里所有的jar包复制到flume目录下的lib里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/<span class="built_in">local</span>/flume/lib/guava*.jar</span><br><span class="line">cp /usr/<span class="built_in">local</span>/hadoop-3.1.4/share/hadoop/common/lib/*.jar /usr/<span class="built_in">local</span>/flume/lib</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="启动HDFS"><a href="#启动HDFS" class="headerlink" title="启动HDFS"></a>启动HDFS</h3><p> 启动Hadoop集群</p><h3 id="启动Flume"><a href="#启动Flume" class="headerlink" title="启动Flume"></a>启动Flume</h3><p>同样的，先进入Flume的配置文件目录 <code>/usr/local/flume/conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动Flume</span></span><br><span class="line">flume-ng agent --conf conf --conf-file sources-watching.conf --name a1 -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><p>将任意文件复制到 <code>/var/log/apache/flumeSpool</code> 下</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7_%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6.png" alt="复制文件"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7_%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B61.png" alt="复制文件1"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7_%E6%A3%80%E6%9F%A5HDFS.png" alt="检查HDFS"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> Flume </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flume安装配置</title>
      <link href="/2020/12/20/flume-an-zhuang-pei-zhi/"/>
      <url>/2020/12/20/flume-an-zhuang-pei-zhi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于CentOS8，Flume 1.9.0搭建</p></blockquote><p>Apache Flume官方网站：<a href="http://flume.apache.org/">http://flume.apache.org/</a></p><p>Flume 1.9.0 清华源地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/apache/flume/1.9.0/apache-flume-1.9.0-bin.tar.gz"><strong>https://mirrors.tuna.tsinghua.edu.cn/apache/flume/1.9.0/apache-flume-1.9.0-bin.tar.gz</strong></a></p><h2 id="Flume-下载"><a href="#Flume-下载" class="headerlink" title="Flume 下载"></a>Flume 下载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择安装位置：/usr/local</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/flume/1.9.0/apache-flume-1.9.0-bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压 重命名 删除压缩文件</span></span><br><span class="line">tar -zxf apache-flume-1.9.0-bin.tar.gz</span><br><span class="line">mv apache-flume-1.9.0-bin flume</span><br><span class="line">rm -rf apache-flume-1.9.0-bin.tar.gz</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_file.png" alt="file"></p><h2 id="Flume-配置"><a href="#Flume-配置" class="headerlink" title="Flume 配置"></a>Flume 配置</h2><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>将系统环境变量最后追加以下两条</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> FLUME_HOME=/usr/<span class="built_in">local</span>/flume</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$FLUME_HOME</span>/bin</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_env.png" alt="env"><br>配置完成后执行命令以重载配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="检查版本"><a href="#检查版本" class="headerlink" title="检查版本"></a>检查版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flume-ng version</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_version.png" alt="version"><br>出现上图信息代表Flume环境变量配置成功</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><h4 id="Flume环境"><a href="#Flume环境" class="headerlink" title="Flume环境"></a>Flume环境</h4><p>在flume/conf目录下有一个名为 <code>flume-env.sh.template</code> 的配置文件模板</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份</span></span><br><span class="line">cp flume-env.sh.template flume-env.sh</span><br><span class="line">vim flume-env.sh</span><br></pre></td></tr></table></figure><p>找到JAVA_HOME配置项，取消注释并修改为你的JAVA_HOME目录</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_env.sh.png" alt="env.sh"></p><h4 id="采集方案"><a href="#采集方案" class="headerlink" title="采集方案"></a>采集方案</h4><p>Apache Flume官方网站有最简单的Flume例子。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_web.png" alt="Flume官方网站"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_exam.png" alt="simple_example"><br>在flume/conf文件夹下新建一个conf配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim example.conf</span><br></pre></td></tr></table></figure><p>内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># example.conf: A single-node Flume configuration</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Name the components on this agent</span></span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe/configure the source</span></span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 44444</span><br><span class="line"></span><br><span class="line"><span class="comment"># Describe the sink</span></span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use a channel which buffers events in memory</span></span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line"><span class="comment"># Bind the source and sink to the channel</span></span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="启动Flume"><a href="#启动Flume" class="headerlink" title="启动Flume"></a>启动Flume</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/flume/conf</span><br><span class="line">flume-ng agent --conf conf --conf-file example.conf --name a1 -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><p>请注意启动flume时，命令行包含配置文件 <code>example.conf</code> 因此请确保此条命令是在flume/conf目录下执行的</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_start.png" alt="start"></p><h3 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h3><p>成功启动flume后，再打开一个ssh窗口，连接上同一台服务器，使用telnet命令登录本机（即localhost）的44444端口（端口在上面example.conf中指定）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet localhost 44444</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_telnet.png" alt="telnet"></p><p>在telnet这一端输入任意文字测试</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_send.png" alt="send"><br>查看启动flume服务的这一端</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Flume%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_rec.png" alt="rec"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>知乎热榜大屏可视化</title>
      <link href="/2020/12/17/zhi-hu-re-bang-da-ping-ke-shi-hua/"/>
      <url>/2020/12/17/zhi-hu-re-bang-da-ping-ke-shi-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h2><ol><li>本项目通过Python爬虫技术，实时监控知乎热榜，并将数据进行分析，存储到专门建立的MongoBD数据库中</li><li>数据发生变更后，数据分析部分自动执行，主要统计出热力值、点赞量、评论量等数据，并将分析结果存储到Redis数据库中</li><li>前端部分以Nginx-Tengine作为Web服务器以支持高并发访问，使用php编写前端页面，读取Redis中的分析结果数据，并利用Echarts数据可视化技术展示分析结果</li></ol><h2 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h2><p>采用Python爬虫技术，编写<a href="https://github.com/HanZhuo-ii/Zhihu-Spider">爬虫文件</a>，该文件可实现对热榜全部数据的获取，并存储到MongoDB中</p><div class="note success"><p>该文件位于项目的./tools/HotList.py</p></div><p>下面是该文件的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">知乎热榜（全站）</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> frame <span class="keyword">import</span> SpiderFrame</span><br><span class="line"><span class="keyword">from</span> json <span class="keyword">import</span> loads <span class="keyword">as</span> json_lds</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> localtime, strftime</span><br><span class="line"></span><br><span class="line">logger = SpiderFrame.logger</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HTMLParser</span>(<span class="params">SpiderFrame.HtmlParser</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, get_detail=<span class="literal">False</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.get_detail = get_detail</span><br><span class="line">        <span class="keyword">if</span> get_detail:</span><br><span class="line">            self.url_manager = SpiderFrame.UrlManager(db_set_name=<span class="string">&#x27;知乎@HotList&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, data: <span class="built_in">dict</span></span>) -&gt; <span class="literal">None</span>:</span></span><br><span class="line">        _<span class="built_in">type</span> = data[<span class="string">&#x27;type&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> _<span class="built_in">type</span> == <span class="string">&#x27;hot_list_feed&#x27;</span>:</span><br><span class="line">            self._hot_list_feed(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hot_list</span>(<span class="params">get_detail=<span class="literal">False</span></span>):</span></span><br><span class="line">    html_downloader = SpiderFrame.HtmlDownloader()</span><br><span class="line">    html_parser = HTMLParser(get_detail)</span><br><span class="line">    data_saver = SpiderFrame.DataSaver(db_name=<span class="string">&quot;知乎&quot;</span>, set_name=<span class="string">&quot;热榜&quot;</span>)</span><br><span class="line">    url = <span class="string">&quot;https://www.zhihu.com/api/v3/feed/topstory/hot-lists/total?limit=50&amp;desktop=true&quot;</span></span><br><span class="line">    result = &#123;</span><br><span class="line">        <span class="string">&quot;HotListUpdated&quot;</span>: strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>, localtime()),</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    logger.info(<span class="string">&quot;Getting Hot List....&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        res = html_downloader.download(url)</span><br><span class="line">        res = json_lds(res)</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> res[<span class="string">&#x27;data&#x27;</span>]:</span><br><span class="line">            html_parser.parse(data)</span><br><span class="line">            result[<span class="string">&#x27;data&#x27;</span>].append(data)</span><br><span class="line">        <span class="keyword">if</span> res[<span class="string">&#x27;paging&#x27;</span>][<span class="string">&#x27;is_end&#x27;</span>]:</span><br><span class="line">            logger.info(<span class="string">&quot;Paging is end, exit&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        url = res[<span class="string">&#x27;paging&#x27;</span>][<span class="string">&#x27;next&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    html_downloader.proxies.__exit__()</span><br><span class="line">    logger.info(<span class="string">&quot;Saving Data To MongoDB&quot;</span>)</span><br><span class="line">    data_saver.mongo_insert(result)</span><br><span class="line">    logger.info(<span class="string">&#x27;Complete!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    get_hot_list()</span><br></pre></td></tr></table></figure><p>爬虫数据库如下（Demo）</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C%E5%A4%A7%E5%B1%8F%E5%8F%AF%E8%A7%86%E5%8C%96_%E6%95%B0%E6%8D%AE%E5%BA%93%E6%88%AA%E5%9B%BE.png"></p><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><p>数据主要清洗阶段主要在爬虫文件中，具体表现为只存储有用的数据，没用的数据字段将被遗弃</p><p>数据API质量较高，基本不会出现脏数据</p><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><h3 id="文本数据"><a href="#文本数据" class="headerlink" title="文本数据"></a>文本数据</h3><ol><li>一共五十个提问，将每一个的文本信息提取出来，采用jieba分词工具，将文章分为词语</li><li>迭代分词结束后的短语，如果该词语出现在停用词词库，那么将会删除该词语（删除无意义词语）</li><li>统计词频，将统计结果利用wordclod库生成词云图，词的大小反映了词频</li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C%E5%A4%A7%E5%B1%8F%E5%8F%AF%E8%A7%86%E5%8C%96_%E8%AF%8D%E4%BA%91.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 载入停用词库</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./stopwords.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    stopwords = f.read().split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="comment"># 结巴分词并去停用词</span></span><br><span class="line">word_list = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> jieba.cut(line[<span class="string">&quot;target&quot;</span>][<span class="string">&quot;excerpt&quot;</span>]):</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> stopwords:</span><br><span class="line">            word_list.append(i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 词云</span></span><br><span class="line">background = Image.<span class="built_in">open</span>(<span class="string">&quot;./bg.png&quot;</span>)</span><br><span class="line">graph = np.array(background)</span><br><span class="line"></span><br><span class="line">wc = WordCloud(font_path=<span class="string">&#x27;./Hiragino-Sans-GB-W6.ttf&#x27;</span>,</span><br><span class="line">               background_color=<span class="literal">None</span>,</span><br><span class="line">               mode=<span class="string">&#x27;RGBA&#x27;</span>,</span><br><span class="line">               width=<span class="number">200</span>,</span><br><span class="line">               height=<span class="number">200</span>,</span><br><span class="line">               mask=graph).generate(<span class="string">&quot; &quot;</span>.join(word_list))</span><br><span class="line"></span><br><span class="line">wc.to_file(<span class="string">&quot;/www/wwwroot/show1.myblog.org.cn/images/wordcloud.png&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="统计学数据"><a href="#统计学数据" class="headerlink" title="统计学数据"></a>统计学数据</h3><h4 id="总计回答数"><a href="#总计回答数" class="headerlink" title="总计回答数"></a>总计回答数</h4><p>知乎热榜共有50个提问，这50个提问的回答数量总和</p><h4 id="总计关注量"><a href="#总计关注量" class="headerlink" title="总计关注量"></a>总计关注量</h4><p>知乎热榜共有50个提问，这50个提问的关注量总和</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C%E5%A4%A7%E5%B1%8F%E5%8F%AF%E8%A7%86%E5%8C%96_%E9%A6%96%E9%A1%B5.png"></p><h4 id="关注量与点赞量关系"><a href="#关注量与点赞量关系" class="headerlink" title="关注量与点赞量关系"></a>关注量与点赞量关系</h4><p>将五十个提问的关注量与点赞量绘制散点图，横轴为回答数量，纵轴为关注量可以看出两者为正相关关系</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C%E5%A4%A7%E5%B1%8F%E5%8F%AF%E8%A7%86%E5%8C%96_chart.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 热榜关注、回答</span></span><br><span class="line">relation = <span class="string">&quot;&quot;</span></span><br><span class="line">answer_count = <span class="number">0</span></span><br><span class="line">follower_count = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line">    answer_count += line[<span class="string">&quot;target&quot;</span>][<span class="string">&quot;answer_count&quot;</span>]</span><br><span class="line">    follower_count += line[<span class="string">&quot;target&quot;</span>][<span class="string">&quot;follower_count&quot;</span>]</span><br><span class="line">    relation += <span class="built_in">str</span>(line[<span class="string">&quot;target&quot;</span>][<span class="string">&quot;answer_count&quot;</span>])+<span class="string">&quot;,&quot;</span>+<span class="built_in">str</span>(line[<span class="string">&quot;target&quot;</span>][<span class="string">&quot;follower_count&quot;</span>])+<span class="string">&quot; &quot;</span></span><br><span class="line">redis.<span class="built_in">set</span>(<span class="string">&quot;answer_count&quot;</span>, answer_count)</span><br><span class="line">redis.<span class="built_in">set</span>(<span class="string">&quot;follower_count&quot;</span>, follower_count)</span><br><span class="line">redis.<span class="built_in">set</span>(<span class="string">&quot;relation&quot;</span>, relation.strip())</span><br></pre></td></tr></table></figure><h4 id="热力值排行"><a href="#热力值排行" class="headerlink" title="热力值排行"></a>热力值排行</h4><p>选取知乎最热门的前七个提问，将每个提问的热度统计出来，并绘制柱状图</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C%E5%A4%A7%E5%B1%8F%E5%8F%AF%E8%A7%86%E5%8C%96_chart1.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 热度</span></span><br><span class="line">hotlist = []</span><br><span class="line">titles = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data[<span class="number">0</span>:<span class="number">7</span>]:</span><br><span class="line">    hotlist.append(re.findall(<span class="string">&quot;(.*) 万热度&quot;</span>, line[<span class="string">&quot;detail_text&quot;</span>])[<span class="number">0</span>])</span><br><span class="line">    titles.append(line[<span class="string">&quot;target&quot;</span>][<span class="string">&quot;title&quot;</span>][<span class="number">0</span>:<span class="number">6</span>]+<span class="string">&quot;...&quot;</span>)</span><br><span class="line">redis.<span class="built_in">set</span>(<span class="string">&quot;hotlist&quot;</span>, <span class="string">&quot; &quot;</span>.join(hotlist))</span><br><span class="line">redis.<span class="built_in">set</span>(<span class="string">&quot;titles&quot;</span>, <span class="string">&quot;&amp;nbsp&quot;</span>.join(titles))</span><br></pre></td></tr></table></figure><h4 id="监控次数记录"><a href="#监控次数记录" class="headerlink" title="监控次数记录"></a>监控次数记录</h4><p>热力图，反映了每天爬虫对知乎热榜的更新，服务器监控知乎热榜变更，如果发生变更，那么爬虫将自动更新数据</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C%E5%A4%A7%E5%B1%8F%E5%8F%AF%E8%A7%86%E5%8C%96_chart2.png"></p><h4 id="情感占比"><a href="#情感占比" class="headerlink" title="情感占比"></a>情感占比</h4><p>利用百度云API，进行云端情感分析，分析出热榜数据中的情感比例</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C%E5%A4%A7%E5%B1%8F%E5%8F%AF%E8%A7%86%E5%8C%96_chart0.png"></p><h4 id="网站访问来源"><a href="#网站访问来源" class="headerlink" title="网站访问来源"></a>网站访问来源</h4><p>反映了用户访问网站时，是来自哪个搜索引擎</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C%E5%A4%A7%E5%B1%8F%E5%8F%AF%E8%A7%86%E5%8C%96_chart4.png"></p><h4 id="访问地区分布"><a href="#访问地区分布" class="headerlink" title="访问地区分布"></a>访问地区分布</h4><p>反映了访问本站的人的地理位置</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C%E5%A4%A7%E5%B1%8F%E5%8F%AF%E8%A7%86%E5%8C%96_chart5.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果遇到前后端（例如数据库）交互，PHP是不二选择</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>知乎全站爬虫</title>
      <link href="/2020/11/13/zhi-hu-quan-zhan-pa-chong/"/>
      <url>/2020/11/13/zhi-hu-quan-zhan-pa-chong/</url>
      
        <content type="html"><![CDATA[<h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><h2 id="项目描述"><a href="#项目描述" class="headerlink" title="项目描述"></a>项目描述</h2><p>使用Python编写的网络爬虫项目，将知乎话题广场的作者信息、问题信息、评论等信息爬取下来，并存储到MongoDB中。</p><p>爬取信息要求：话题相关ID、归属于该话题的所有提问及其详细信息（例如ID、创建时间、更新时间、作者信息、是否可编辑等等信息），归属于某个提问的所有回答及其详细信息、归属于某个回答的所有评论及其详细信息、以及所有涉及到的用户及其详细信息，并实现关键词搜索、热榜监控等工具。</p><p><strong>【话题名】</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E8%AF%9D%E9%A2%98%E5%B9%BF%E5%9C%BA.png" alt="知乎话题广场"><br><strong>【话题下具体的问题的详细信息】</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E6%8F%90%E9%97%AE%E4%BF%A1%E6%81%AF.png" alt="知乎提问信息"><br><strong>【提问回答的详细信息】</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E6%8F%90%E9%97%AE%E4%B8%8B%E5%9B%9E%E7%AD%94.png" alt="知乎提问下回答"><br><strong>【各个回答的评论】</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E8%AF%84%E8%AE%BA.png" alt="知乎评论"><br><strong>【用户个人信息】</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF.png" alt="知乎个人信息"></p><h2 id="过程分析"><a href="#过程分析" class="headerlink" title="过程分析"></a>过程分析</h2><h3 id="结构分析"><a href="#结构分析" class="headerlink" title="结构分析"></a>结构分析</h3><p>（1）打开知乎话题广场首页：<a href="https://www.zhihu.com/topics">https://www.zhihu.com/topics</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E8%AF%9D%E9%A2%98%E5%B9%BF%E5%9C%BA.png" alt="知乎话题广场"><br>（2）点开话题，进行对应标签下信息的列表页展示：<strong>（以“程序员生活”话题为例）</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E6%8F%90%E9%97%AE%E4%BF%A1%E6%81%AF.png" alt="知乎提问信息"><br>（3）在知乎话题列表页获取各个话题的具体问题：<strong>（以“程序员生活”话题下的几个具体问题为例）</strong>进入问题，可以获取回答内容，回答图片，及各个回答的评论：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E6%8F%90%E9%97%AE%E4%B8%8B%E5%9B%9E%E7%AD%94.png" alt="知乎提问下回答"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E8%AF%84%E8%AE%BA.png" alt="知乎回答下评论"><br>（5）进入用户主页，获取用户各项信息</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF.png" alt="知乎个人信息"></p><h3 id="数据库示例："><a href="#数据库示例：" class="headerlink" title="数据库示例："></a>数据库示例：</h3><ul><li>话题</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E8%AF%9D%E9%A2%98%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.png" alt="知乎话题数据库设计"></p><ul><li>提问</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E6%8F%90%E9%97%AE%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.png" alt="知乎提问数据库设计"></p><ul><li>回答</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E8%AF%84%E8%AE%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.png" alt="知乎评论数据库设计"></p><ul><li>个人信息</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E5%85%A8%E7%AB%99%E7%88%AC%E8%99%AB_%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.png" alt="知乎用户信息数据库设计"></p><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><p>队列服务器:        CentOS 8, Redis 6.0.9 （IP: 192.168.100.101）</p><p>爬虫运行环境:    Windows10 20H2, Python 3.7 (IP: 192.168.3.101)</p><p>热榜监控爬虫:    CentOS 7, Python 3.7 (阿里云)</p><p>存储服务器:        Windows10 20H2, MongoDB 4.4.1 (IP: 192.168.3.101)</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>利用Redis消息队列，实现断点续爬、真分布式爬虫（爬虫可部署在任意服务器上，不需要重新配置即可实现续爬）、防止重复爬（Redis Set的唯一性，防止Url重复即可）</li><li>MongoDB数据去重，如果某个数据ID存在，不存储，改用增量式爬，直接修改原来不存在的数据，并且每次爬完都会记录end_url（即最后一个链接），数据更新时直接将end_url入队即可。</li><li>反爬策略上，在SpiderFrame中定义Proxies线程，采用多线程动态更新代理，监测代理有效性（过期时间，或当使用该代理的请求失败时）； 知乎关键词搜索的 1. 请求头完整校验，2. Cookies验证，3. UA校验 </li><li>KeyWordsSearch.py 实现主题爬取</li><li>采用配置文件config.py控制爬虫运行参数</li><li>采用多线程，执行效率高</li><li>爬虫运行日志控制台输出级别：INFO，文件输出级别：WARNING</li><li>四层级页面爬，共七类页面</li><li>爬虫通用模块放置于utils/SpiderFrame.py，无需重复写</li><li>图片爬虫将回答中提取出来的图片Url下载到%{PATH}%/img/answer/文件夹中</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA调试Hadoop的WordCount</title>
      <link href="/2020/10/28/idea-diao-shi-hadoop-de-wordcount/"/>
      <url>/2020/10/28/idea-diao-shi-hadoop-de-wordcount/</url>
      
        <content type="html"><![CDATA[<p>使用IDEA创建一个名为HadoopTest的Maven项目，并配置好pom.xml</p><div class="note primary"><p>不会配置Maven项目的请参见另一篇文章：<a href="https://myblog.org.cn/2020/10/13/idea-maven-gou-jian-hadoop-xiang-mu/"> IDEA Maven构建Hadoop项目 </a></p></div><p>在项目目录的test/java目录下创建代码文件，源码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.myorg;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.BasicConfigurator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MapReduce单词统计</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCount</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义Mapper继承：org.apache.hadoop.mapreduce.Mapper，实现map方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCountMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">LongWritable</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(LongWritable key, Text value,</span></span></span><br><span class="line"><span class="params"><span class="function">                           Mapper&lt;LongWritable, Text, Text, IntWritable&gt;.Context context)</span></span></span><br><span class="line"><span class="function">                <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            String[] words = value.toString().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (String word : words) &#123;</span><br><span class="line">                context.write(<span class="keyword">new</span> Text(word), <span class="keyword">new</span> IntWritable(<span class="number">1</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义Reducer继承:org.apache.hadoop.mapreduce.Reducer，实现reduce方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCountReducer</span> <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>, <span class="title">IntWritable</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt; </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values,</span></span></span><br><span class="line"><span class="params"><span class="function">                              Reducer&lt;Text, IntWritable, Text, IntWritable&gt;.Context context)</span></span></span><br><span class="line"><span class="function">                <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (IntWritable writable : values) &#123;</span><br><span class="line">                count += writable.get();</span><br><span class="line">            &#125;</span><br><span class="line">            context.write(key, <span class="keyword">new</span> IntWritable(count));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        BasicConfigurator.configure();</span><br><span class="line">        Configuration conf = <span class="keyword">new</span> Configuration();</span><br><span class="line"><span class="comment">//        conf.set(&quot;fs.defaultFS&quot;, &quot;hdfs://192.168.100.101:9000&quot;);</span></span><br><span class="line"><span class="comment">//        conf.set(&quot;mapreduce.framework.name&quot;, &quot;yarn&quot;);</span></span><br><span class="line"><span class="comment">//        conf.set(&quot;yarn.resourcemanager.hostname&quot;, &quot;localhost&quot;);</span></span><br><span class="line">        Job job = Job.getInstance(conf);</span><br><span class="line">        job.setJarByClass(WordCount.class);</span><br><span class="line"></span><br><span class="line">        job.setMapperClass(WordCountMapper.class);</span><br><span class="line">        job.setReducerClass(WordCountReducer.class);</span><br><span class="line"></span><br><span class="line">        job.setMapOutputKeyClass(Text.class);</span><br><span class="line">        job.setMapOutputValueClass(IntWritable.class);</span><br><span class="line"></span><br><span class="line">        job.setOutputKeyClass(Text.class);</span><br><span class="line">        job.setOutputValueClass(IntWritable.class);</span><br><span class="line"></span><br><span class="line">        FileInputFormat.setInputPaths(job, <span class="keyword">new</span> Path(<span class="string">&quot;E:/input&quot;</span>));</span><br><span class="line">        FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(<span class="string">&quot;E:/output&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> b = job.waitForCompletion(<span class="keyword">true</span>);</span><br><span class="line">        System.exit(b ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随后编译执行项目，即可在E:/output下看到wordcount的输出结果，结果存储在part-r-00000中</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22IDEA%E8%B0%83%E8%AF%95Hadoop%E7%9A%84WordCount_output.png" alt="&quot;wordcount的输出结果&quot;"><br>使用记事本打开part-r-00000，可以看到wordcount的结果</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22IDEA%E8%B0%83%E8%AF%95Hadoop%E7%9A%84WordCount_part-r-00000.png" alt="&quot;part-r-00000&quot;"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HDFS常用命令</title>
      <link href="/2020/10/28/hdfs-chang-yong-ming-ling/"/>
      <url>/2020/10/28/hdfs-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<blockquote><p>hdfs文件的相关操作主要使用hadoop fs、hadoop dfs、hdfs dfs 命令</p></blockquote><div class="note success"><p>基于Hadoop3.1.4演示，以下对最常用的相关命令进行简要说明</p></div><ul><li><p>hdfs dfs -ls  显示当前目录结构，-ls -R 递归显示目录结构</p></li><li><p>hdfs dfs -mkdir  创建目录</p></li><li><p>hdfs dfs -put  [localsrc] [dst]  从本地加载文件到HDFS</p></li><li><p>hdfs dfs -get  [dst] [localsrc]  从HDFS导出文件到本地</p></li><li><p>hdfs dfs -rm  删除文件，-rm -R 递归删除目录和文件</p></li><li><p>hdfs dfs -text  查看文件内容</p></li><li><p>hdfs dfs -tail  显示文件末尾</p></li><li><p>hdfs dfs -cp [src] [dst] 从源目录复制文件到目标目录</p></li></ul><h2 id="hdfs-dfs-ls"><a href="#hdfs-dfs-ls" class="headerlink" title="hdfs dfs -ls"></a>hdfs dfs -ls</h2><p> -ls  显示当前目录结构，-ls -R 递归显示目录结构</p><p>![“hdfs](<a href="https://cdn.myblog.org.cn/&quot;HDFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_hdfs">https://cdn.myblog.org.cn/&quot;HDFS常用命令_hdfs</a> dfs -ls.png)</p><h2 id="hdfs-dfs-mkdir"><a href="#hdfs-dfs-mkdir" class="headerlink" title="hdfs dfs -mkdir"></a>hdfs dfs -mkdir</h2><p>创建目录</p><p>![“hdfs创建目录”](<a href="https://cdn.myblog.org.cn/&quot;HDFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_hdfs">https://cdn.myblog.org.cn/&quot;HDFS常用命令_hdfs</a> dfs -mkdir.png)</p><h2 id="hdfs-dfs-put"><a href="#hdfs-dfs-put" class="headerlink" title="hdfs dfs -put"></a>hdfs dfs -put</h2><p>-put  [localsrc] [dst]  从本地加载文件到HDFS</p><p>![“从本地加载文件到HDFS”](<a href="https://cdn.myblog.org.cn/&quot;HDFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_hdfs">https://cdn.myblog.org.cn/&quot;HDFS常用命令_hdfs</a> dfs -put.png)</p><h2 id="hdfs-dfs-get"><a href="#hdfs-dfs-get" class="headerlink" title="hdfs dfs -get"></a>hdfs dfs -get</h2><p>-get  [dst] [localsrc]  从HDFS导出文件到本地</p><p>![“从HDFS导出文件到本地”](<a href="https://cdn.myblog.org.cn/&quot;HDFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_hdfs">https://cdn.myblog.org.cn/&quot;HDFS常用命令_hdfs</a> dfs -get.png)</p><h2 id="hdfs-dfs-rm"><a href="#hdfs-dfs-rm" class="headerlink" title="hdfs dfs -rm"></a>hdfs dfs -rm</h2><p>-rm 删除文件，-rm -R 递归删除目录和文件</p><p>![“删除文件”](<a href="https://cdn.myblog.org.cn/&quot;HDFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_hdfs">https://cdn.myblog.org.cn/&quot;HDFS常用命令_hdfs</a> dfs -rm1.png)<br>![“递归删除目录和文件”](<a href="https://cdn.myblog.org.cn/&quot;HDFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_hdfs">https://cdn.myblog.org.cn/&quot;HDFS常用命令_hdfs</a> dfs -rm2.png)</p><h2 id="hdfs-dfs-text"><a href="#hdfs-dfs-text" class="headerlink" title="hdfs dfs -text"></a>hdfs dfs -text</h2><p>-text  查看文件内容</p><p>![“hdfs](<a href="https://cdn.myblog.org.cn/&quot;HDFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_hdfs">https://cdn.myblog.org.cn/&quot;HDFS常用命令_hdfs</a> dfs -text.png)</p><h2 id="hdfs-dfs-tail"><a href="#hdfs-dfs-tail" class="headerlink" title="hdfs dfs -tail"></a>hdfs dfs -tail</h2><p> -tail  显示文件末尾</p><p>![“hdfs](<a href="https://cdn.myblog.org.cn/&quot;HDFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_hdfs">https://cdn.myblog.org.cn/&quot;HDFS常用命令_hdfs</a> dfs -tail.png)</p><h2 id="hdfs-dfs-cp"><a href="#hdfs-dfs-cp" class="headerlink" title="hdfs dfs -cp"></a>hdfs dfs -cp</h2><p>-cp [src] [dst] 从源目录复制文件到目标目录</p><p>![“从源目录复制文件到目标目录”](<a href="https://cdn.myblog.org.cn/&quot;HDFS%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_hdfs">https://cdn.myblog.org.cn/&quot;HDFS常用命令_hdfs</a> dfs -cp.png)</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Permission denied: user=administrator, access=WRITE, inode=/:root:supergroup:drwxr-xr-x</title>
      <link href="/2020/10/14/permission-denied-user-administrator-access-write-inode-root-supergroup-drwxr-xr-x/"/>
      <url>/2020/10/14/permission-denied-user-administrator-access-write-inode-root-supergroup-drwxr-xr-x/</url>
      
        <content type="html"><![CDATA[<p>hadoop 的hdfs-site文件中添加以下内容，关闭权限检查 ，即解决了上述问题。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爬虫破解JS（JavaScript）加密</title>
      <link href="/2020/10/14/pa-chong-po-jie-js-javascript-jia-mi/"/>
      <url>/2020/10/14/pa-chong-po-jie-js-javascript-jia-mi/</url>
      
        <content type="html"><![CDATA[<p>打开有道翻译官网，随便输入一个关键词，例如“爬虫”，可以看到网络选项卡—XHR下多了一个数据包</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%88%AC%E8%99%AB%E7%A0%B4%E8%A7%A3JS%EF%BC%88JavaScript%EF%BC%89%E5%8A%A0%E5%AF%86_%E6%B5%8B%E8%AF%95.png" alt="测试"><br>查看此数据包请求方式，可以看到表单数据中这几部分的参数可能是动态加密的，下面尝试破解</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%88%AC%E8%99%AB%E7%A0%B4%E8%A7%A3JS%EF%BC%88JavaScript%EF%BC%89%E5%8A%A0%E5%AF%86_%E8%A1%A8%E5%8D%95%E6%95%B0%E6%8D%AE.png" alt="表单数据"><br>点击发起程序，可以看到调用堆栈中JS文件调用顺序，整个调用过程全部发生在fanyi.min.js</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%88%AC%E8%99%AB%E7%A0%B4%E8%A7%A3JS%EF%BC%88JavaScript%EF%BC%89%E5%8A%A0%E5%AF%86_JS%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B.png" alt="JS调用过程"><br>打开这个文件，使用在线美化工具美化以下这个js，使它变得更易读，美化后可以复制到VS Code等IDE可以方便查看函数调用。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%88%AC%E8%99%AB%E7%A0%B4%E8%A7%A3JS%EF%BC%88JavaScript%EF%BC%89%E5%8A%A0%E5%AF%86_%E7%BE%8E%E5%8C%96JS.png" alt="美化JS"><br>在美化后的JS中，查找表单中加密的参数名，可以看到加密的参数存在data这个字典中</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%88%AC%E8%99%AB%E7%A0%B4%E8%A7%A3JS%EF%BC%88JavaScript%EF%BC%89%E5%8A%A0%E5%AF%86_%E5%8A%A0%E5%AF%86%E5%8F%82%E6%95%B0.png" alt="加密参数"><br>salt参数对应JavaScript中r函数返回的i变量</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%88%AC%E8%99%AB%E7%A0%B4%E8%A7%A3JS%EF%BC%88JavaScript%EF%BC%89%E5%8A%A0%E5%AF%86_salt%E5%8F%82%E6%95%B0%E8%A7%A3%E5%AF%86.png" alt="salt参数解密"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i = r + <span class="built_in">parseInt</span>(<span class="number">10</span> * <span class="built_in">Math</span>.random(), <span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>r变量就是i变量的上一行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = <span class="string">&quot;&quot;</span> + (<span class="keyword">new</span> <span class="built_in">Date</span>).getTime()</span><br></pre></td></tr></table></figure><p>综上所述，表单中的salt参数:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt = <span class="string">&quot;&quot;</span> + (<span class="keyword">new</span> <span class="built_in">Date</span>).getTime() + <span class="built_in">parseInt</span>(<span class="number">10</span> * <span class="built_in">Math</span>.random(), <span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>在Javascript中，这条语句表示，获得现在的时间戳，转换成字符串形式，再加上[0,10)的随机数</p><p>则在Python中，salt参数表示为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">r = <span class="built_in">int</span>(time.time() * <span class="number">1000</span>) <span class="comment"># Python中的时间戳是精确到秒的浮点型，JS中是毫秒整型</span></span><br><span class="line">salt = <span class="built_in">str</span>(random.randint(<span class="number">0</span>,<span class="number">9</span>) + r)</span><br></pre></td></tr></table></figure><p>再例如：sign参数</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%88%AC%E8%99%AB%E7%A0%B4%E8%A7%A3JS%EF%BC%88JavaScript%EF%BC%89%E5%8A%A0%E5%AF%86_sign1.png" alt="sign1"><br>在data中sign参数对应r函数中return的sign</p><p>sign是经过md5加密的参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sign: n.md5(<span class="string">&quot;fanyideskweb&quot;</span> + e + i + <span class="string">&quot;]BjuETDhU)zqSxf-=B#7m&quot;</span>)</span><br></pre></td></tr></table></figure><p>i在上面提到过，也就是salt，e就是r函数的调用参数，那么回去看参数调用位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> t = e.i,</span><br><span class="line">    i = r(t);</span><br></pre></td></tr></table></figure><p>也就是r函数中的参数就是t，即e.i，e.i又是什么？</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%88%AC%E8%99%AB%E7%A0%B4%E8%A7%A3JS%EF%BC%88JavaScript%EF%BC%89%E5%8A%A0%E5%AF%86_sign2.png" alt="sign2"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%88%AC%E8%99%AB%E7%A0%B4%E8%A7%A3JS%EF%BC%88JavaScript%EF%BC%89%E5%8A%A0%E5%AF%86_sign3.png" alt="sign3"><br>通过对比发现，e.i其实就是需要翻译的关键词，那么此解密方法就是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">sign = hashlib.md5(<span class="string">&quot;fanyideskweb&quot;</span> + keyword + salt + <span class="string">&quot;]BjuETDhU)zqSxf-=B#7m&quot;</span>.encode()).hexdigest()</span><br></pre></td></tr></table></figure><p>其他加密参数的逆向破解方法也是如此。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA Maven构建Hadoop项目</title>
      <link href="/2020/10/13/idea-maven-gou-jian-hadoop-xiang-mu/"/>
      <url>/2020/10/13/idea-maven-gou-jian-hadoop-xiang-mu/</url>
      
        <content type="html"><![CDATA[<h1 id="请确保Hadoop配置成功"><a href="#请确保Hadoop配置成功" class="headerlink" title="请确保Hadoop配置成功"></a>请确保Hadoop配置成功</h1><p>Hadoop（HA）高可用集群搭建：<a href="https://myblog.org.cn/2020/10/02/hadoop-ha-gao-ke-yong-ji-qun-da-jian/">https://myblog.org.cn/2020/10/02/hadoop-ha-gao-ke-yong-ji-qun-da-jian/</a></p><p>Hadoop集群搭建教程（分布式）: <a href="https://myblog.org.cn/2020/10/02/hadoop-ji-qun-da-jian-jiao-cheng-fen-bu-shi/">https://myblog.org.cn/2020/10/02/hadoop-ji-qun-da-jian-jiao-cheng-fen-bu-shi/</a></p><h1 id="在Windows上配置Hadoop"><a href="#在Windows上配置Hadoop" class="headerlink" title="在Windows上配置Hadoop"></a>在Windows上配置Hadoop</h1><h2 id="配置Hadoop环境"><a href="#配置Hadoop环境" class="headerlink" title="配置Hadoop环境"></a>配置Hadoop环境</h2><ol><li><p>将Linux已经配置好的Hadoop打包，传输到Windows。</p></li><li><p>在Windows上安装JDK8，并配置JAVA_HOME路径</p></li></ol><p>右键此电脑–属性–高级系统设置–环境变量，在系统环境里新建HADOOP_HOME，值就是hadoop存放目录</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="添加环境变量"><br>双击系统环境里的Path编辑，在里面添加%HADOOP_HOME%\bin</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E6%B7%BB%E5%8A%A0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F2.png" alt="添加环境变量2"><br>编辑完成后一路确定即可</p><h2 id="安装Windows编译版Hadoop"><a href="#安装Windows编译版Hadoop" class="headerlink" title="安装Windows编译版Hadoop"></a>安装Windows编译版Hadoop</h2><p><a href="https://github.com/tigerLuHai/hadoop-3.1.2"> 点我下载 </a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E4%B8%8B%E8%BD%BDwindows%E7%BC%96%E8%AF%91%E7%89%88%E6%9C%AC.png" alt="下载windows编译版本"><br>将下载好的zip解压，因为我是hadoop-3.1.4，就近选择windows编译版的3.1.x版本</p><p>将hadoop-3.1.2的bin目录替换掉我原来的bin文件夹</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E6%9B%BF%E6%8D%A2bin.png" alt="替换bin"><br>将替换后的hadoop-3.1.4中的bin文件夹下的hadoop.dll拷贝到C:\Windows\System32目录下</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E5%A4%8D%E5%88%B6dll.png" alt="复制dll"></p><h1 id="创建Maven项目"><a href="#创建Maven项目" class="headerlink" title="创建Maven项目"></a>创建Maven项目</h1><p>打开IDEA，点击New Project，选择Maven项目</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE1.png" alt="新建项目1"><br>下一步，选择项目名称及所在路径</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE2.png" alt="新建项目2"><br>创建好的项目会在其根目录下生成Maven项目配置文件pom.xml</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_pom.xml.png" alt="pom.xml"></p><h1 id="编辑pom-xml配置信息"><a href="#编辑pom-xml配置信息" class="headerlink" title="编辑pom.xml配置信息"></a>编辑pom.xml配置信息</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>HadoopTest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-hdfs<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.hadoop<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hadoop-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>先看一下左侧的环境包列表</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E4%B8%8B%E8%BD%BD%E5%89%8D.png" alt="下载前"><br>将pom.xml编辑好后，点击右上角的刷新按钮，即可自动下载所需要的Maven包</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E5%8A%A0%E8%BD%BDMaven%E5%8C%85.png" alt="加载Maven包"><br>等待下载</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E4%B8%8B%E8%BD%BD%E4%B8%AD.png" alt="下载中"><br>下载完成后再看左侧的包列表</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E4%BD%BF%E7%94%A8IDEA%E5%88%9B%E5%BB%BAHadoop%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE_%E4%B8%8B%E8%BD%BD%E5%AE%8C%E6%88%90.png" alt="下载完成"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K-Means算法及Python实现</title>
      <link href="/2020/10/13/k-means-suan-fa-ji-python-shi-xian/"/>
      <url>/2020/10/13/k-means-suan-fa-ji-python-shi-xian/</url>
      
        <content type="html"><![CDATA[<h1 id="K-Means算法的Python实现"><a href="#K-Means算法的Python实现" class="headerlink" title="K-Means算法的Python实现"></a>K-Means算法的Python实现</h1><div class="note danger"><p>为了方便阅读，博客中的代码是不完整的哦</p></div><div class="note success"><p>完整代码已经上传至<a href="https://github.com/HanZhuo-ii/K-Means">Github，点我下载</a>。如果觉得对您有帮助的话，劳烦给个Star</p></div><p>在K-Means.py中定义了一个KMeans类（下面给出该类代码），只需要两行代码即可实现K-Means中心聚类算法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">km = KMeans(dataset_tmp, <span class="number">3</span>)  <span class="comment"># 聚成三个簇</span></span><br><span class="line">km.fit()</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/K-Means%E7%AE%97%E6%B3%95%E5%8F%8APython%E5%AE%9E%E7%8E%B0_K-Means%E8%81%9A%E7%B1%BB%E7%BB%93%E6%9E%9C.png" alt="K-Means聚类结果"><br>该类具体方法如下：</p><h2 id="init-self-dataset-cluster-num-2"><a href="#init-self-dataset-cluster-num-2" class="headerlink" title="__init__(self, dataset, cluster_num=2)"></a>__init__(self, dataset, cluster_num=2)</h2><p>该类的初始化方法，参数如下：</p><p>dataset: list  数据集，列表嵌套列表的形式。例如[[1,2,3,…], [4,5,6,…],…]</p><p>cluster_num: int  要划分的簇的个数。Default: 2</p><p>return: None</p><p>Demo: 若要对dataset_tmp进行聚类，首先实例化KMeans类</p><p>附部分dataset_tmp截图</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/K-Means%E7%AE%97%E6%B3%95%E5%8F%8APython%E5%AE%9E%E7%8E%B0_dataset_demo.png" alt="dataset_demo"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">km = KMeans(dataset_tmp, <span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="fit-self"><a href="#fit-self" class="headerlink" title="fit(self)"></a>fit(self)</h2><p>进行聚类</p><p>return: None</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">km.fit()</span><br></pre></td></tr></table></figure><h2 id="distance-p1-p2"><a href="#distance-p1-p2" class="headerlink" title="_distance(p1, p2)"></a>_distance(p1, p2)</h2><p>p1点和p2点的欧氏距离</p><p>@staticmethod</p><p>p1: list  形如[x,y]</p><p>return: None</p><h2 id="center-list"><a href="#center-list" class="headerlink" title="_center(_list):"></a>_center(_list):</h2><p>计算坐标组中的中心点</p><p>@staticmethod</p><p>_list: list 形如dataset，列表嵌套列表的形式。例如[[1,2,3,…], [4,5,6,…],…]</p><p>return: list 中心点坐标[x,y,z,…]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KMeans</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;向量化计算&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, dataset, cluster_num=<span class="number">2</span></span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :param dataset: is list likes [[],[]]</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.dataset = dataset</span><br><span class="line">        <span class="comment"># 簇中心数量</span></span><br><span class="line">        self.cluster_num = cluster_num</span><br><span class="line">        <span class="comment"># 选取数据集前N个点为簇中心</span></span><br><span class="line">        self.center_points = dataset[<span class="number">0</span>:cluster_num]</span><br><span class="line">        self.result = &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;:return &#123;簇序号:[[点1],[点2]]...&#125;&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 空字典</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.cluster_num):</span><br><span class="line">                self.result[i] = []</span><br><span class="line">            <span class="comment"># 划分</span></span><br><span class="line">            <span class="keyword">for</span> data <span class="keyword">in</span> self.dataset:</span><br><span class="line">                index = <span class="number">0</span></span><br><span class="line">                min_distance = sys.maxsize</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.cluster_num):</span><br><span class="line">                    <span class="string">&quot;&quot;&quot;分别对每个点计算其到N个簇中心的距离&quot;&quot;&quot;</span></span><br><span class="line">                    _distance = self._distance(data, self.center_points[i])</span><br><span class="line">                    <span class="keyword">if</span> _distance &lt; min_distance:</span><br><span class="line">                        index = i</span><br><span class="line">                        min_distance = _distance</span><br><span class="line">                self.result[index].append(data)</span><br><span class="line">            <span class="comment"># 求中心点</span></span><br><span class="line">            new_center = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.cluster_num):</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(self.result[i]) <span class="keyword">is</span> <span class="number">0</span>:</span><br><span class="line">                    new_center.append(self.center_points[i])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    new_center.append(self._center(self.result[i]))</span><br><span class="line">            <span class="keyword">if</span> new_center == self.center_points:</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.center_points = new_center</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_distance</span>(<span class="params">p1, p2</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;欧氏距离&quot;&quot;&quot;</span></span><br><span class="line">        _<span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(p1)):</span><br><span class="line">            _<span class="built_in">sum</span> += <span class="built_in">pow</span>(p1[i] - p2[i], <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">pow</span>(_<span class="built_in">sum</span>, <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_center</span>(<span class="params">_list</span>):</span></span><br><span class="line">        <span class="keyword">return</span> np.array(_<span class="built_in">list</span>).mean(axis=<span class="number">0</span>).tolist()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>知乎爬虫-提问下所有回答</title>
      <link href="/2020/10/07/zhi-hu-pa-chong-ti-wen-xia-suo-you-hui-da/"/>
      <url>/2020/10/07/zhi-hu-pa-chong-ti-wen-xia-suo-you-hui-da/</url>
      
        <content type="html"><![CDATA[<div class="note success"><p>文末包含完整代码，基于Python3.7</p></div><h1 id="确定需求"><a href="#确定需求" class="headerlink" title="确定需求"></a>确定需求</h1><p>&emsp; &emsp;首先打开页面 <a href="https://www.zhihu.com/question/20899988">如何入门 Python 爬虫？</a>，即可看到一部分显性元素，即渲染在网页上的元素，我们先根据这些元素确定数据需求</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_%E6%8F%90%E9%97%AE%E7%95%8C%E9%9D%A2.png"><br>&emsp; &emsp;可以看到这个页面有：作者名称、作者头像、回答内容、回答的赞同数以及评论数。假如我们的需求就是这些内容的话，那么就可以开始进行下一步的思考了。</p><h1 id="请求分析"><a href="#请求分析" class="headerlink" title="请求分析"></a>请求分析</h1><h2 id="知识补充"><a href="#知识补充" class="headerlink" title="知识补充"></a>知识补充</h2><p>&emsp; &emsp;目前较为流行的加载方式有两种（个人理解）：一种是Ajax动态加载，这种加载方式基本是加载json格式数据包，这种较为简单，只需要根据路径找到我们所需要的数据即可；第二种就是html静态页面，这种加载方式可以使用BeautifulSoup等根据元素定位法进行数据查找。</p><h2 id="确定页面加载方法"><a href="#确定页面加载方法" class="headerlink" title="确定页面加载方法"></a>确定页面加载方法</h2><p>&emsp; &emsp;首先打开浏览器，找到你想爬的页面，按F12进入控制台，点击网络（Network），再刷新一下页面，即可看到全部网页加载过程涉及到的全部数据包</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_%E7%BD%91%E7%BB%9C.png"><br>&emsp; &emsp;</p><p>&emsp; &emsp;我想要定位到包含所需数据的包，点击搜索按钮，可以任选网页内关键词，进行搜索，例如我搜索的是作者的名称“谢科-搜索引擎”，可以看到搜索结果就在202089988这个数据包，我点击预览，可以看到这个数据包的格式。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_%E6%90%9C%E7%B4%A2%E4%BF%A1%E6%81%AF.png"><br>&emsp; &emsp;如何判断这个数据包是否为Ajax动态加载呢？</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_Doc.png"></p><p>&emsp; &emsp;点击网络选项卡里的Doc，如果你定位到的数据包属于Doc类别，那么<strong>基本上</strong>就是静态页面，如果出现在XHR里，那么基本上是Ajax动态加载。</p><p>&emsp; &emsp;这里<strong>初步猜测</strong>是静态页面，然后尝试寻找翻页参数（因为一页加载不完那么多条数据，回答太多了，因此要有参数控制翻页；要么就是动态加载）</p><p>&emsp; &emsp;这里往下继续翻，发现滚动条翻到最后的话，下面突然会出现一大批数据，进度条就又跳到中间去了。这其实是动态加载的特征。</p><div class="note primary"><p>说到这好像有点矛盾了，别着急，继续往下看</p></div><p>&emsp; &emsp;在滚动条又回到中间的时候，发现Doc里面没有新增的数据包，如果没有新数据包的话，网页是不可能加载出来新数据的，那么去XHR找找，果然在这里出现了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_XHR.png"><br>下一步对XHR里这个answer开头的数据包分析</p><h3 id="data"><a href="#data" class="headerlink" title="data"></a>data</h3><p>展开data，可以看到data里存放的是一个列表，一共五个</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_data.png"><br>展开列表就发现了我们需要的信息</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_data%E5%B1%95%E5%BC%80.png"><br>&emsp; &emsp;除了我们开始确定的数据之外，还发现了其他不会在页面上渲染的宝藏数据，我们把他们全部存在MongoDB里</p><div class="note primary"><p>像这种字典类型的数据存在MongoDB里要比存在MySQL这种关系型数据库简单，易读</p></div><p>&emsp; &emsp;收起data，继续对数据包其他的子项进行分析</p><h3 id="paging"><a href="#paging" class="headerlink" title="paging"></a>paging</h3><p>根据翻译，盲猜是页面控制的数据包。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_paging.png"></p><blockquote><p> 盲猜数据字段的含义是应对Ajax加载页面的重要技能</p></blockquote><p>is_end: 结束了</p><p>is_start：开头？</p><p>next: 下一个，可能是下一个数据包的URL</p><p>previous：上一个数据包的URL？</p><p>totals：总共三百个数据包还是总共三百个回答</p><p>&emsp; &emsp;前一个页面是静态加载Doc，那么我们先看看previous是个什么东西，复制链接，打开，发现也是个json数据包（我的数据包经过FEHelper工具美化）</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_%E6%89%93%E5%BC%80%E6%95%B0%E6%8D%AE%E5%8C%85.png"><br>&emsp; &emsp;可以看到is_start参数变为True，证明我们猜测正确，这个提问的开头就是这个数据包，而且previous确实是当前数据包的前一个数据包，那么next就应该是后一个数据包。</p><p>&emsp; &emsp;仔细对比发现next参数和previous参数只差了一个offset参数，可能是它控制json数据包的加载。</p><p>&emsp; &emsp;我们爬的时候只需要从某个question数据包的URL参数offset=0的时候开始爬，下一个请求就是next对应的URL，判断是否爬完的标准就是is_end=true</p><h2 id="API测试（请求头构造）"><a href="#API测试（请求头构造）" class="headerlink" title="API测试（请求头构造）"></a>API测试（请求头构造）</h2><p>&emsp; &emsp;我们明确了爬虫思路之后就要对API测试，进行请求头的构造，直到requests.get返回200。</p><p>&emsp; &emsp;这里我推荐软件ApiPost，当然英文好的同学更建议使用Postman</p><p>&emsp; &emsp;软件进去后先注册账号并登录，来到主界面，点击新建接口，将URL粘贴进去，方法选择GET。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_Apipost%E4%B8%BB%E7%95%8C%E9%9D%A2.png"><br>&emsp; &emsp;打开浏览器，查看我们要请求URL的浏览器请求头</p><p>&emsp; &emsp;在控制台里找到API数据包，点击标头，找到请求标头</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_%E8%AF%B7%E6%B1%82%E6%A0%87%E5%A4%B4.png"><br>&emsp; &emsp;很多网站反爬机制包含在请求头里，因此我们伪造一下即可实现反反爬</p><p>&emsp; &emsp;首先复制<strong>除了以冒号为名称开头</strong>的全部的请求标头参数</p><p>&emsp; &emsp;回到ApiPost，在接口里点击Header – 导入，把全部请求头导入</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_%E5%AF%BC%E5%85%A5%E8%AF%B7%E6%B1%82%E5%A4%B4.png"><br>&emsp; &emsp;删掉你认为没用的请求标头，最好是请求头最少，并且URL可以请求成功，我测试之后发现这个API只需要user-agent即可完成请求</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%22%E7%9F%A5%E4%B9%8E%E7%88%AC%E8%99%AB-%E6%8F%90%E9%97%AE%E4%B8%8B%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94_%E6%B5%8B%E8%AF%95API%E6%88%90%E5%8A%9F.png"><br>&emsp; &emsp;最后点击导出参数，导出Raw-Json格式的，然后复制粘贴到Python里面即可</p><h1 id="编写爬虫"><a href="#编写爬虫" class="headerlink" title="编写爬虫"></a>编写爬虫</h1><blockquote><p> 如果使用代理，请在通用代码框架填写你的代理获取方式，并取消注释带有“# 使用代理请取消注释此行”字样的行</p></blockquote><h2 id="通用代码框架"><a href="#通用代码框架" class="headerlink" title="通用代码框架"></a>通用代码框架</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    @author:  满目皆星河</span></span><br><span class="line"><span class="string">    @version: v0.3 dev</span></span><br><span class="line"><span class="string">    @desc: 通用爬虫框架</span></span><br><span class="line"><span class="string">    @update_log: v0.1 初始架构Proxies代理模块、UrlManager、HtmlDownloader、HtmlParser、DataSaver</span></span><br><span class="line"><span class="string">                 v0.2 加入MongoDB存储功能，支持MongoDB自增ID</span></span><br><span class="line"><span class="string">                 v0.3 加入Redis支持，UrlManager使用Redis运行大型项目可以断点续爬，DataSaver使用Redis解决硬盘I/O低影响爬虫速度</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"></span><br><span class="line">redis = redis.Redis()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理线程</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Proxies</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="comment"># 线程运行标志</span></span><br><span class="line">        self.__thread__flag = <span class="literal">True</span></span><br><span class="line">        self.get_proxies_api = <span class="string">&quot; 你的代理API &quot;</span></span><br><span class="line">        self.Proxies = &#123;</span><br><span class="line">            <span class="string">&quot;http&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;https&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 结束线程</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__exit__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__thread__flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果代理失效，通知进程主动更新代理</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_proxies</span>(<span class="params">self</span>):</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;第&quot;</span> + <span class="built_in">str</span>(i + <span class="number">1</span>) + <span class="string">&quot;次获取代理。。。&quot;</span>)</span><br><span class="line">            res = requests.get(self.get_proxies_api)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">## 此区间重写获取代理方式 ##</span></span><br><span class="line">            j = <span class="built_in">eval</span>(res.text)</span><br><span class="line">            <span class="keyword">if</span> j[<span class="string">&#x27;ERRORCODE&#x27;</span>] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                self.Proxies[<span class="string">&#x27;http&#x27;</span>] = <span class="string">&quot;http://&quot;</span> + j[<span class="string">&#x27;RESULT&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;ip&#x27;</span>] + <span class="string">&quot;:&quot;</span> + j[<span class="string">&#x27;RESULT&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;port&#x27;</span>]</span><br><span class="line">                self.Proxies[<span class="string">&#x27;https&#x27;</span>] = <span class="string">&quot;http://&quot;</span> + j[<span class="string">&#x27;RESULT&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;ip&#x27;</span>] + <span class="string">&quot;:&quot;</span> + j[<span class="string">&#x27;RESULT&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;port&#x27;</span>]</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="comment">## 此区间重写获取代理方式 ##</span></span><br><span class="line">            </span><br><span class="line">            time.sleep(<span class="number">1.2</span>)</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;获取代理失败，程序退出。。。&quot;</span>)</span><br><span class="line">            exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 监测代理时间。如果超时更新代理</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span></span><br><span class="line">        start_time = time.time()</span><br><span class="line">        <span class="keyword">while</span> self.__thread__flag:</span><br><span class="line">            <span class="comment"># 设置代理生存时间为60s</span></span><br><span class="line">            <span class="keyword">if</span> start_time - time.time() &gt; <span class="number">60</span>:</span><br><span class="line">                <span class="comment"># 重设代理使用时长</span></span><br><span class="line">                start_time = time.time()</span><br><span class="line">                self.get_proxies()</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UrlManager</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;url管理&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 初始化url池</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, db_set_name=<span class="string">&#x27;&#x27;</span>, use_redis=<span class="literal">False</span></span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;支持Redis队列解决断点续爬功能，需指定参数use_redis=True</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param db_set_name str Redis队列数据库名，默认为空</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.use_redis = use_redis</span><br><span class="line">        self.db_set_name = db_set_name</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> use_redis:</span><br><span class="line">            self.url_list = []</span><br><span class="line">            self.url_set = <span class="built_in">set</span>()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义插入url方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_url</span>(<span class="params">self, url: <span class="built_in">str</span></span>) -&gt; <span class="literal">None</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.use_redis:</span><br><span class="line">            <span class="keyword">if</span> url <span class="keyword">not</span> <span class="keyword">in</span> self.url_set:</span><br><span class="line">                self.url_set.add(url)</span><br><span class="line">                self.url_list.append(url)</span><br><span class="line">        <span class="keyword">elif</span> redis.sadd(<span class="string">&quot;set_&quot;</span> + self.db_set_name, url):  <span class="comment"># 如果插入成功，会返回数据量</span></span><br><span class="line">            redis.rpush(<span class="string">&quot;list_&quot;</span> + self.db_set_name, url)  <span class="comment"># 列表尾部插入</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从队列头部提取url</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self</span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.use_redis:</span><br><span class="line">            <span class="keyword">return</span> self.url_list.pop(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> redis.lpop(<span class="string">&quot;list_&quot;</span> + self.db_set_name).decode(<span class="string">&quot;utf-8&quot;</span>)  <span class="comment"># 列表头部pop</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 队列还有URL吗</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">not_complete</span>(<span class="params">self</span>) -&gt; <span class="built_in">bool</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.use_redis <span class="keyword">and</span> <span class="built_in">len</span>(self.url_list):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> redis.llen(<span class="string">&quot;list_&quot;</span> + self.db_set_name) != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 页面资源下载</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HtmlDownloader</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 实例化Proxies类</span></span><br><span class="line">        <span class="comment"># 使用代理请取消注释此行 self.proxies = Proxies()</span></span><br><span class="line">        <span class="comment"># 启动代理线程</span></span><br><span class="line">        <span class="comment"># 使用代理请取消注释此行 self.proxies.start()</span></span><br><span class="line">        <span class="comment"># 默认请求头</span></span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &quot;</span></span><br><span class="line">                          <span class="string">&quot;Chrome/85.0.4183.102 Safari/537.36 Edg/85.0.564.51 &quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">self, url: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;./error_log.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> err_log:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># 使用代理请取消注释此行 res = requests.get(url, headers=self.headers, proxies=self.proxies.Proxies, timeout=12) </span></span><br><span class="line">                res = requests.get(url, headers=self.headers, timeout=<span class="number">12</span>)</span><br><span class="line">                <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">                    <span class="keyword">return</span> res.text</span><br><span class="line">                <span class="comment"># 非200，更换代理，抛出异常</span></span><br><span class="line">                <span class="comment"># 使用代理请取消注释此行 self.proxies.get_proxies()</span></span><br><span class="line">                res.raise_for_status()</span><br><span class="line">            <span class="comment"># 记录异常</span></span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.HTTPError:</span><br><span class="line">                <span class="built_in">print</span>(url + <span class="string">&quot;; HTTPError; Code &quot;</span> + <span class="built_in">str</span>(res.status_code))</span><br><span class="line">                err_log.write(url + <span class="string">&quot;; HTTPError; Code &quot;</span> + <span class="built_in">str</span>(res.status_code))</span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.Timeout:</span><br><span class="line">                <span class="built_in">print</span>(url + <span class="string">&quot;; Timeout&quot;</span>)</span><br><span class="line">                err_log.write(url + <span class="string">&quot;; Timeout&quot;</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception:</span><br><span class="line">                <span class="built_in">print</span>(url + <span class="string">&quot;; Other Error&quot;</span>)</span><br><span class="line">                err_log.write(url + <span class="string">&quot;; Other Error&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># html解析，需要在主函数中重写</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HtmlParser</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">html_parser</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataSaver</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, db_name=<span class="string">&#x27;&#x27;</span>, set_name=<span class="string">&#x27;&#x27;</span>, use_auto_increase_index=<span class="literal">False</span>, use_redis=<span class="literal">False</span></span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;若要使用Redis缓存数据，指定参数use_redis=True \n使用MongoDB自增ID，指定use_auto_increase_index=True</span></span><br><span class="line"><span class="string">        :param db_name: str 可选 要存储的MongoDB数据库名称</span></span><br><span class="line"><span class="string">        :param set_name: str 可选 要存储的MongoDB集合名</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="keyword">import</span> pymongo</span><br><span class="line">        mg_client = pymongo.MongoClient(<span class="string">&quot;mongodb://localhost:27017/&quot;</span>)</span><br><span class="line"></span><br><span class="line">        self.db_name = db_name</span><br><span class="line">        self.set_name = set_name</span><br><span class="line">        self.use_auto_increase_index = use_auto_increase_index</span><br><span class="line">        self.__tread__flag = <span class="literal">True</span></span><br><span class="line">        self.use_redis = use_redis</span><br><span class="line"></span><br><span class="line">        self.mg_client_counter = mg_client[<span class="string">&quot;counter&quot;</span>]</span><br><span class="line">        self.mg_client_data = mg_client[db_name]</span><br><span class="line">        self.mg_data_db = self.mg_client_data[set_name]</span><br><span class="line">        self.mg_counter_db = self.mg_client_counter[db_name + <span class="string">&quot;@&quot;</span> + set_name]</span><br><span class="line">        self.nextId = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> use_auto_increase_index:     <span class="comment"># 使用自增ID</span></span><br><span class="line">            <span class="keyword">if</span> db_name + <span class="string">&quot;@&quot;</span> + set_name <span class="keyword">in</span> self.mg_client_counter.list_collection_names():</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.mg_counter_db.insert(&#123;</span><br><span class="line">                    <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;_id&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;index&quot;</span>: <span class="number">0</span></span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__exit__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__tread__flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># csv存储</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">to_csv</span>(<span class="params">data: <span class="built_in">list</span>, file_name: <span class="built_in">str</span>, encoding: <span class="built_in">str</span> = <span class="string">&quot;utf-8&quot;</span></span>) -&gt; <span class="literal">None</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;存储到CSV</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param data: dict in list 数据集</span></span><br><span class="line"><span class="string">        :param file_name: str 文件路径</span></span><br><span class="line"><span class="string">        :param encoding: default &quot;utf-8&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        pd.DataFrame(data).to_csv(file_name, encoding=encoding)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># MongoDB自增ID</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getNextId</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span></span><br><span class="line">        self.nextId = self.mg_counter_db.find_one_and_update(&#123;<span class="string">&quot;_id&quot;</span>: <span class="string">&#x27;_id&#x27;</span>&#125;, &#123;<span class="string">&quot;$inc&quot;</span>: &#123;<span class="string">&quot;index&quot;</span>: <span class="number">1</span>&#125;&#125;)[<span class="string">&#x27;index&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">redis_temp</span>(<span class="params">self, data_dict: <span class="built_in">dict</span></span>) -&gt; <span class="literal">None</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;数据缓存到Redis 如果使用此函方法请确保实例化DataSaver时指定了use_redis=True</span></span><br><span class="line"><span class="string">        :param data_dict: dict 数据集合</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 有序集合</span></span><br><span class="line">        redis.sadd(<span class="string">&quot;data_&quot;</span> + self.db_name + <span class="string">&quot;@&quot;</span> + self.set_name, <span class="built_in">str</span>(data_dict))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mongo_insert</span>(<span class="params">self, data_dict: <span class="built_in">dict</span></span>) -&gt; <span class="literal">None</span>:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;向MongoDB直接插入数据，不经过Redis缓存</span></span><br><span class="line"><span class="string">        :param data_dict: dict 数据集合</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.use_auto_increase_index:  <span class="comment"># 使用自增ID</span></span><br><span class="line">            self.getNextId()</span><br><span class="line">            data_dict.update(&#123;<span class="string">&quot;_id&quot;</span>: self.nextId&#125;)</span><br><span class="line">        self.mg_data_db.insert(data_dict)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;Redis缓存数据同步到MongoDB, 请在主程序结束后调用本对象的__exit__方法结束该线程&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 只有在redis缓存数据为空，并且主程序退出的时候才会结束</span></span><br><span class="line">        <span class="keyword">while</span> redis.scard(<span class="string">&quot;data_&quot;</span> + self.db_name + <span class="string">&quot;@&quot;</span> + self.set_name) <span class="keyword">or</span> self.__tread__flag:</span><br><span class="line">            data = redis.spop(<span class="string">&quot;data_&quot;</span> + self.db_name + <span class="string">&quot;@&quot;</span> + self.set_name)</span><br><span class="line">            <span class="keyword">if</span> data:</span><br><span class="line">                data = <span class="built_in">eval</span>(data.decode(<span class="string">&quot;UTF-8&quot;</span>))</span><br><span class="line">                <span class="keyword">if</span> self.use_auto_increase_index:    <span class="comment"># 使用自增ID</span></span><br><span class="line">                    self.getNextId()</span><br><span class="line">                    data.update(&#123;<span class="string">&quot;_id&quot;</span>: self.nextId&#125;)</span><br><span class="line">                self.mg_data_db.insert(data)</span><br><span class="line">            <span class="comment"># 没有数据，休息一会</span></span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="question爬虫"><a href="#question爬虫" class="headerlink" title="question爬虫"></a>question爬虫</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    @author         满目皆星河</span></span><br><span class="line"><span class="string">    @creat_date     2020/10/06</span></span><br><span class="line"><span class="string">    @update_data    2020/10/06</span></span><br><span class="line"><span class="string">    @desc           知乎回答爬虫，爬某个提问下面全部的回答以及回答的详细信息, 存入MongoDB.知乎.questions</span></span><br><span class="line"><span class="string">    @detail</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> SpyderFrame</span><br><span class="line"></span><br><span class="line">URL_MANAGER = SpyderFrame.UrlManager()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HtmlParser</span>(<span class="params">SpyderFrame.HtmlParser</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">question_json_parser</span>(<span class="params">question_text: <span class="built_in">str</span></span>) -&gt; <span class="built_in">list</span>:</span></span><br><span class="line">        <span class="comment"># 格式化，str转字典</span></span><br><span class="line">        question_json = json.loads(question_text)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 游标，下个数据包URL</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> question_json[<span class="string">&quot;paging&quot;</span>][<span class="string">&quot;is_end&quot;</span>]:</span><br><span class="line">            next_url = question_json[<span class="string">&quot;paging&quot;</span>][<span class="string">&quot;next&quot;</span>]</span><br><span class="line">            URL_MANAGER.add_url(next_url)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 解析json里的data数据包</span></span><br><span class="line">        data_results = question_json[<span class="string">&quot;data&quot;</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data_results)):</span><br><span class="line">            <span class="comment"># 修正ID格式，为MongoDB的索引格式</span></span><br><span class="line">            data_results[i].update(&#123;<span class="string">&quot;_id&quot;</span>: data_results[i].pop(<span class="string">&quot;id&quot;</span>)&#125;)</span><br><span class="line">            <span class="keyword">yield</span> data_results[i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spyder</span>(<span class="params">question_id_list: <span class="built_in">list</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :input str in list 列表内嵌套字符串</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    base_url_start = <span class="string">&quot;https://www.zhihu.com/api/v4/questions/&quot;</span></span><br><span class="line">    base_url_end = <span class="string">&quot;/answers?include=data%5B%2A%5D.is_normal%2Cadmin_closed_comment%2Creward_info%2Cis_collapsed&quot;</span> \</span><br><span class="line">                   <span class="string">&quot;%2Cannotation_action%2Cannotation_detail%2Ccollapse_reason%2Cis_sticky%2Ccollapsed_by&quot;</span> \</span><br><span class="line">                   <span class="string">&quot;%2Csuggest_edit%2Ccomment_count%2Ccan_comment%2Ccontent%2Ceditable_content%2Cvoteup_count&quot;</span> \</span><br><span class="line">                   <span class="string">&quot;%2Creshipment_settings%2Ccomment_permission%2Ccreated_time%2Cupdated_time%2Creview_info&quot;</span> \</span><br><span class="line">                   <span class="string">&quot;%2Crelevant_info%2Cquestion%2Cexcerpt%2Crelationship.is_authorized%2Cis_author%2Cvoting&quot;</span> \</span><br><span class="line">                   <span class="string">&quot;%2Cis_thanked%2Cis_nothelp%2Cis_labeled%2Cis_recognized%2Cpaid_info%2Cpaid_info_content%3Bdata%5B&quot;</span> \</span><br><span class="line">                   <span class="string">&quot;%2A%5D.mark_infos%5B%2A%5D.url%3Bdata%5B%2A%5D.author.follower_count%2Cbadge%5B%2A%5D.topics&quot;</span> \</span><br><span class="line">                   <span class="string">&quot;&amp;limit=5&amp;offset=0&quot;</span></span><br><span class="line">    html_parser = HtmlParser()</span><br><span class="line">    html_downloader = SpyderFrame.HtmlDownloader()</span><br><span class="line">    data_saver = SpyderFrame.DataSaver(db_name=<span class="string">&quot;知乎&quot;</span>, set_name=<span class="string">&quot;questions&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化URL队列</span></span><br><span class="line">    <span class="keyword">for</span> question_id <span class="keyword">in</span> question_id_list:</span><br><span class="line">        URL_MANAGER.add_url(url=base_url_start + question_id + base_url_end)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> URL_MANAGER.not_complete():</span><br><span class="line">        url = URL_MANAGER.get()</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> html_parser.question_json_parser(html_downloader.download(url)):</span><br><span class="line">            data_saver.mongo_insert(data_dict=data)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 结束线程</span></span><br><span class="line">    <span class="comment"># 使用代理请取消注释此行 html_downloader.proxies.__exit__()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    question_list = []</span><br><span class="line">    <span class="keyword">for</span> question <span class="keyword">in</span> <span class="built_in">input</span>(<span class="string">&quot;请输入问题ID，多个question_id请用英文逗号分隔：&quot;</span>).split(<span class="string">&quot;,&quot;</span>):</span><br><span class="line">        question_list.append(question.strip())</span><br><span class="line">    spyder(question_list)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop（HA）高可用集群搭建</title>
      <link href="/2020/10/02/hadoop-ha-gao-ke-yong-ji-qun-da-jian/"/>
      <url>/2020/10/02/hadoop-ha-gao-ke-yong-ji-qun-da-jian/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2020/12/27更新 修复yarn-site.xml 解决Sqoop与Hive 因为AM引起的问题</p></blockquote><h1 id="系统规划"><a href="#系统规划" class="headerlink" title="系统规划"></a>系统规划</h1><h2 id="所需工具"><a href="#所需工具" class="headerlink" title="所需工具"></a>所需工具</h2><ul><li>jdk-8u261-linux-x64.tar.gz：Oracle官方 <a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">下载地址</a> ( 需要Oracle账号登录 )</li><li>XFTP7：官网下载</li><li>apache-zookeeper-3.6.2-bin.tar.gz：<a href="http://archive.apache.org/dist/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz">下载地址</a>（要注意bin.tar.gz才是我们需要的，不带bin的无法直接使用）</li><li>hadoop-3.1.4.tar.gz：<a href="http://archive.apache.org/dist/hadoop/common/hadoop-3.1.4/hadoop-3.1.4.tar.gz">下载地址</a></li></ul><h2 id="系统安全规则"><a href="#系统安全规则" class="headerlink" title="系统安全规则"></a>系统安全规则</h2><div class="note warning"><p>请注意配置好防火墙和selinux规则</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查防火墙状态</span></span><br><span class="line">systemctl status firewalld</span><br><span class="line"><span class="comment"># 临时停用防火墙（关机失效）</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="comment"># 永久禁用防火墙（需要重启）</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><h2 id="节点规划"><a href="#节点规划" class="headerlink" title="节点规划"></a>节点规划</h2><p>对每个结点进行静态IP的指定，在这里列出我选择的每个节点的IP：</p><table><thead><tr><th align="center">主机名</th><th align="center">IP</th></tr></thead><tbody><tr><td align="center">Master1</td><td align="center">192.168.100.101</td></tr><tr><td align="center">Master2</td><td align="center">192.168.100.102</td></tr><tr><td align="center">Slave1</td><td align="center">192.168.100.111</td></tr><tr><td align="center">Slave2</td><td align="center">192.168.100.112</td></tr><tr><td align="center">Slave3</td><td align="center">192.168.100.113</td></tr></tbody></table><h1 id="验证JDK安装"><a href="#验证JDK安装" class="headerlink" title="验证JDK安装"></a>验证JDK安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure><ul><li>JDK已安装</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_JDK%E5%B7%B2%E5%AE%89%E8%A3%85.png" alt="JDK已安装"></p><ul><li>JDK未安装</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_JDK%E6%9C%AA%E5%AE%89%E8%A3%85.png" alt="JDK未安装"></p><div class="note primary"><p>如果未安装JDK，可参照 <a href="https://myblog.org.cn/2020/09/22/centos-an-zhuang-jdk8/" alt="CentOS安装jdk8">CentOS安装jdk8</a> 进行安装</p></div><h1 id="克隆虚拟机并配置"><a href="#克隆虚拟机并配置" class="headerlink" title="克隆虚拟机并配置"></a>克隆虚拟机并配置</h1><h2 id="配置Master1的HostName和静态IP地址"><a href="#配置Master1的HostName和静态IP地址" class="headerlink" title="配置Master1的HostName和静态IP地址"></a>配置Master1的HostName和静态IP地址</h2><p>修改Master1的HostName</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname Master1</span><br></pre></td></tr></table></figure><p>指定Master1的静态IP地址（编辑网卡配置文件）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><p>打开vim编辑器后按下i键进入插入模式，即可对文件进行修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">PROXY_METHOD=<span class="string">&quot;none&quot;</span></span><br><span class="line">BROWSER_ONLY=<span class="string">&quot;no&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;static&quot;</span><span class="comment"># 获取IP地址的方式为静态指定</span></span><br><span class="line">DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6INIT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">&quot;stable-privacy&quot;</span></span><br><span class="line">NAME=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">UUID=<span class="string">&quot;a20f6be7-2836-454e-a233-4b5dbd920000&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPADDR=192.168.100.111<span class="comment"># 指定静态IP</span></span><br><span class="line">GATEWAY=192.168.100.2<span class="comment"># 指定网关</span></span><br><span class="line">DNS1=223.5.5.5<span class="comment"># DNS1</span></span><br><span class="line">DNS2=223.6.6.6<span class="comment"># DNS2</span></span><br></pre></td></tr></table></figure><h2 id="修改hosts文件，让节点之间相互“认识”"><a href="#修改hosts文件，让节点之间相互“认识”" class="headerlink" title="修改hosts文件，让节点之间相互“认识”"></a>修改hosts文件，让节点之间相互“认识”</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line"><span class="comment"># 在文件末尾添加下面的信息</span></span><br><span class="line">192.168.100.101 master1</span><br><span class="line">192.168.100.102 master2</span><br><span class="line">192.168.100.111 slave1</span><br><span class="line">192.168.100.112 slave2</span><br><span class="line">192.168.100.113 slave3</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_hosts.png" alt="hosts"></p><h3 id="修改Windows中的Hosts"><a href="#修改Windows中的Hosts" class="headerlink" title="修改Windows中的Hosts"></a>修改Windows中的Hosts</h3><div class="note warning"><p>如果不修改Windows中的hosts文件，有可能无法访问YARN网页版本（master:8088）</p></div><p>找到文件夹 <span class="inline-tag green">C:\Windows\System32\drivers\etc</span> ，将其中的hosts文件拖到桌面（因为Windows权限设置无法直接修改），然后 <strong>右键 &gt;&gt; 打开方式 &gt;&gt; 选择记事本打开</strong></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_Windows%E4%BF%AE%E6%94%B9Hosts.png" alt="Windows修改Hosts"><br>在文件中将hosts信息添加进去，保存，再拖回到原来的文件夹里面就可以了</p><h2 id="克隆虚拟机"><a href="#克隆虚拟机" class="headerlink" title="克隆虚拟机"></a>克隆虚拟机</h2><p>关闭Master电源&gt;&gt;&gt;右键Master&gt;&gt;&gt;管理&gt;&gt;&gt;克隆&gt;&gt;&gt;创建完整克隆</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_%E5%85%8B%E9%9A%86.jpg" alt="Windows修改Hosts"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_%E5%88%9B%E5%BB%BA%E5%AE%8C%E6%95%B4%E5%85%8B%E9%9A%86.png" alt="创建完整克隆"><br>输入克隆出来的虚拟机名称即可，如此反复一共创建<strong>四个</strong>克隆：Master2、Slave1、Slave2、Slave3</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_%E5%85%8B%E9%9A%86%E5%AE%8C%E6%88%90.png" alt="克隆完成"></p><h3 id="分别配置四个节点的HostName与IP地址"><a href="#分别配置四个节点的HostName与IP地址" class="headerlink" title="分别配置四个节点的HostName与IP地址"></a>分别配置四个节点的HostName与IP地址</h3><p>开启五个虚拟机，<strong>分别修改四个节点</strong>的HostName：Master2、Slave1、Slave2、Slave3；并且按照前面的节点与IP对照表<strong>分别修改四个节点的静态IP</strong></p><p>**<u>例如</u>**在Slave1中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改主机名</span></span><br><span class="line">hostnamectl set-hostname slave1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改网卡配置文件</span></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33 </span><br></pre></td></tr></table></figure><p>Slave1的ifcfg-ens33的配置文件修改为如下形式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">PROXY_METHOD=<span class="string">&quot;none&quot;</span></span><br><span class="line">BROWSER_ONLY=<span class="string">&quot;no&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;static&quot;</span></span><br><span class="line">DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6INIT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">&quot;stable-privacy&quot;</span></span><br><span class="line">NAME=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">UUID=<span class="string">&quot;a20f6be7-2836-454e-a233-4b5dbd920000&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;ens33&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPADDR=192.168.100.111<span class="comment"># 仅修改静态IP即可</span></span><br><span class="line">GATEWAY=192.168.100.1</span><br><span class="line">DNS1=223.5.5.5</span><br><span class="line">DNS2=223.6.6.6</span><br></pre></td></tr></table></figure><p>Master2、Slave2、Slave3也是如此，修改完hostname记得重启生效哦</p><h1 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h1><h2 id="创建密钥"><a href="#创建密钥" class="headerlink" title="创建密钥"></a>创建密钥</h2><p>​    首先将五台虚拟机全部启动，只登录Master1即可，在Master1中执行以下命令创建密钥，遇到提示信息直接按回车即可，无需理会</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成密钥</span></span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="comment"># 发送密钥至四个节点（本机也需要），过程中会提示输入密码，密码是节点的root用户密码</span></span><br><span class="line"><span class="built_in">cd</span> /root/.ssh</span><br><span class="line">ssh-copy-id master1</span><br><span class="line">ssh-copy-id master2</span><br><span class="line">ssh-copy-id slave1</span><br><span class="line">ssh-copy-id slave2</span><br><span class="line">ssh-copy-id slave3</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证是否成功</span></span><br><span class="line">ssh root@slave1</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95.png" alt="ssh免密登录"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F.png" alt="ssh免密登录成功"></p><h2 id="分发私钥"><a href="#分发私钥" class="headerlink" title="分发私钥"></a>分发私钥</h2><p>​        ssh-copy-id 是将公钥分发至目标服务器的<code>~/.ssh/authorized_keys</code>文件中，因此将私钥分发至各个节点，即可使得所有节点都可以相互免密登录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp ~/.ssh/id_rsa master2:~/.ssh/id_rsa</span><br><span class="line">scp ~/.ssh/id_rsa slave1:~/.ssh/id_rsa</span><br><span class="line">scp ~/.ssh/id_rsa slave2:~/.ssh/id_rsa</span><br><span class="line">scp ~/.ssh/id_rsa slave3:~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>通过master2连接一下其他节点，以验证免密登录</p><h1 id="安装Zookeeper"><a href="#安装Zookeeper" class="headerlink" title="安装Zookeeper"></a>安装Zookeeper</h1><div class="note warning"><p>请注意Hadoop中Zookeeper节点数应为奇数且大于三</p></div><h2 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget http://archive.apache.org/dist/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxf apache-zookeeper-3.6.2-bin.tar.gz</span><br></pre></td></tr></table></figure><div class="note warning"><p>最新版本的Zookeeper源码包应使用apache-zookeeper-x.x.x-<strong>bin</strong>.tar.gz而不是apache-zookeeper-x.x.x.tar.gz</p></div><h2 id="配置Zookeeper"><a href="#配置Zookeeper" class="headerlink" title="配置Zookeeper"></a>配置Zookeeper</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建数据存放路径</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin</span><br><span class="line">mkdir data</span><br><span class="line"><span class="comment"># 配置文件路径</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin/conf</span><br><span class="line"><span class="comment"># 复制配置文件</span></span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line">vim zoo.cfg</span><br></pre></td></tr></table></figure><p>配置文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 心跳检查间隔时间2s</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># 集群服务器中所有服务器之间的同步的时间限制的心跳数,如果在10个心跳周期内没有一半的集群服务器完成同步,那么会重新进行leader的选举</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="comment"># 值在5个心跳周期内如果follower没有从leader同步完成数据,那么对于follower会进行重启操作</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="comment"># 数据的存放目录</span></span><br><span class="line">dataDir=/usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin/data</span><br><span class="line"><span class="comment"># 集群配置 server.1 第一个服务器</span></span><br><span class="line"><span class="comment"># lab301:2888:3888 第一个个是主机名称,2888是服务器之间进行数据传输的端口 3888 是服务器选举机制使用的端口</span></span><br><span class="line">server.1=master1:2888:3888</span><br><span class="line">server.2=master2:2888:3888</span><br><span class="line">server.3=slave1:2888:3888</span><br><span class="line">server.4=slave2:2888:3888</span><br><span class="line">server.5=slave3:2888:3888</span><br><span class="line"><span class="comment"># 客户端连接端口</span></span><br><span class="line">clientPort=2181</span><br></pre></td></tr></table></figure><h2 id="分发Zookeeper文件"><a href="#分发Zookeeper文件" class="headerlink" title="分发Zookeeper文件"></a>分发Zookeeper文件</h2><p>使用scp命令分发Zookeeper至其他节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要配置ssh免密登录 -r 用于拷贝文件目录 第一个参数是需要拷贝的文件, 第二个参数是拷贝到目录主机的文件目录</span></span><br><span class="line"><span class="comment"># 需要注意，请勿在第二个参数添加需要拷贝的文件夹的名称，写到父文件夹即可</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin master2:/usr/<span class="built_in">local</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin slave1:/usr/<span class="built_in">local</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin slave2:/usr/<span class="built_in">local</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin slave3:/usr/<span class="built_in">local</span></span><br></pre></td></tr></table></figure><h2 id="创建myid文件"><a href="#创建myid文件" class="headerlink" title="创建myid文件"></a>创建myid文件</h2><pre><code>    配置完zoo.cfg, 需要在各节点的数据存放目录 /usr/local/apache-zookeeper-3.6.2-bin/data 创建一个名称为myid的文件,在集群的选举机制需要使用到</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin/data</span><br><span class="line"><span class="comment"># 使用重定向命令 往myid文件中输出1 如果myid不存在,会自动创建</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; myid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用ssh在master1 登录到其他节点执行命令,修改myid的值</span></span><br><span class="line">ssh master2 <span class="string">&quot;echo 2 &gt; /usr/local/apache-zookeeper-3.6.2-bin/data/myid&quot;</span></span><br><span class="line">ssh slave1 <span class="string">&quot;echo 3 &gt; /usr/local/apache-zookeeper-3.6.2-bin/data/myid&quot;</span></span><br><span class="line">ssh slave2 <span class="string">&quot;echo 4 &gt; /usr/local/apache-zookeeper-3.6.2-bin/data/myid&quot;</span></span><br><span class="line">ssh slave3 <span class="string">&quot;echo 5 &gt; /usr/local/apache-zookeeper-3.6.2-bin/data/myid&quot;</span></span><br></pre></td></tr></table></figure><h2 id="在所有的服务器配置环境变量"><a href="#在所有的服务器配置环境变量" class="headerlink" title="在所有的服务器配置环境变量"></a>在所有的服务器配置环境变量</h2><div class="note danger"><p>如果是刚复制好的，可以在master1配置好/etc/profile后分发至全部节点。如果你是真实物理机或各节点操作系统类型、版本不相同，必须手动配置每一台服务器的环境变量</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在文件中添加以下内容</span></span><br><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ZOOKEEPER_HOME</span>/bin</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分发环境变量配置文件（如果你不明白自己在做什么，请忽略以下四条代码，对每台节点手动配置）</span></span><br><span class="line">scp /etc/profile master2:/etc/profile</span><br><span class="line">scp /etc/profile slave1:/etc/profile</span><br><span class="line">scp /etc/profile slave2:/etc/profile</span><br><span class="line">scp /etc/profile slave3:/etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在每个节点上执行以下命令，使环境变量生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h2 id="启动Zookeeper"><a href="#启动Zookeeper" class="headerlink" title="启动Zookeeper"></a>启动Zookeeper</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在每个节点上执行以下命令，启动Zookeeper</span></span><br><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看Zookeeper运行状态</span></span><br><span class="line">zkServer.sh status</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Zookeeper%E7%9A%84%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2_Zookeeper%E7%8A%B6%E6%80%81.png" alt="Zookeeper状态"><br>可以看到Zookeeper启动成功，并且该机器上以从节点身份运行</p><h1 id="Hadoop集群配置"><a href="#Hadoop集群配置" class="headerlink" title="Hadoop集群配置"></a>Hadoop集群配置</h1><h2 id="下载并安装Hadoop"><a href="#下载并安装Hadoop" class="headerlink" title="下载并安装Hadoop"></a>下载并安装Hadoop</h2><p>我选择安装到 <span class="inline-tag green">/usr/local/hadoop-3.1.4</span> ，截止到本文发布（2020-09-29），Hadoop 3.1.4为最新的3.1版本分支。</p><h3 id="下载解压二进制文件"><a href="#下载解压二进制文件" class="headerlink" title="下载解压二进制文件"></a>下载解压二进制文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-3.1.4/hadoop-3.1.4.tar.gz</span><br><span class="line">tar -zxf hadoop-3.1.4.tar.gz</span><br></pre></td></tr></table></figure><h3 id="将Hadoop添加至环境变量"><a href="#将Hadoop添加至环境变量" class="headerlink" title="将Hadoop添加至环境变量"></a>将Hadoop添加至环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要对每个节点都进行修改，也可以按照5.5的方法先修改Master1的环境变量，然后使用scp分发至各节点</span></span><br><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加以下内容</span></span><br><span class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/<span class="built_in">local</span>/hadoop-3.1.4</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/sbin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分发/etc/profile</span></span><br><span class="line">scp /etc/profile master2:/etc/profile</span><br><span class="line">scp /etc/profile slave1:/etc/profile</span><br><span class="line">scp /etc/profile slave2:/etc/profile</span><br><span class="line">scp /etc/profile slave3:/etc/profile</span><br></pre></td></tr></table></figure><p>在<strong>每个节点</strong>上执行 <code>source /etc/profile</code>使新添加的环境变量生效</p><h3 id="修改Hadoop配置文件"><a href="#修改Hadoop配置文件" class="headerlink" title="修改Hadoop配置文件"></a>修改Hadoop配置文件</h3><p><code>core-site.xml</code>、<code>hdfs-site.xml</code>、<code>mapred-site.xml</code>、<code>yarn-site.xml</code>、<code>workers</code>位于<span class="inline-tag green"> /usr/local/hadoop-3.1.4/etc/hadoop</span></p><div class="note success"><p>建议使用vi编辑器直接复制粘贴，可以保持复制后的格式，vim会杂乱无章</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/hadoop-3.1.4/etc/hadoop</span><br><span class="line"><span class="comment"># 分别使用“vi + 文件名”的命令对下列xml文件进行编辑，例如core-site.xml</span></span><br><span class="line">vi core-site.xml</span><br></pre></td></tr></table></figure><h4 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--指定hdfs连接地址，集群模式（高可用）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://cluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定ZooKeeper集群的地址和端口。注意，数量一定是奇数，且不少于三个节点--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>ha.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:2181,master2:2181,slave1:2181,slave2:2181,slave3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数据保存的副本数量,因为使用五台服务器,搭建三个数据节点,所以值只要不超过即可 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 为namenode集群定义一个services name --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.nameservices<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>cluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- nameservice 包含哪些namenode，为各个namenode起名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.namenodes.cluster<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>nn1,nn2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 名为nn01的namenode的rpc地址和端口号，rpc用来和datanode通讯 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.cluster.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--名为nn01的namenode的http地址和端口号，用来和web客户端通讯 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.cluster.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 名为nn02的namenode的rpc地址和端口号，rpc用来和datanode通讯 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.cluster.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master2:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--名为nn02的namenode的http地址和端口号，用来和web客户端通讯 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.cluster.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>master2:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- namenode间用于共享编辑日志的journal节点列表 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>qjournal://master1:8485;master2:8485/cluster<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- journalnode 上用于存放edits日志的目录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop-3.1.4/journaldata<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定该集群出现故障时，是否自动切换到另一台namenode --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.automatic-failover.enabled.cluster<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置失败自动切换实现方式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.client.failover.proxy.provider.cluster<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 一旦需要NameNode切换，使用ssh方式进行操作 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                  sshfence</span><br><span class="line">                  shell(/bin/true)</span><br><span class="line">                <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 如果使用ssh进行故障切换，使用ssh通信时用的密钥存储的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.ssh.private-key-files<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/root/.ssh/id_rsa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- connect-timeout超时时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.ssh.connect-timeout<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HDFS文件系统元信息保存目录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop-3.1.4/tmp/dfs/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- HDFS文件系统数据保存目录 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop-3.1.4/tmp/dfs/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 采用yarn作为mapreduce的资源调度框架 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 启用Resource Manager HA高可用性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定resourcemanager的名字 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>yrc<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用了2个resourcemanager,分别指定Resourcemanager的地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>rm1,rm2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定rm1的地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定rm2的地址  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定zookeeper集群机器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:2181,master1:2181,slave1:2181,slave2:2181,slave3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- NodeManager上运行的附属服务，默认是mapreduce_shuffle --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.application.classpath<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">/usr/local/hadoop-3.1.4/etc/hadoop:/usr/local/hadoop-3.1.4/share/hadoop/common/lib/*:/usr/local/hadoop-3.1.4/share/hadoop/common/*:/usr/local/hadoop-3.1.4/share/hadoop/hdfs:/usr/local/hadoop-3.1.4/share/hadoop/hdfs/lib/*:/usr/local/hadoop-3.1.4/share/hadoop/hdfs/*:/usr/local/hadoop-3.1.4/share/hadoop/mapreduce/lib/*:/usr/local/hadoop-3.1.4/share/hadoop/mapreduce/*:/usr/local/hadoop-3.1.4/share/hadoop/yarn:/usr/local/hadoop-3.1.4/share/hadoop/yarn/lib/*:/usr/local/hadoop-3.1.4/share/hadoop/yarn/*</span><br><span class="line"><span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master2:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master2:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master2:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master2:8031<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master2:8033<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.admin.address.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master2:23142<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:8031<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:8033<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.admin.address.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master1:23142<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.vmem-check-enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="workers"><a href="#workers" class="headerlink" title="workers"></a>workers</h4><p>workers用于指定Hadoop工作节点，修改为如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slave1</span><br><span class="line">slave2</span><br><span class="line">slave3</span><br></pre></td></tr></table></figure><h3 id="修改Hadoop启动脚本"><a href="#修改Hadoop启动脚本" class="headerlink" title="修改Hadoop启动脚本"></a>修改Hadoop启动脚本</h3><h4 id="hadoop-env-sh"><a href="#hadoop-env-sh" class="headerlink" title="hadoop-env.sh"></a>hadoop-env.sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此文件位于/usr/local/hadoop-3.1.4/etc/hadoop</span></span><br><span class="line">vim /usr/<span class="built_in">local</span>/hadoop-3.1.4/etc/hadoop/hadoop-env.sh</span><br></pre></td></tr></table></figure><p>修改以下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/jdk1.8.0_261 <span class="comment"># JAVA_HOME的主路径，请根据实际情况填写</span></span><br></pre></td></tr></table></figure><h4 id="start-dfs-sh和stop-dfs-sh"><a href="#start-dfs-sh和stop-dfs-sh" class="headerlink" title="start-dfs.sh和stop-dfs.sh"></a>start-dfs.sh和stop-dfs.sh</h4><p>这两个文件在 <span class="inline-tag green">/usr/local/hadoop/sbin</span> ，分别使用vi编辑他们。分别在这两个文件的<strong>头部</strong>添加以下参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line">HDFS_JOURNALNODE_USER=root</span><br><span class="line">HDFS_ZKFC_USER=root</span><br><span class="line">HDFS_DATANODE_USER=root</span><br><span class="line">HDFS_DATANODE_SECURE_USER=hdfs</span><br><span class="line">HDFS_NAMENODE_USER=root</span><br><span class="line">HDFS_SECONDARYNAMENODE_USER=root</span><br></pre></td></tr></table></figure><h4 id="start-yarn-sh和stop-yarn-sh"><a href="#start-yarn-sh和stop-yarn-sh" class="headerlink" title="start-yarn.sh和stop-yarn.sh"></a>start-yarn.sh和stop-yarn.sh</h4><p>这两个文件也在 <span class="inline-tag green">/usr/local/hadoop/sbin</span>，分别在这两个文件的头部添加以下参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line">YARN_RESOURCEMANAGER_USER=root</span><br><span class="line">HDFS_DATANODE_SECURE_USER=yarn</span><br><span class="line">YARN_NODEMANAGER_USER=root</span><br></pre></td></tr></table></figure><h2 id="将Hadoop分发至各个节点中"><a href="#将Hadoop分发至各个节点中" class="headerlink" title="将Hadoop分发至各个节点中"></a>将Hadoop分发至各个节点中</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp -r /usr/<span class="built_in">local</span>/hadoop-3.1.4 master2:/usr/<span class="built_in">local</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/hadoop-3.1.4 slave1:/usr/<span class="built_in">local</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/hadoop-3.1.4 slave2:/usr/<span class="built_in">local</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/hadoop-3.1.4 slave3:/usr/<span class="built_in">local</span></span><br></pre></td></tr></table></figure><h2 id="启动journalnode"><a href="#启动journalnode" class="headerlink" title="启动journalnode"></a>启动journalnode</h2><p>​        第一次启动Hadoop需要首先在<strong>两台NameNode</strong>上执行以下命令以启动journalnode，用来同步NameNode信息，以后就不需要再启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs --daemon start journalnode</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_%E5%90%AF%E5%8A%A8journalnode.png" alt="启动journalnode"></p><h2 id="格式化HDFS"><a href="#格式化HDFS" class="headerlink" title="格式化HDFS"></a>格式化HDFS</h2><p>在Master1执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_%E6%A0%BC%E5%BC%8F%E5%8C%96hdfs%E6%88%90%E5%8A%9F.png" alt="格式化hdfs成功"><br>出现以上<code>Successfully formatted</code>即为格式化成功</p><h2 id="格式化并启动zkfc"><a href="#格式化并启动zkfc" class="headerlink" title="格式化并启动zkfc"></a>格式化并启动zkfc</h2><p>启动Zookeeper，在每个节点上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><p>查看zookeeper状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh status</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_Zookeeper%E5%90%AF%E5%8A%A8.png" alt="Zookeeper启动"></p><p>Master1上执行如下命令，以格式化zkfc:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs zkfc -formatZK</span><br></pre></td></tr></table></figure><div class="note warning"><p>请确保执行这条命令之前各个节点上的Zookeeper处于开启状态</p></div><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_%E6%A0%BC%E5%BC%8F%E5%8C%96zkfc.png" alt="格式化zkfc"><br><strong>Master1和Master2</strong>上执行如下命令，以启动zkfc:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs --daemon start zkfc</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_%E5%90%AF%E5%8A%A8zkfc.png" alt="启动zkfc"></p><h2 id="启动Master1上的NameNode"><a href="#启动Master1上的NameNode" class="headerlink" title="启动Master1上的NameNode"></a>启动Master1上的NameNode</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs --daemon start namenode</span><br></pre></td></tr></table></figure><h2 id="NameNode主从信息同步"><a href="#NameNode主从信息同步" class="headerlink" title="NameNode主从信息同步"></a>NameNode主从信息同步</h2><p>​        需要在其余的NameNode节点上执行以下命令，此教程中除了Master1只剩Master2一个NameNode，因此只在Master2上执行即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -bootstrapStandby</span><br></pre></td></tr></table></figure><p>启动Master2上的NameNode，Master2上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs --daemon start namenode</span><br></pre></td></tr></table></figure><h2 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h2><p>任意一个NameNode上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-all.sh</span><br></pre></td></tr></table></figure><h1 id="查看集群"><a href="#查看集群" class="headerlink" title="查看集群"></a>查看集群</h1><h2 id="各节点上的后台进程"><a href="#各节点上的后台进程" class="headerlink" title="各节点上的后台进程"></a>各节点上的后台进程</h2><table><thead><tr><th align="center">主机名</th><th align="center">IP</th></tr></thead><tbody><tr><td align="center"><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_master1.png" alt="master1"><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_master2.png" alt="master2"><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_slave1.png" alt="slave1"><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_slave2.png" alt="slave2"><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_slave3.png" alt="slave3"></td><td align="center"></td></tr></tbody></table><h2 id="访问HDFS和YARN"><a href="#访问HDFS和YARN" class="headerlink" title="访问HDFS和YARN"></a>访问HDFS和YARN</h2><h3 id="两个NameNode的HDFS"><a href="#两个NameNode的HDFS" class="headerlink" title="两个NameNode的HDFS"></a>两个NameNode的HDFS</h3><p>通过浏览器打开以下两个网址</p><p>Master1：<a href="http://192.168.100.101:50070/">http://192.168.100.101:50070</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_Master1-50070.png" alt="Master1-50070-1"><br>Master2：<a href="http://192.168.100.102:50070/">http://192.168.100.102:50070</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_Master2-50070.png" alt="Master2-50070"><br>此时，Master1 处于激活（active）状态，Master2处于待机（standby）状态</p><h3 id="Master1的YARN"><a href="#Master1的YARN" class="headerlink" title="Master1的YARN"></a>Master1的YARN</h3><p>浏览器访问<a href="http://192.168.100.101:8088，发现自动跳转到master2:8088">http://192.168.100.101:8088，发现自动跳转到master2:8088</a></p><div class="note default"><p>如果未配置好Windows下的hosts的话，可能无法访问这个页面，因为Windows不知道master2对应的IP地址是多少</p></div><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_YARN.png" alt="YARN"></p><h1 id="测试NameNode故障转移"><a href="#测试NameNode故障转移" class="headerlink" title="测试NameNode故障转移"></a>测试NameNode故障转移</h1><p>查看两个NameNode的状态 </p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_%E6%9F%A5%E7%9C%8B%E6%89%80%E6%9C%89NameNode%E7%8A%B6%E6%80%81.png" alt="查看所有NameNode状态"><br>kill掉处于激活状态的NameNode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]<span class="comment"># jps</span></span><br><span class="line">5408 ResourceManager</span><br><span class="line">3716 QuorumPeerMain</span><br><span class="line">3958 DFSZKFailoverController</span><br><span class="line">4054 JournalNode</span><br><span class="line">5752 Jps</span><br><span class="line">4186 NameNode</span><br><span class="line">[root@master1 ~]<span class="comment"># kill -9 4186</span></span><br><span class="line">[root@master1 ~]<span class="comment"># jps</span></span><br><span class="line">5408 ResourceManager</span><br><span class="line">3716 QuorumPeerMain</span><br><span class="line">3958 DFSZKFailoverController</span><br><span class="line">4054 JournalNode</span><br><span class="line">5774 Jps</span><br></pre></td></tr></table></figure><p>Master1上的NameNode已经被kill，再次查看两个NameNode的状态</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%EF%BC%88HA%EF%BC%89%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA_%E6%9F%A5%E7%9C%8B%E6%89%80%E6%9C%89NameNode%E7%8A%B6%E6%80%812.png" alt="查看所有NameNode状态2"><br>Master1此时无法链接，Master2已经自动切换到激活状态</p><h1 id="正确启动姿势"><a href="#正确启动姿势" class="headerlink" title="正确启动姿势"></a>正确启动姿势</h1><p>最后来整理一下HA的启动方法</p><ol><li>启动Zookeeper（每个节点）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><ol start="2"><li>启动zkfc（两个NameNode）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs --daemon start zkfc</span><br></pre></td></tr></table></figure><ol start="3"><li>启动集群</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-all.sh</span><br></pre></td></tr></table></figure><div class="note success"><p>Enjoy it ！</p></div>]]></content>
      
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper的安装部署</title>
      <link href="/2020/10/02/zookeeper-de-an-zhuang-bu-shu/"/>
      <url>/2020/10/02/zookeeper-de-an-zhuang-bu-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="节点规划"><a href="#节点规划" class="headerlink" title="节点规划"></a>节点规划</h1><p>对每个结点进行静态IP的指定，在这里列出我选择的每个节点的IP：</p><table><thead><tr><th align="center">主机名</th><th align="center">IP</th></tr></thead><tbody><tr><td align="center">Master1</td><td align="center">192.168.100.101</td></tr><tr><td align="center">Master2</td><td align="center">192.168.100.102</td></tr><tr><td align="center">Salve1</td><td align="center">192.168.100.111</td></tr><tr><td align="center">Salve2</td><td align="center">192.168.100.112</td></tr><tr><td align="center">Salve3</td><td align="center">192.168.100.113</td></tr></tbody></table><h1 id="验证JDK安装"><a href="#验证JDK安装" class="headerlink" title="验证JDK安装"></a>验证JDK安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure><ul><li>JDK已安装</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Zookeeper%E7%9A%84%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2_JDK%E5%B7%B2%E5%AE%89%E8%A3%85.png" alt="JDK已安装"></p><ul><li>JDK未安装</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Zookeeper%E7%9A%84%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2_JDK%E6%9C%AA%E5%AE%89%E8%A3%85.png" alt="JDK未安装"></p><div class="note primary"><p>如果未安装JDK，可参照 <a href="https://myblog.org.cn/2020/09/22/centos-an-zhuang-jdk8/" alt="CentOS安装jdk8">CentOS安装jdk8</a> 进行安装</p></div><h1 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget http://archive.apache.org/dist/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxf apache-zookeeper-3.6.2-bin.tar.gz</span><br></pre></td></tr></table></figure><div class="note warning"><p>最新版本的Zookeeper源码包应使用apache-zookeeper-x.x.x-<strong>bin</strong>.tar.gz而不是apache-zookeeper-x.x.x.tar.gz</p></div><h1 id="配置Zookeeper"><a href="#配置Zookeeper" class="headerlink" title="配置Zookeeper"></a>配置Zookeeper</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建数据存放路径</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin</span><br><span class="line">mkdir data</span><br><span class="line"><span class="comment"># 配置文件路径</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin/conf</span><br><span class="line"><span class="comment"># 复制配置文件</span></span><br><span class="line">cp zoo_sample.cfg zoo.cfg</span><br><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line">vim zoo.cfg</span><br></pre></td></tr></table></figure><p>配置文件如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 心跳检查间隔时间2s</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># 集群服务器中所有服务器之间的同步的时间限制的心跳数,如果在10个心跳周期内没有一半的集群服务器完成同步,那么会重新进行leader的选举</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="comment"># 值在5个心跳周期内如果follower没有从leader同步完成数据,那么对于follower会进行重启操作</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="comment"># 数据的存放目录</span></span><br><span class="line">dataDir=/usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin/data</span><br><span class="line"><span class="comment"># 集群配置 server.1 第一个服务器</span></span><br><span class="line"><span class="comment"># lab301:2888:3888 第一个个是主机名称,2888是服务器之间进行数据传输的端口 3888 是服务器选举机制使用的端口</span></span><br><span class="line">server.1=master1:2888:3888</span><br><span class="line">server.2=master2:2888:3888</span><br><span class="line">server.3=slave1:2888:3888</span><br><span class="line">server.4=slave2:2888:3888</span><br><span class="line">server.5=slave3:2888:3888</span><br><span class="line"><span class="comment"># 客户端连接端口</span></span><br><span class="line">clientPort=2181</span><br></pre></td></tr></table></figure><h1 id="分发Zookeeper文件"><a href="#分发Zookeeper文件" class="headerlink" title="分发Zookeeper文件"></a>分发Zookeeper文件</h1><p>使用scp命令分发Zookeeper至其他节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要配置ssh免密登录 -r 用于拷贝文件目录 第一个参数是需要拷贝的文件, 第二个参数是拷贝到目录主机的文件目录</span></span><br><span class="line"><span class="comment"># 需要注意，请勿在第二个参数添加需要拷贝的文件夹的名称，写到父文件夹即可</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin master2:/usr/<span class="built_in">local</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin slave1:/usr/<span class="built_in">local</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin slave2:/usr/<span class="built_in">local</span></span><br><span class="line">scp -r /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin slave3:/usr/<span class="built_in">local</span></span><br></pre></td></tr></table></figure><h1 id="创建myid文件"><a href="#创建myid文件" class="headerlink" title="创建myid文件"></a>创建myid文件</h1><p>​        配置完zoo.cfg, 需要在各节点的数据存放目录 <span class="inline-tag green">/usr/local/apache-zookeeper-3.6.2-bin/data</span> 创建一个名称为myid的文件,在集群的选举机制需要使用到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin/data</span><br><span class="line"><span class="comment"># 使用重定向命令 往myid文件中输出1 如果myid不存在,会自动创建</span></span><br><span class="line"><span class="built_in">echo</span> 1 &gt; myid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用ssh在master1 登录到其他节点执行命令,修改myid的值</span></span><br><span class="line">ssh master2 <span class="string">&quot;echo 2 &gt; /usr/local/apache-zookeeper-3.6.2-bin/data/myid&quot;</span></span><br><span class="line">ssh slave1 <span class="string">&quot;echo 3 &gt; /usr/local/apache-zookeeper-3.6.2-bin/data/myid&quot;</span></span><br><span class="line">ssh slave2 <span class="string">&quot;echo 4 &gt; /usr/local/apache-zookeeper-3.6.2-bin/data/myid&quot;</span></span><br><span class="line">ssh slave3 <span class="string">&quot;echo 5 &gt; /usr/local/apache-zookeeper-3.6.2-bin/data/myid&quot;</span></span><br></pre></td></tr></table></figure><h1 id="在所有的服务器配置环境变量"><a href="#在所有的服务器配置环境变量" class="headerlink" title="在所有的服务器配置环境变量"></a>在所有的服务器配置环境变量</h1><div class="note danger"><p>​        如果是刚复制好的，可以在master1配置好/etc/profile后分发至全部节点。如果你是真实物理机或各节点操作系统类型、版本不相同，必须手动配置每一台服务器的环境变量</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在文件中添加以下内容</span></span><br><span class="line"><span class="built_in">export</span> ZOOKEEPER_HOME=/usr/<span class="built_in">local</span>/apache-zookeeper-3.6.2-bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ZOOKEEPER_HOME</span>/bin</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分发环境变量配置文件（如果你不明白自己在做什么，请忽略以下四条代码，对每台节点手动配置）</span></span><br><span class="line">scp /etc/profile master2:/etc/profile</span><br><span class="line">scp /etc/profile slave1:/etc/profile</span><br><span class="line">scp /etc/profile slave2:/etc/profile</span><br><span class="line">scp /etc/profile slave3:/etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在每个节点上执行以下命令，使环境变量生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h1 id="启动Zookeeper"><a href="#启动Zookeeper" class="headerlink" title="启动Zookeeper"></a>启动Zookeeper</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在每个节点上执行以下命令，启动Zookeeper</span></span><br><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看Zookeeper运行状态</span></span><br><span class="line">zkServer.sh status</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Zookeeper%E7%9A%84%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2_Zookeeper%E7%8A%B6%E6%80%81.png" alt="Zookeeper状态"><br>可以看到Zookeeper启动成功，并且该机器上以从节点身份运行</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop集群搭建教程（分布式）</title>
      <link href="/2020/10/02/hadoop-ji-qun-da-jian-jiao-cheng-fen-bu-shi/"/>
      <url>/2020/10/02/hadoop-ji-qun-da-jian-jiao-cheng-fen-bu-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 本节将带领大家使用虚拟机搭建两个主节点三个从节点的Hadoop集群</p></blockquote><h1 id="检查防火墙规则"><a href="#检查防火墙规则" class="headerlink" title="检查防火墙规则"></a>检查防火墙规则</h1><div class="note warning"><p>请注意配置好防火墙和selinux规则</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 检查防火墙状态</span></span><br><span class="line">systemctl status firewalld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 临时关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="meta">#</span><span class="bash"> 永久禁用防火墙（需要重启）</span></span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><h1 id="工具清单"><a href="#工具清单" class="headerlink" title="工具清单"></a>工具清单</h1><p>Hadoop 3.1.4：在CentOS操作系统中使用wget命令进行下载（后面有些）</p><p>jdk-8u251-linux-x64.tar.gz：Oracle官方<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">下载地址</a> ( 需要Oracle账号登录 )</p><p>XFTP：百度自行下载</p><div class="note danger"><p>Hadoop3.x版本仅支持jdk8+</p></div><h2 id="验证JDK安装"><a href="#验证JDK安装" class="headerlink" title="验证JDK安装"></a>验证JDK安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 验证环境变量</span></span><br><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_JDK%E9%AA%8C%E8%AF%81%E5%AE%89%E8%A3%85.png" alt="JDK验证安装"><br>出现类似结果代表JDK环境已经成功配置，如果提示命令未找到，请先配置 JAVA JDK环境变量</p><div class="note primary"><p>可参照 <a href="https://myblog.org.cn/2020/09/22/centos-an-zhuang-jdk8/">CentOS安装JDK8</a> 进行JDK配置</p></div><h1 id="创建Master与NAT网络设置"><a href="#创建Master与NAT网络设置" class="headerlink" title="创建Master与NAT网络设置"></a>创建Master与NAT网络设置</h1><p>使用VMware创建一台CentOS虚拟机作为Hadoop Master节点，并完成NAT网关设置。</p><div class="note primary"><p>不会创建虚拟机可以参照我另一篇文章<a href="https://myblog.org.cn/2020/05/05/xu-ni-ji-an-zhuang-centos/">Linux：CentOS虚拟机的安装</a></p></div><blockquote><p>自定义硬件</p><ul><li>内存大小建议根据物理机内存大小、Hadoop节点个数适当调整（博主16G物理内存）</li><li>处理器个数一般选择1个，内核数量自行调整（博主是6核）</li></ul></blockquote><h2 id="调整虚拟网络首选项"><a href="#调整虚拟网络首选项" class="headerlink" title="调整虚拟网络首选项"></a>调整虚拟网络首选项</h2><p>VM选项卡 &gt;&gt;&gt; 编辑 &gt;&gt;&gt; 虚拟网络首选项 &gt;&gt;&gt; 点击右下角的更改设置 &gt;&gt;&gt; 选中VMnet8（NAT模式）并调整子网IP为192.168.100.0（192.168.xxx.0可以自定义，选择自己记得住的子网IP即可）</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_%E8%B0%83%E6%95%B4%E5%AD%90%E7%BD%91IP.png" alt="VMware调整子网IP"><br>调整完成后点击确定即可</p><h2 id="修改Hostname"><a href="#修改Hostname" class="headerlink" title="修改Hostname"></a>修改Hostname</h2><p>修改配置文件 /etc/sysconfig/network来修改Hostname（这台虚拟机作为Master节点，因此修改主机名为Master。需重启才能生效）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname master</span><br></pre></td></tr></table></figure><h2 id="指派静态IP地址"><a href="#指派静态IP地址" class="headerlink" title="指派静态IP地址"></a>指派静态IP地址</h2><p>指派静态IP地址以方便管理，在这里列出我选择的每个节点的IP：</p><table><thead><tr><th align="center">主机名</th><th align="center">IP</th></tr></thead><tbody><tr><td align="center">Master</td><td align="center">192.168.100.101</td></tr><tr><td align="center">Node1</td><td align="center">192.168.100.111</td></tr><tr><td align="center">Node2</td><td align="center">192.168.100.112</td></tr><tr><td align="center">Node3</td><td align="center">192.168.100.113</td></tr></tbody></table><p>首先修改Master的IP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><p>将文件修改为以下形式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD=&quot;none&quot;</span><br><span class="line">BROWSER_ONLY=&quot;no&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;# 修改此属性值为static</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;</span><br><span class="line">NAME=&quot;ens33&quot;</span><br><span class="line">UUID=&quot;a20f6be7-2836-454e-a233-4b5dbd920000&quot;</span><br><span class="line">DEVICE=&quot;ens33&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=192.168.100.101# 指派静态IP</span><br><span class="line">GATEWAY=192.168.100.1# 网关</span><br><span class="line">DNS1=223.5.5.5# DNS1</span><br><span class="line">DNS2=223.6.6.6# DNS2</span><br></pre></td></tr></table></figure><p>修改完成后重启网卡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmcli c reload</span><br><span class="line">nmcli c up ens33</span><br></pre></td></tr></table></figure><h2 id="修改host文件，让节点之间互相”认识”"><a href="#修改host文件，让节点之间互相”认识”" class="headerlink" title="修改host文件，让节点之间互相”认识”"></a>修改host文件，让节点之间互相”认识”</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p>修改文件为以下形式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在文件末尾添加下面的信息</span></span><br><span class="line">192.168.100.101 master</span><br><span class="line">192.168.100.111 node1</span><br><span class="line">192.168.100.112 node2</span><br><span class="line">192.168.100.113 node3</span><br></pre></td></tr></table></figure><h1 id="下载并配置Hadoop"><a href="#下载并配置Hadoop" class="headerlink" title="下载并配置Hadoop"></a>下载并配置Hadoop</h1><h2 id="wget下载并解压Hadoop"><a href="#wget下载并解压Hadoop" class="headerlink" title="wget下载并解压Hadoop"></a>wget下载并解压Hadoop</h2><p>我选择安装到/usr/local目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-3.1.4/hadoop-3.1.4.tar.gz</span><br><span class="line">tar -zxvf hadoop-3.1.4.tar.gz</span><br><span class="line">mv hadoop-3.1.4 hadoop</span><br></pre></td></tr></table></figure><h2 id="配置Hadoop环境变量"><a href="#配置Hadoop环境变量" class="headerlink" title="配置Hadoop环境变量"></a>配置Hadoop环境变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在最后添加以下几行（先按page down或者下箭头翻到最后一行，按下i键进入vim的编辑模式）</span></span><br><span class="line">export HADOOP_HOME=&quot;/usr/local/hadoop&quot;</span><br><span class="line">export PATH=$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH</span><br><span class="line"><span class="meta">#</span><span class="bash"> 编辑完成后按下ESC键，输入:wq保存并退出</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使配置文件生效</span></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="Hadoop配置-1"><a href="#Hadoop配置-1" class="headerlink" title="Hadoop配置[1]"></a>Hadoop配置<sup>[1]</sup></h2><p>文件 <code>core-site.xml</code>、<code>mapred-site.xml</code>、<code>hdfs-site.xml</code>、<code>yarn-site.xml</code>、<code>workers</code> 位于<span class="inline-tag green">/usr/local/hadoop/etc/hadoop</span>内，使用vi进行编辑，配置成为以下形式即可</p><h3 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 保存临时文件目录，需先在/usr/local/hadoop/tmp下创建tmp目录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="mapred-site-xml-配置"><a href="#mapred-site-xml-配置" class="headerlink" title="mapred-site.xml 配置"></a>mapred-site.xml 配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--#设置MapReduce的运行平台为yarn--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="hdfs-site-xml-配置"><a href="#hdfs-site-xml-配置" class="headerlink" title="hdfs-site.xml 配置"></a>hdfs-site.xml 配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 主节点地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/hadoop/dfs/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/hadoop/dfs/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 备份数为默认值2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.webhdfs.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">            配置为false后，可以允许不要检查权限就生成dfs上的文件，方便倒是方便了，但是你需要防止误删除.  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="yarn-site-xml-配置"><a href="#yarn-site-xml-配置" class="headerlink" title="yarn-site.xml 配置"></a>yarn-site.xml 配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Site specific YARN configuration properties --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定yarn的ResourceManager管理界面的地址，不配的话，Active Node始终 为0--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>master<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  #reducer获取数据的方式</span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.vmem-check-enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">            忽略虚拟内存的检查，如果你是安装在虚拟机上，这个配置很有用，配上去之后后续操作不容易出问题。  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8031<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8033<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="workers"><a href="#workers" class="headerlink" title="workers"></a>workers</h3><p>workers用于指定工作节点</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim workers</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 添加以下工作节点信息</span><br><span class="line">master</span><br><span class="line">node1</span><br><span class="line">node2</span><br><span class="line">node3</span><br></pre></td></tr></table></figure><h3 id="修改Hadoop启动脚本"><a href="#修改Hadoop启动脚本" class="headerlink" title="修改Hadoop启动脚本"></a>修改Hadoop启动脚本</h3><h4 id="hadoop-env-sh"><a href="#hadoop-env-sh" class="headerlink" title="hadoop-env.sh"></a>hadoop-env.sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此文件位于/usr/local/hadoop-3.1.4/etc/hadoop</span></span><br><span class="line">vim /usr/<span class="built_in">local</span>/hadoop-3.1.4/etc/hadoop/hadoop-env.sh</span><br></pre></td></tr></table></figure><p>修改以下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/jdk1.8.0_261 <span class="comment"># JAVA_HOME的主路径，请根据实际情况填写</span></span><br></pre></td></tr></table></figure><h4 id="start-dfs-sh和stop-dfs-sh"><a href="#start-dfs-sh和stop-dfs-sh" class="headerlink" title="start-dfs.sh和stop-dfs.sh"></a>start-dfs.sh和stop-dfs.sh</h4><p>这两个文件在 <span class="inline-tag green">/usr/local/hadoop/sbin</span> ，分别使用vi编辑他们。分别在这两个文件的<strong>头部</strong>添加以下参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line">HDFS_DATANODE_USER=root</span><br><span class="line">HDFS_DATANODE_SECURE_USER=hdfs</span><br><span class="line">HDFS_NAMENODE_USER=root</span><br><span class="line">HDFS_SECONDARYNAMENODE_USER=root</span><br></pre></td></tr></table></figure><h4 id="start-yarn-sh和stop-yarn-sh"><a href="#start-yarn-sh和stop-yarn-sh" class="headerlink" title="start-yarn.sh和stop-yarn.sh"></a>start-yarn.sh和stop-yarn.sh</h4><p>这两个文件也在 <span class="inline-tag green">/usr/local/hadoop/sbin</span>，分别在这两个文件的头部添加以下参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line">YARN_RESOURCEMANAGER_USER=root</span><br><span class="line">HDFS_DATANODE_SECURE_USER=yarn</span><br><span class="line">YARN_NODEMANAGER_USER=root</span><br></pre></td></tr></table></figure><h1 id="复制虚拟机，并完成最后配置"><a href="#复制虚拟机，并完成最后配置" class="headerlink" title="复制虚拟机，并完成最后配置"></a>复制虚拟机，并完成最后配置</h1><h2 id="复制Master为其他节点"><a href="#复制Master为其他节点" class="headerlink" title="复制Master为其他节点"></a>复制Master为其他节点</h2><p>首先关闭Master电源&gt;&gt;&gt;右键Master&gt;&gt;&gt;管理&gt;&gt;&gt;克隆&gt;&gt;&gt;创建完整克隆</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_%E5%85%8B%E9%9A%86%E8%99%9A%E6%8B%9F%E6%9C%BA.jpg" alt="克隆虚拟机"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_%E5%88%9B%E5%BB%BA%E5%AE%8C%E6%95%B4%E5%85%8B%E9%9A%86.png" alt="创建完整克隆的虚拟机"><br>输入克隆出来的虚拟机名称即可，如此反复创建三个克隆Node1、Node2、Node3</p><h2 id="分别配置三个节点的HostName与IP地址"><a href="#分别配置三个节点的HostName与IP地址" class="headerlink" title="分别配置三个节点的HostName与IP地址"></a>分别配置三个节点的HostName与IP地址</h2><p>分别开启三个虚拟机，<strong>分别修改三个节点</strong>的HostName node1、node2、node3；并且按照前面的节点与IP对照表分别修改三个节点的静态IP为192.168.100.111、192.168.100.112、192.168.100.113</p><p><strong>例如</strong>在Node1中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 首先修改hostname</span></span><br><span class="line">hostnamectl set-hostname node1</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改虚拟机网卡配置</span></span><br><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33 </span><br></pre></td></tr></table></figure><p>将网卡配置文件修改为以下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD=&quot;none&quot;</span><br><span class="line">BROWSER_ONLY=&quot;no&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;</span><br><span class="line">NAME=&quot;ens33&quot;</span><br><span class="line">UUID=&quot;a20f6be7-2836-454e-a233-4b5dbd920000&quot;</span><br><span class="line">DEVICE=&quot;ens33&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=192.168.100.111# 仅修改静态IP即可</span><br><span class="line">GATEWAY=192.168.100.1</span><br><span class="line">DNS1=223.5.5.5</span><br><span class="line">DNS2=223.6.6.6</span><br></pre></td></tr></table></figure><p>Node2、Node3也是如此</p><h2 id="Master使用ssh免密登录各节点"><a href="#Master使用ssh免密登录各节点" class="headerlink" title="Master使用ssh免密登录各节点"></a>Master使用ssh免密登录各节点</h2><p>首先启动四台虚拟机，只登录Master1即可，在Master1中执行以下命令创建密钥，遇到提示信息直接按回车即可，无需理会</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 发送密钥至四个节点（本机也需要），过程中会提示输入密码，密码是节点的root用户密码</span></span><br><span class="line">cd /root/.ssh</span><br><span class="line">ssh-copy-id master2</span><br><span class="line">ssh-copy-id node1</span><br><span class="line">ssh-copy-id node2</span><br><span class="line">ssh-copy-id node3</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 验证免密登录是否成功</span></span><br><span class="line">ssh root@node1</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_ssh%E7%99%BB%E9%99%86%E6%88%90%E5%8A%9F.png" alt="ssh免密登陆成功"></p><h1 id="启动Hadoop集群"><a href="#启动Hadoop集群" class="headerlink" title="启动Hadoop集群"></a>启动Hadoop集群</h1><p>首先格式化HDFS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_%E6%A0%BC%E5%BC%8F%E5%8C%96hdfs.png" alt="格式化hdfs"><br></br></p><p>一键启动Hadoop集群</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-all.sh</span><br></pre></td></tr></table></figure><p>在不同节点使用命令<code>jps</code>查看程序运行情况</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_master.png" alt="master"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_node1.png" alt="node1"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_node2.png" alt="node2"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_node3.png" alt="node3"></p><blockquote><p>使用物理机浏览器访问192.168.100.101:8088，可以看到四个节点同时在线。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_8080.png" alt="web页面8080"></p><blockquote><p>使用物理机浏览器访问192.168.100.101:50070</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B%EF%BC%88%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%89_50070.png" alt="web页面50070"></p><div class="note success"><p>至此，Hadoop集群已经搭建完成，如有任何疑问，可在下方评论区留言。</p></div><blockquote><p><em><strong>参考文献</strong></em></p><p>[1] <a href="https://blog.csdn.net/Changshu135" target="_blank" rel="noopener">Changshu135</a>. CSDN[OL].  <a href="https://blog.csdn.net/Changshu135/article/details/90697506?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1" target="_blank" rel="noopener">hadoop-3.2.0分布式环境搭建–详细教程</a>, 2020.</p><p>[2] <a href="https://www.cnblogs.com/woofwoof/" target="_blank" rel="noopener">猿大侠</a>. 博客园[OL]. <a href="https://www.cnblogs.com/woofwoof/p/10024104.html" target="_blank" rel="noopener">使用root配置的hadoop并启动会出现报错</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab R2020b 安装激活</title>
      <link href="/2020/10/02/matlab-r2020b-an-zhuang-ji-huo/"/>
      <url>/2020/10/02/matlab-r2020b-an-zhuang-ji-huo/</url>
      
        <content type="html"><![CDATA[<div class="note default"><p>本站资源仅可用于学习交流使用</p></div><div class="note info"><p>本站所有信息都是来自互联网，版权争议与本站无关</p></div><div class="note warning"><p>您必须在下载后24个小时内从您的电脑中彻底删除上述内容</p></div><div class="note danger"><p>如果损害到您的利益请邮件<a href="mailto:&#x65;&#x2e;&#x68;&#97;&#x6e;&#122;&#104;&#117;&#x6f;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;">&#x65;&#x2e;&#x68;&#97;&#x6e;&#122;&#104;&#117;&#x6f;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a>与我联系处理，给您带来不便请谅解</p></div><div class="note primary"><p>本安装包仅支持64位操作系统</p></div><h1 id="Matlab安装包与激活工具下载"><a href="#Matlab安装包与激活工具下载" class="headerlink" title="Matlab安装包与激活工具下载"></a>Matlab安装包与激活工具下载</h1><ul><li>Matlab R2020b 离线安装包：<a href="https://www.jb51.net/softs/745941.html" target="_blank" rel="noopener">https://www.jb51.net/softs/745941.html</a></li></ul><div class="note warning"><p>请记住您的下载路径，例如我的下载路径是E:\Cache\BaiduNetdiskDownload\745941 matlab_R2020b。</p></div><blockquote><p>链接提供Matlab离线安装包，包含Matlab R2020b的全部工具箱</p></blockquote><h1 id="Matlab-R2020b安装"><a href="#Matlab-R2020b安装" class="headerlink" title="Matlab R2020b安装"></a>Matlab R2020b安装</h1><h2 id="将任意压缩文件解压，然后挂载为虚拟光驱"><a href="#将任意压缩文件解压，然后挂载为虚拟光驱" class="headerlink" title="将任意压缩文件解压，然后挂载为虚拟光驱"></a>将任意压缩文件解压，然后挂载为虚拟光驱</h2><blockquote><p>For Windows 8 and lower you probably need soft like Daemon Tools Lite (or similar)</p><p>Windows 8与以下版本可能需要像Daemon Tools Lite这类的软件才能装载虚拟光驱</p></blockquote><p>​        首先解压下载的任意一个压缩包，解压完成后右键 -&gt; 装载（如果没有装载选项，可以右键 -&gt; 打开方式 -&gt; Windows资源管理器，即可自动装载）</p><p>![装载虚拟光驱](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_装载虚拟光驱.png)<br>装载后打开 此电脑，可以看到DVD驱动器</p><p>![虚拟光驱装载成功](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_虚拟光驱装载成功.png)</p><h2 id="Matlab安装"><a href="#Matlab安装" class="headerlink" title="Matlab安装"></a>Matlab安装</h2><p>打开虚拟光驱，可以看到setup.exe，双击打开即可进入Matlab安装界面 </p><p>![setup.exe](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_setup.exe.png)<br>点击Matlab安装界面右上角的高级选项，选择我有文件安装密钥    </p><p>![我有文件安装密钥](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_我有文件安装密钥.png)<br>点击接受许可协议后输入文件安装密钥：09806-07443-53955-64350-21751-41297</p><p>![输入文件安装密钥](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_输入文件安装密钥.png)<br>选择刚才下载的<code>license.lic</code>许可证文件，点击下一步</p><p>选择安装路径</p><p>选择需要的产品（如果不在意Matlab的空间占用(30.83G)，与启动加载慢(其实差不了很多)，直接全选就好）</p><div class="note success"><p>如果不知道如何选择产品，请翻阅到最后，我将会给出各个领域的Matlab组件选项</p></div><p>接下来就是漫长的安装等待</p><h1 id="激活Matlab"><a href="#激活Matlab" class="headerlink" title="激活Matlab"></a>激活Matlab</h1><h2 id="复制许可证文件"><a href="#复制许可证文件" class="headerlink" title="复制许可证文件"></a>复制许可证文件</h2><p>打开Matlab的安装目录，例如我是 `D:\Matlab R2020b ，在这个目录下新建一个文件夹，并重命名为licenses</p><p>![新建licenses目录](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_新建licenses目录.png)<br>将下载的licenses.lic复制到licenses文件夹里</p><p>![复制licenses.lic](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_复制licenses.lic.png)<br>将 libmwlmgrimpl.dll 复制到Matlab安装目录下的 <code>\bin\win64\matlab_startup_plugins\lmgrimpl</code>，并替换原有文件</p><p>![替换libmwlmgrimpl.dll](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_替换libmwlmgrimpl.dll.png)</p><h1 id="首次启动Matlab"><a href="#首次启动Matlab" class="headerlink" title="首次启动Matlab"></a>首次启动Matlab</h1><h2 id="创建快捷方式"><a href="#创建快捷方式" class="headerlink" title="创建快捷方式"></a>创建快捷方式</h2><blockquote><p>Matlab安装完成后不会在桌面创建快捷方式，启动比较麻烦，所以我们需要手动添加桌面快捷方式</p></blockquote><p>首先打开Matlab安装目录下的bin文件夹，可以看到这里有个matlab.exe</p><p>![Matlab启动器](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_Matlab启动器.png)<br>右键matlab.exe – 发送到 – 桌面快捷方式 即可完成快捷方式的手动添加</p><h2 id="首次激活"><a href="#首次激活" class="headerlink" title="首次激活"></a>首次激活</h2><p>双击桌面的快捷方式启动Matlab，首次启动Matlab可能会提示激活，选择“在不使用Internet的情况下手动激活”</p><p>![不联网激活](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_不联网激活.png)<br>然后选择安装目录下我们创建的licenses文件夹里的licenses.lic，点击下一步即可完成激活</p><p>至此Matlab的安装与激活以全部完成</p><div class="note success"><p>Enjoy！</p></div><h1 id="附：Matlab产品包"><a href="#附：Matlab产品包" class="headerlink" title="附：Matlab产品包"></a>附：Matlab产品包</h1><p>![Matlab产品包](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_Matlab产品包.png)## Matlab基本内容<br>![Matlab基本内容](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_Matlab基本内容.png)## 无线通信<br>![无线通信](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_无线通信.png)## 测试和测量<br>![测试和测量](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_测试和测量.png)## Simulink 基本内容<br>![Simulink](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_Simulink 基本内容.png)## Simscape 필수 기능<br>![Simscape](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_Simscape 필수 기능.png)## 信号处理<br>![信号处理](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_信号处理.png)## 机器人<br>![机器人](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_机器人.png)## 量化金融与风险管理<br>![量化金融与风险管理](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_量化金融与风险管理.png)## 预测性维护<br>![预测性维护](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_预测性维护.png)## 电力电子控制设计<br>![电力电子控制设计](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_电力电子控制设计.png)## Mixed-Signal Systems<br>![‘Mixed-Signal](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_Mixed-Signal Systems.png)## 机器学习<br>![机器学习](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_机器学习.png)## 图像处理和计算机视觉<br>![图像处理和计算机视觉](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_图像处理和计算机视觉.png)## GPU计算<br>![GPU计算](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_GPU计算.png)## 深度学习<br>![深度学习](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_深度学习.png)## 数据科学<br>![数据科学](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_数据科学.png)## 控制系统<br>![控制系统](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_控制系统.png)## 自动报告<br>![自动报告](<a href="https://cdn.myblog.org.cn/&#39;Matlab">https://cdn.myblog.org.cn/&#39;Matlab</a> R2020b 安装激活_自动报告.png)</p>]]></content>
      
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS Code编辑远程文件</title>
      <link href="/2020/10/02/vs-code-bian-ji-yuan-cheng-wen-jian/"/>
      <url>/2020/10/02/vs-code-bian-ji-yuan-cheng-wen-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="下载安装VS-Code"><a href="#下载安装VS-Code" class="headerlink" title="下载安装VS Code"></a>下载安装VS Code</h1><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">点击进入VS Code下载界面</a> 选择合适的操作系统安装即可</p><h1 id="安装Remote-SSH插件"><a href="#安装Remote-SSH插件" class="headerlink" title="安装Remote - SSH插件"></a>安装Remote - SSH插件</h1><p>双击启动VS Code，点击VS Code的插件栏，搜索Remote - SSH，点击Install，安装如下图的插件即可</p><p>![安装SFTP插件](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_安装SFTP插件.jpg)</p><h1 id="配置SSH插件"><a href="#配置SSH插件" class="headerlink" title="配置SSH插件"></a>配置SSH插件</h1><p>插件安装完成后重启VS Code，可以看到左侧新增加了一个工具栏。</p><p>点击新增的工具栏，点击加号创建远程主机。</p><p>![新增功能](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_新增功能.jpg)<br>点击加号会提示输入远程连接命令，填入你远程主机的用户名和IP即可</p><p>![填入用户名与IP地址](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_填入用户名与IP地址.png)<br>格式：<code>ssh user@ip</code></p><p>填入远程命令之后会让你选择ssh配置文件的所在路径，一般位于 <span class="inline-tag green">C:\Users\你的用户名.ssh\config</span></p><p>![选择ssh配置文件](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_选择ssh配置文件.png)<br>选择后会进入初始化界面，界面要求我们选择远程主机的操作系统类型，我的远程主机是CentOS 8，因此选择Linux</p><p>![选择远程服务器操作系统](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_选择远程服务器操作系统.png)<br>接着会提示输入远程连接密码</p><div class="note success"><p>可以通过配置Windows下ssh的免密登录实现VS Code的远程免密访问</p></div><p>![输入密码](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_输入密码.png)<br>输入完成后VS Code将会对远程文件系统进行初始化，稍等片刻出现以下提示说明远程文件部署完成。</p><p>![初始化完毕](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_初始化完毕.png)<br>初始化完成后进入VS Code主界面，可以看到这里多了一个主机</p><p>![打开远程文件夹](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_打开远程文件夹.png)<br>点击右侧的小图标即可打开远程文件夹</p><p>访问时会提示输入密码</p><p>![输入密码](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_输入密码.png)<br>![访问成功](<a href="https://cdn.myblog.org.cn/&#39;VS">https://cdn.myblog.org.cn/&#39;VS</a> Code编辑远程文件_访问成功.png)</p><div class="note success"><p>配置成功，Enjoy！</p></div>]]></content>
      
      
      
        <tags>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx负载均衡配置</title>
      <link href="/2020/10/02/nginx-fu-zai-jun-heng-pei-zhi/"/>
      <url>/2020/10/02/nginx-fu-zai-jun-heng-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h1><p>  负载均衡（Server Load Balancer）是对多台云服务器进行流量分发的负载均衡服务。负载均衡可以通过流量分发扩展应用系统对外的服务能力，通过消除单点故障提升应用系统的可用性。</p><p>  一个没有负载均衡的 web 架构类似下面这样：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE_%E6%97%A0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.jpg" alt="_无负载均衡"></p><p>  而通过在后端引入一个负载均衡器和至少一个额外的 web 服务器，可以缓解这个故障。通常情况下，所有的后端服务器会保证提供相同的内容，以便用户无论哪个服务器响应，都能收到一致的内容。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE_%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.jpg" alt="负载均衡"></p><blockquote><p>以上图片来源：知乎用户<a href="https://www.zhihu.com/people/hev1n" target="_blank" rel="noopener">@Hevin</a></p></blockquote><p>  Nginx负载均衡是通过upstream模块来实现的，内置实现了三种负载策略，配置还是比较简单的。<a href="http://nginx.org/en/docs/http/load_balancing.html" target="_blank" rel="noopener">官网负载均衡配置说明</a>，当然还有其他第三方负载均衡策略，感兴趣可以自行了解。</p><ul><li>轮循（默认）<br>  Nginx根据请求次数，将每个请求均匀分配到每台服务器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream backserver &#123; </span><br><span class="line">    server node1; </span><br><span class="line">    server node2; </span><br><span class="line">    server node3 backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>指定权重</li></ul><p>  指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream backserver &#123; </span><br><span class="line">    server node1 weight=2;</span><br><span class="line">    server node2 weight=3;</span><br><span class="line">    server node3 backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   weight代表权重，node1节点会负载2/5的流量，node2节点负载3/5流量</p><ul><li>最少连接<br>  将请求分配给连接数最少的服务器。Nginx会统计哪些服务器的连接数最少。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upstream backserver &#123; </span><br><span class="line">    least_conn; </span><br><span class="line">    server node1; </span><br><span class="line">    server node2; </span><br><span class="line">    server node3 backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>IP Hash<br>  绑定处理请求的服务器。第一次请求时，根据该客户端的IP算出一个HASH值，将请求分配到集群中的某一台服务器上。后面该客户端的所有请求，都将通过HASH算法，找到之前处理这台客户端请求的服务器，然后将请求交给它来处理。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upstream backserver &#123; </span><br><span class="line">    ip_hash; </span><br><span class="line">    server node1; </span><br><span class="line">    server node2; </span><br><span class="line">    server node3 backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  本教程使用四台虚拟机当作云服务器做演示教程，指引您快速创建一个负载均衡实例，将来自客户端的请求转发到两台后端服务器上，并且拥有一台应急备份服务器（四节点本文均采用Nginx，后端和备份服务器可选择其他Web服务器）。</p><div class="note primary"><p>在Node1与Node2挂掉都之前，不会将请求分配给Node3。只有两个节点都挂了，Node3才会被启用。</p></div><div class="note info"><p>Master作为负载均衡分发服务器；Node1、Node2作为两台后端服务器；Node3作为应急备份服务器</p></div><div class="note default"><p>为了保证服务稳定运行，不受动态IP的影响，因此这里选择指定静态IP，主机名对应的IP地址如下表</p></div><table><thead><tr><th align="center">主机名</th><th align="center">IP</th></tr></thead><tbody><tr><td align="center">Master</td><td align="center">192.168.2.100</td></tr><tr><td align="center">Node1</td><td align="center">192.168.2.101</td></tr><tr><td align="center">Node2</td><td align="center">192.168.2.102</td></tr><tr><td align="center">Node3</td><td align="center">192.168.2.103</td></tr></tbody></table><div class="note warning"><p>博主之前已经配置好了各节点的NAT网络设置以及ssh免密登陆</p></div><h1 id="Nginx安装与集群配置"><a href="#Nginx安装与集群配置" class="headerlink" title="Nginx安装与集群配置"></a>Nginx安装与集群配置</h1><h2 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h2><p>  首先我们需要分别在四台服务器上安装Nginx，具体的Nginx安装教程请参考另一篇文章 <a href="https://myblog.org.cn/2020/05/31/nginx-bian-yi-an-zhuang/">Nginx的编译安装</a> 进行Nginx的初步安装调试</p><p>  按照上文配置好的网站主目录是 <span class="inline-tag green">/www/wwwroot/blog</span>，Nginx路径是 <span class="inline-tag green">/usr/local/nginx</span></p><p>  在三台后端服务器上的网站主目录里<strong>分别</strong>添加一个html，用于标记我们通过负载均衡访问到的是哪一个后端服务器，<strong>例如</strong>在Node1中 <span class="inline-tag green">/www/wwwroot/blog</span> 目录下新建<code>index.html</code>，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    This Node1. <span class="comment">&lt;!--这里是Node1节点--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  启动四台后端服务器上的Nginx，并检查是否可以访问</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE_%E5%9B%9B%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84Nginx%E5%9D%87%E5%8F%AF%E8%AE%BF%E9%97%AE.jpg" alt="四个节点的Nginx均可访问"></p><h2 id="Nginx-负载均衡配置（轮询模式）"><a href="#Nginx-负载均衡配置（轮询模式）" class="headerlink" title="Nginx 负载均衡配置（轮询模式）"></a>Nginx 负载均衡配置（轮询模式）</h2><p>  为了更好的演示效果，这里配置为轮询模式，请根据实际情况对Master的Nginx进行合理配置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    # ... 省略其它配置</span><br><span class="line">​    upstream slb &#123; </span><br><span class="line">​        server node1; </span><br><span class="line">​        server node2; </span><br><span class="line">​        server node3 backup;</span><br><span class="line">​    &#125; </span><br><span class="line">​    server &#123;</span><br><span class="line">​        listen 80;</span><br><span class="line">​        location /&#123;</span><br><span class="line">​            proxy_pass http://slb;     # slb是在上面命名的</span><br><span class="line">​        &#125;</span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">    # ... 省略其它配置</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完成后执行命令以重载Nginx配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>尝试访问负载均衡分发服务器Master</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE_%E8%BD%AE%E8%AF%A2%E6%A8%A1%E5%BC%8F.gif" alt="轮询模式"><br>此时停止后端服务器节点Node1，再尝试访问Master，可以看到流量全部到Node2节点</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE_%E5%85%B3%E9%97%AD%E8%8A%82%E7%82%B9Node1.gif" alt="关闭节点Node1"><br>再停止Node2节点，发现流量全部分配到Node3，也就是我们设置的备份节点</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E9%85%8D%E7%BD%AE_%E7%BB%A7%E7%BB%AD%E5%85%B3%E9%97%AD%E8%8A%82%E7%82%B9Node2.gif" alt="继续关闭节点Node2"></p><ul><li>负载均衡 – 参数</li></ul><p>下面的参数可同时配置，使用空格分开即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;配置方式 server ip:端口 参数&#x27;</span></span><br><span class="line"></span><br><span class="line">- <span class="string">&#x27;weight 权重&#x27;</span></span><br><span class="line"><span class="comment"># weight = 数值 (值越高被选中的概率也就越高)</span></span><br><span class="line"></span><br><span class="line">- <span class="string">&#x27;max_fails 失败多少次踢出队列&#x27;</span></span><br><span class="line"><span class="comment"># max_fails = 数值</span></span><br><span class="line"></span><br><span class="line">- <span class="string">&#x27;fail_timeout 踢出队列后重新探测时间&#x27;</span></span><br><span class="line"><span class="comment"># fail_timeout = 60s (s = 秒)</span></span><br><span class="line"></span><br><span class="line">- <span class="string">&#x27;max_conns 最大连接数&#x27;</span></span><br><span class="line"><span class="comment"># max_conns = 800 为防止单机性能过载可以根据实际情况设置</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx安装配置</title>
      <link href="/2020/10/02/nginx-an-zhuang-pei-zhi/"/>
      <url>/2020/10/02/nginx-an-zhuang-pei-zhi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Nginx(“engine x”)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。在高连接并发或纯静态页面的情况下，Nginx是Apache服务器不错的替代品。</p></blockquote><h1 id="Nginx-安装"><a href="#Nginx-安装" class="headerlink" title="Nginx 安装"></a>Nginx 安装</h1><div class="note info"><p>搭建环境：CentOS 8虚拟机, Nginx-1.19.0</p></div><h2 id="编译工具及库文件"><a href="#编译工具及库文件" class="headerlink" title="编译工具及库文件"></a>编译工具及库文件</h2><p>编译安装Nginx请首先确认您有编译必须的工具及库文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure><h2 id="安装-PCRE"><a href="#安装-PCRE" class="headerlink" title="安装 PCRE"></a>安装 PCRE</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过yum安装</span></span><br><span class="line">yum -y install pcre-devel</span><br><span class="line"><span class="comment"># 检查版本号</span></span><br><span class="line">pcre-config --version</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_pcre%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF.jpg" alt="pcre版本信息"></p><h2 id="下载Nginx源码"><a href="#下载Nginx源码" class="headerlink" title="下载Nginx源码"></a>下载Nginx源码</h2><blockquote><p>截止2020-05-31，Nginx最新版本号为1.19.0，可以通过官方下载地址 来获取最新版本的Nginx</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line">wget http://nginx.org/download/nginx-1.19.0.tar.gz</span><br><span class="line"><span class="comment"># 解压缩</span></span><br><span class="line">tar -zxvf nginx-1.19.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.19.0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查Nginx版本信息</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/sbin &amp;&amp; ./nginx -v</span><br><span class="line"><span class="comment"># Nginx添加至环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/nginx/sbin/ &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_nginx%E7%89%88%E6%9C%AC.jpg" alt="nginx版本"></p><div class="note warning"><p>在编译安装时不带任何参数的 <code>./configure</code> 命令会默认Nginx安装到<span class="inline-tag blue">/usr/local/nginx</span>目录下</p></div><div class="note primary"><p>使用 <span class="inline-tag blue">./configure –prefix=指定安装路径</span> 可自定义安装路径</p></div><div class="note success"><p>到此，Nginx安装完成</p></div><h1 id="Nginx-配置"><a href="#Nginx-配置" class="headerlink" title="Nginx 配置"></a>Nginx 配置</h1><p>为Nginx创建www用户，并指定Nginx以www用户身份运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建用户与用户组</span></span><br><span class="line">groupadd www</span><br><span class="line">useradd -g www www</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建网站根目录, 先用root用户创建目录/www</span></span><br><span class="line">mkdir /www</span><br><span class="line"><span class="comment"># 授予www用户访问权限</span></span><br><span class="line">chown -R www:www /www</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到www用户创建网站及nginx日志文件夹</span></span><br><span class="line">su www</span><br><span class="line">mkdir -p /www/wwwroot/blog /www/wwwlogs</span><br></pre></td></tr></table></figure><div class="note info"><p>chowm -R www:www /www 指令中第一个“www:www”是指 用户名:用户组 ，第二个“/www”是指目录/www</p></div><p>配置nginx.conf ，将 <span class="inline-tag green">/usr/local/nginx/conf/nginx.conf</span> 替换为以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim nginx.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">user www www;<span class="comment"># 指定用户名与用户组</span></span><br><span class="line">worker_processes auto; <span class="comment"># 指定处理器核心数量</span></span><br><span class="line">error_log  /www/wwwlogs/nginx_error.log  crit;</span><br><span class="line">pid        /usr/<span class="built_in">local</span>/nginx/logs/nginx.pid;</span><br><span class="line">worker_rlimit_nofile 51200;</span><br><span class="line"></span><br><span class="line">events</span><br><span class="line">    &#123;</span><br><span class="line">        use epoll;</span><br><span class="line">        worker_connections 51200;</span><br><span class="line">        multi_accept on;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">http</span><br><span class="line">    &#123;</span><br><span class="line">        include       mime.types;</span><br><span class="line">        default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">        server_names_hash_bucket_size 512;</span><br><span class="line">        client_header_buffer_size 32k;</span><br><span class="line">        large_client_header_buffers 4 32k;</span><br><span class="line">        client_max_body_size 50m;</span><br><span class="line"></span><br><span class="line">        sendfile   on;</span><br><span class="line">        tcp_nopush on;</span><br><span class="line"></span><br><span class="line">        keepalive_timeout 60;</span><br><span class="line"></span><br><span class="line">        tcp_nodelay on;</span><br><span class="line"></span><br><span class="line">        fastcgi_connect_timeout 300;</span><br><span class="line">        fastcgi_send_timeout 300;</span><br><span class="line">        fastcgi_read_timeout 300;</span><br><span class="line">        fastcgi_buffer_size 64k;</span><br><span class="line">        fastcgi_buffers 4 64k;</span><br><span class="line">        fastcgi_busy_buffers_size 128k;</span><br><span class="line">        fastcgi_temp_file_write_size 256k;</span><br><span class="line">fastcgi_intercept_errors on;</span><br><span class="line"></span><br><span class="line">        gzip on;</span><br><span class="line">        gzip_min_length  1k;</span><br><span class="line">        gzip_buffers     4 16k;</span><br><span class="line">        gzip_http_version 1.1;</span><br><span class="line">        gzip_comp_level 2;</span><br><span class="line">        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;</span><br><span class="line">        gzip_vary on;</span><br><span class="line">        gzip_proxied   expired no-store private auth;</span><br><span class="line">        gzip_disable   <span class="string">&quot;MSIE [1-6]\.&quot;</span>;</span><br><span class="line"></span><br><span class="line">        limit_conn_zone <span class="variable">$binary_remote_addr</span> zone=perip:10m;</span><br><span class="line">limit_conn_zone <span class="variable">$server_name</span> zone=perserver:10m;</span><br><span class="line"></span><br><span class="line">        server_tokens off;</span><br><span class="line">        access_log off;</span><br><span class="line"></span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80;<span class="comment"># 监听端口</span></span><br><span class="line">        server_name 192.168.2.100; <span class="comment"># 域名或IP</span></span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line">        root  /www/wwwroot/blog; <span class="comment"># 网站根目录</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># error_page   404   /404.html;</span></span><br><span class="line">        location ~ .*\.(php|php5)?$</span><br><span class="line">        &#123;</span><br><span class="line">            fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">            fastcgi_index index.php;</span><br><span class="line">            include fastcgi.conf;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires 30d;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires 15d;</span><br><span class="line">        &#125;</span><br><span class="line">        access_log  /www/wwwlogs/access.log;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检查Nginx配置是否正确</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_nginx%E9%85%8D%E7%BD%AE%E6%A3%80%E6%9F%A5.jpg" alt="nginx配置检查"><br>启动Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure><p>我已经将已经生成的博客放到 <span class="inline-tag green">/www/wwwroot/blog</span> 下</p><p>尝试使用浏览器访问配置好的站点IP，如果不知道IP信息，可以输入 <code>ip a</code> 查看</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BAIP.jpg" alt="查看本机IP"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Nginx%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_%E8%AE%BF%E9%97%AE%E6%B5%8B%E8%AF%95.jpg" alt="访问测试"><br>当然，如果网站根目录下没有文件的话你可能会看到403或者Nginx的欢迎界面</p><p>![Welcome](<a href="https://cdn.myblog.org.cn/&#39;Nginx%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE_Welcome">https://cdn.myblog.org.cn/&#39;Nginx安装配置_Welcome</a> Nginx.jpg)</p><h1 id="Nginx-其他命令"><a href="#Nginx-其他命令" class="headerlink" title="Nginx 其他命令"></a>Nginx 其他命令</h1><p>以下包含了 Nginx 常用的几个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload            <span class="comment"># 重载配置文件（平滑重启）</span></span><br><span class="line">nginx -s reopen            <span class="comment"># 重启 Nginx</span></span><br><span class="line">nginx -s stop              <span class="comment"># 停止 Nginx</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vi/Vim常用命令</title>
      <link href="/2020/10/02/vi-vim-chang-yong-ming-ling/"/>
      <url>/2020/10/02/vi-vim-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<div class="note success"><p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。</p><p>但是目前我们使用比较多的是 vim 编辑器。</p><p>vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。</p></div><h1 id="Vi-Vim-的使用"><a href="#Vi-Vim-的使用" class="headerlink" title="Vi / Vim 的使用"></a>Vi / Vim 的使用</h1><div class="note info"><p>vi/vim 共分为三种模式，分别是命令模式（Command mode），输入模式（Insert mode）和底线命令模式（Last line mode）。</p></div><h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><p>用户刚刚启动 vi/vim，便进入了命令模式。</p><p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p><p>以下是常用的几个命令：</p><ul><li>i 切换到输入模式，以输入字符。</li><li>x 删除当前光标所在处的字符。</li><li>: 切换到底线命令模式，以在最底一行输入命令。</li><li>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</li></ul><p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p><h2 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h2><p>在命令模式下按下i就进入了输入模式。</p><p>在输入模式中，可以使用以下按键：</p><table><thead><tr><th align="center">按键</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">字符按键以及Shift组合</td><td align="center">输入字符</td></tr><tr><td align="center">ENTER</td><td align="center">回车键，换行</td></tr><tr><td align="center">BACK SPACE</td><td align="center">退格键，删除光标前一个字符</td></tr><tr><td align="center">DELETE</td><td align="center">删除键，删除光标后一个字符</td></tr><tr><td align="center">方向键</td><td align="center">在文本中移动光标</td></tr><tr><td align="center">HOME / END</td><td align="center">移动光标到行首 / 行尾</td></tr><tr><td align="center">Page Up / Page Down</td><td align="center">上 / 下翻页</td></tr><tr><td align="center">Insert</td><td align="center">切换光标为输入/替换模式，光标将变成竖线/下划线</td></tr><tr><td align="center">ESC</td><td align="center">退出输入模式，切换到命令模式</td></tr></tbody></table><h2 id="底行命令模式"><a href="#底行命令模式" class="headerlink" title="底行命令模式"></a>底行命令模式</h2><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有：</p><ul><li>:q 退出程序</li><li>:q! 舍弃修改，并强制退出</li><li>:w 保存文件</li><li>:wq 保存并退出</li><li>:wq 强制保存退出</li><li>:x 与“q”命令相似，都是保存，区别是此命令只有在文件内容真的被修改时，才会改变文件的修改日期；但是“q”命令无论文件是否有修改，都会对文件的修改日期进行改变。<br>一般保存退出用:wq，还有一种就是:x，区别在于wq的方法无论对文件是否有修改，都会对文件的修改日期进行改变，而x方法只有在文件内容真的被修改（发生了变化）才会改变文件的修改日期</li></ul><p>按ESC键可随时退出底线命令模式。</p><p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_vim-vi-%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F.png" alt="vim-vi-工作模式"></p><h1 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h1><h2 id="使用-Vi-Vim-进入一般模式"><a href="#使用-Vi-Vim-进入一般模式" class="headerlink" title="使用 Vi / Vim 进入一般模式"></a>使用 Vi / Vim 进入一般模式</h2><p>使用 vim 来打开一个名为 test.txt 的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim test.txt</span><br><span class="line">此时打开的vim就是一般模式了。</span><br></pre></td></tr></table></figure><div class="note danger"><p><strong>如果打开的文件不存在，会自动创建新文件</strong>，vim 后面一定要加文件名，不管该文件存在与否！</p></div><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_vim%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6.jpg" alt="vim新建文件"></p><h2 id="按下-i-进入输入模式-也称为编辑模式-，开始编辑文字"><a href="#按下-i-进入输入模式-也称为编辑模式-，开始编辑文字" class="headerlink" title="按下 i 进入输入模式(也称为编辑模式)，开始编辑文字"></a>按下 i 进入输入模式(也称为编辑模式)，开始编辑文字</h2><p>在一般模式之中，只要按下 i, o, a 等字符就可以进入输入模式了！</p><p>在编辑模式当中，你可以发现在左下角状态栏中会出现 –INSERT- 的字样，那就是可以输入任意字符的提示。</p><p>这个时候，键盘上除了 Esc 这个按键之外，其他的按键都可以视作为一般的输入按钮了，所以你可以进行任何的编辑。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_vim%E8%BE%93%E5%85%A5%E6%A8%A1%E5%BC%8F.jpg" alt="vim输入模式"></p><h2 id="按下-ESC-按钮回到一般模式"><a href="#按下-ESC-按钮回到一般模式" class="headerlink" title="按下 ESC 按钮回到一般模式"></a>按下 ESC 按钮回到一般模式</h2><p>好了，假设我已经按照上面的样式给他编辑完毕了，那么应该要如何退出呢？是的！没错！就是给他按下 Esc 这个按钮即可！马上你就会发现画面左下角的 – INSERT – 不见了！</p><h2 id="在一般模式中按下-wq-储存后离开-vi"><a href="#在一般模式中按下-wq-储存后离开-vi" class="headerlink" title="在一般模式中按下 :wq 储存后离开 vi"></a>在一般模式中按下 <strong>:wq</strong> 储存后离开 vi</h2><p>存盘并离开的指令很简单，输入 <strong>:wq</strong> 即可保存离开！</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_vim%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6.jpg" alt="vim保存文件"></p><h1 id="Vi-Vim-进阶使用"><a href="#Vi-Vim-进阶使用" class="headerlink" title="Vi / Vim 进阶使用"></a>Vi / Vim 进阶使用</h1><h2 id="底行模式"><a href="#底行模式" class="headerlink" title="底行模式"></a>底行模式</h2><h3 id="跳行操作"><a href="#跳行操作" class="headerlink" title="跳行操作"></a>跳行操作</h3><ul><li>打开文件时指定光标所在行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim +5 test.txt<span class="comment"># +5是指打开test.txt文件时，光标定位到第五行</span></span><br></pre></td></tr></table></figure><p>在 Vi / Vim 中使用底行命令<code> :set nu</code> 可以显示行号</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_vim%E8%B7%B3%E8%A1%8C1.jpg" alt="vim跳行"></p><ul><li>使用底行命令跳转到指定行</li></ul><p>首先打开任意文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim test.txt</span><br></pre></td></tr></table></figure><p>首先使用底行命令<code>:set nu</code>显示行号（便于判断需要跳转到第几行），再使用底行命令<code>:行号</code>即可跳转到指定行，例如<code> :7</code> 。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_vim%E8%B7%B3%E8%A1%8C2.jpg" alt="vim跳行"></p><ul><li>打开文件时将光标定位到指定字符串</li></ul><p>vim +/字符串 文件名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim +/保存 test.txt<span class="comment"># +/保存 是指打开test.txt文件时，光标定位到字符串“保存”所在位置</span></span><br></pre></td></tr></table></figure><div class="note warning"><p>光标只会定位到指定字符串第一次出现行的行首</p></div><h3 id="查找字符串"><a href="#查找字符串" class="headerlink" title="查找字符串"></a>查找字符串</h3><p>底行命令<code>:/字符串</code> 可以快速查找指定字符串，例如：<code>:/保存</code> 查找字符串“保存”</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_vim%E6%9F%A5%E6%89%BE.jpg" alt="vim查找"></p><div class="note primary"><p>找到后，可以按下n查找上一个，N查找下一个</p></div><h3 id="替换字符串"><a href="#替换字符串" class="headerlink" title="替换字符串"></a>替换字符串</h3><p>测试文件</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_vim%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9B%BF%E6%8D%A2%E6%B5%8B%E8%AF%95.jpg" alt="vim字符串替换测试"></p><blockquote><p> 替换当前行第一个满足条件的：<code>:s/需要替换的字符串/替换成的字符串</code>（演示时，光标位于10行）</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_%E6%9B%BF%E6%8D%A2%E5%BD%93%E5%89%8D%E8%A1%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E7%9A%84.jpg" alt="替换当前行第一个满足条件的&#39;"></p><blockquote><p>替换当前行全部满足条件的： <code>:s/需要替换的字符串/替换成的字符串/</code>g（演示时，光标位于10行）</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_%E6%9B%BF%E6%8D%A2%E5%BD%93%E5%89%8D%E8%A1%8C%E5%85%A8%E9%83%A8%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E7%9A%84.jpg" alt="替换当前行全部满足条件的"></p><blockquote><p>替换文档中每一行第一个满足条件的：<code>:%s/需要替换的字符串/替换成的字符串</code></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_%E6%9B%BF%E6%8D%A2%E6%96%87%E6%A1%A3%E4%B8%AD%E6%AF%8F%E4%B8%80%E8%A1%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E7%9A%84.jpg" alt="替换文档中每一行第一个满足条件的"></p><blockquote><p>替换文档中所有的：<code>:%s/需要替换的字符串/替换成的字符串/g</code></p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_%E6%9B%BF%E6%8D%A2%E6%96%87%E6%A1%A3%E4%B8%AD%E6%89%80%E6%9C%89%E7%9A%84.jpg" alt="_替换文档中所有的"></p><h3 id="重做-撤销"><a href="#重做-撤销" class="headerlink" title="重做/撤销"></a>重做/撤销</h3><ul><li>撤销命令 <code>:u</code></li><li>重做，在命令模式下按下<code>ctrl+r</code></li><li>撤销多步，在底行模式下输入 <code>:要撤销的次数u</code></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_%E6%96%87%E4%BB%B6%E5%8F%91%E7%94%9F%E5%8F%98%E6%9B%B4.jpg" alt="文件发生变更"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_%E6%92%A4%E9%94%80%E4%BF%AE%E6%94%B9.jpg" alt="撤销修改"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Vi-Vim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4_%E9%87%8D%E5%81%9A.jpg" alt="重做"></p><h2 id="命令模式-1"><a href="#命令模式-1" class="headerlink" title="命令模式"></a>命令模式</h2><h3 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h3><ul><li>G：大写G，快速定位光标到文件最后一行</li><li>gg：两个小写的gg，快速定位到文件第一行</li><li>数字+G：快速定位到数字指定的行，例如：5G表示定位到第5行</li><li>数字+上下光标键：以当前行为准，向上或者向下移动指定的行数，例如：5向上光标键，表示以当前行为准，向上移动五行</li></ul><h3 id="删除命令"><a href="#删除命令" class="headerlink" title="删除命令"></a>删除命令</h3><p>dd：两个小写d，删除当前行，下一行上移<br>D：大写的D，删除当前行，下一行不上移留出空行<br>数字+dd：删除多行，以当前光标键为基准，向下删除数字指定的行数</p><div class="note info"><p>删除的内容留在粘贴板上，可以通过粘贴命令显示，可以理解为剪切</p></div><h3 id="复制命令"><a href="#复制命令" class="headerlink" title="复制命令"></a>复制命令</h3><p>yy：两个小写的y，复制当前行<br>数字+yy：复制多行，以当前行为准，向下复制指定的行数</p><h3 id="粘贴命令"><a href="#粘贴命令" class="headerlink" title="粘贴命令"></a>粘贴命令</h3><p>p：粘贴在当前行的下一行开始</p>]]></content>
      
      
      
        <tags>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/10/02/redis-an-zhuang/"/>
      <url>/2020/10/02/redis-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis-介绍"><a href="#Redis-介绍" class="headerlink" title="Redis 介绍"></a>Redis 介绍</h1><p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。</p><p>Redis 与其他 key - value 缓存产品有以下三个特点：</p><ul><li>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li><li>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</li><li>Redis支持数据的备份，即master-slave模式的数据备份。</li></ul><p>因此通常将Redis用作缓存数据库或队列。</p><h1 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h1><ul><li>Redis最新版本源码：<a href="https://redis.io/download" target="_blank" rel="noopener">下载地址</a></li><li>通过yum命令安装必须编译工具</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install make gcc-c++ cmake bison-devel ncurses-devel</span><br></pre></td></tr></table></figure><h1 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h1><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p>通过wget命令直接进行下载（截至博客更新，Redis最新版本为5.0.8）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Redis至/usr/local</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">wget http://download.redis.io/releases/redis-5.0.8.tar.gz</span><br></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><p>首先进入目录/usr/local/，解压redis-6.0.1.tar.gz，并进行编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line">tar -zxvf redis-5.0.8.tar.gz<span class="comment"># 解压后得到文件redis-5.0.8</span></span><br><span class="line">mv redis-5.0.8 redis<span class="comment"># 为了方便使用，将redis-5.0.8重命名为redis</span></span><br><span class="line"><span class="built_in">cd</span> redis<span class="comment"># 进入redis主目录</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><div class="note primary"><p>编译完后 redis目录下会出现编译后的redis服务程序redis-server,还有用于测试的客户端程序redis-cli,两个程序位于安装目录 src 目录下</p></div><h1 id="启动Redis"><a href="#启动Redis" class="headerlink" title="启动Redis"></a>启动Redis</h1><h2 id="前台启动Redis"><a href="#前台启动Redis" class="headerlink" title="前台启动Redis"></a>前台启动Redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先切换到redis src目录下</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis/src</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">./redis-server</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">16552:C 13 May 2020 00:06:41.680 <span class="comment"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span></span><br><span class="line">16552:C 13 May 2020 00:06:41.680 <span class="comment"># Redis version=5.0.8, bits=64, commit=00000000, modified=0, pid=16552, just started</span></span><br><span class="line">16552:C 13 May 2020 00:06:41.680 <span class="comment"># Warning: no config file specified, using the default config. In order to specify a config file use ./redis-server /path/to/redis.conf</span></span><br><span class="line">                _._</span><br><span class="line">           _.-``__ <span class="string">&#x27;&#x27;</span>-._</span><br><span class="line">      _.-``    `.  `_.  <span class="string">&#x27;&#x27;</span>-._           Redis 5.0.8 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ <span class="string">&#x27;&#x27;</span>-._</span><br><span class="line"> (    <span class="string">&#x27;      ,       .-`  | `,    )     Running in standalone mode</span></span><br><span class="line"><span class="string"> |`-._`-...-` __...-.``-._|&#x27;</span>` _.-<span class="string">&#x27;|     Port: 6379</span></span><br><span class="line"><span class="string"> |    `-._   `._    /     _.-&#x27;</span>    |     PID: 16552</span><br><span class="line">  `-._    `-._  `-./  _.-<span class="string">&#x27;    _.-&#x27;</span></span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">&#x27;    _.-&#x27;</span>_.-<span class="string">&#x27;|</span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-&#x27;</span>_.-<span class="string">&#x27;    |           http://redis.io</span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-&#x27;</span>_.-<span class="string">&#x27;    _.-&#x27;</span></span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">&#x27;    _.-&#x27;</span>_.-<span class="string">&#x27;|</span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-&#x27;</span>_.-<span class="string">&#x27;    |</span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-&#x27;</span>_.-<span class="string">&#x27;    _.-&#x27;</span></span><br><span class="line">      `-._    `-.__.-<span class="string">&#x27;    _.-&#x27;</span></span><br><span class="line">          `-._        _.-<span class="string">&#x27;</span></span><br><span class="line"><span class="string">              `-.__.-&#x27;</span></span><br><span class="line"></span><br><span class="line">16552:M 13 May 2020 00:06:41.682 <span class="comment"># WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span></span><br><span class="line">16552:M 13 May 2020 00:06:41.682 <span class="comment"># Server initialized</span></span><br><span class="line">16552:M 13 May 2020 00:06:41.682 <span class="comment"># WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span></span><br><span class="line">16552:M 13 May 2020 00:06:41.683 <span class="comment"># WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.</span></span><br></pre></td></tr></table></figure><h2 id="后台运行Redis"><a href="#后台运行Redis" class="headerlink" title="后台运行Redis"></a>后台运行Redis</h2><h3 id="修改redis-conf文件"><a href="#修改redis-conf文件" class="headerlink" title="修改redis.conf文件"></a>修改redis.conf文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis</span><br><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure><p>将 daemonize no 修改为 daemonize yes</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/Redis-%E5%AE%89%E8%A3%85_conf.png" alt="redis.conf"></p><h3 id="指定redis-conf文件启动"><a href="#指定redis-conf文件启动" class="headerlink" title="指定redis.conf文件启动"></a>指定redis.conf文件启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/redis/src</span><br><span class="line">./redis-server /usr/<span class="built_in">local</span>/redis/redis.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">16577:C 13 May 2020 00:12:44.285 <span class="comment"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span></span><br><span class="line">16577:C 13 May 2020 00:12:44.285 <span class="comment"># Redis version=5.0.8, bits=64, commit=00000000, modified=0, pid=16577, just started</span></span><br><span class="line">16577:C 13 May 2020 00:12:44.285 <span class="comment"># Configuration loaded</span></span><br></pre></td></tr></table></figure><h3 id="检查redis运行状态"><a href="#检查redis运行状态" class="headerlink" title="检查redis运行状态"></a>检查redis运行状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep redis</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root     16578  0.2  0.8 154012  8400 ?        Ssl  00:12   0:00 ./redis-server 127.0.0.1:6379</span><br><span class="line">root     16589  0.0  0.2 112824  2212 pts/0    S+   00:15   0:00 grep --color=auto redis</span><br></pre></td></tr></table></figure><p>可以看到Redis进程号为16578</p><p>若想终结redis进程，执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 16578</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装jdk8</title>
      <link href="/2020/09/30/centos-an-zhuang-jdk8/"/>
      <url>/2020/09/30/centos-an-zhuang-jdk8/</url>
      
        <content type="html"><![CDATA[<h1 id="工具清单"><a href="#工具清单" class="headerlink" title="工具清单"></a>工具清单</h1><ul><li>jdk-8u251-linux-x64.tar.gz：Oracle官方<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">下载地址</a> ( 需要Oracle账号登录 )</li><li>XFTP：百度自行下载</li></ul><h1 id="配置JAVA-JDK环境"><a href="#配置JAVA-JDK环境" class="headerlink" title="配置JAVA JDK环境"></a>配置JAVA JDK环境</h1><h2 id="安装wget、vim"><a href="#安装wget、vim" class="headerlink" title="安装wget、vim"></a>安装wget、vim</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install wget vim</span><br></pre></td></tr></table></figure><p>Complete!</p><h2 id="上传JDK到虚拟机中"><a href="#上传JDK到虚拟机中" class="headerlink" title="上传JDK到虚拟机中"></a>上传JDK到虚拟机中</h2><p>使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure><p>列出当前虚拟机Master的IP地址，发现是192.168.100.101</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/CentOS%E5%AE%89%E8%A3%85jdk8_IP%E5%9C%B0%E5%9D%80%E6%9F%A5%E8%AF%A2.png" alt="IP地址查询class:img-60"><br>打开XFTP，选择新建会话</p><blockquote><p>名称：任意</p><p>主机：192.168.100.101（Master的IP地址）</p><p>用户名：root</p><p>密码：安装CentOS时创建的密码</p></blockquote><p>打开会话后，直接将下载好的jdk文件（jdk-8u251-linux-x64.tar.gz）上传到虚拟机Master的/usr/local/目录下（拖拽进去即可）</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/CentOS%E5%AE%89%E8%A3%85jdk8_%E4%B8%8A%E4%BC%A0JDK.png" alt="上传JDK"></p><h2 id="配置JDK"><a href="#配置JDK" class="headerlink" title="配置JDK"></a>配置JDK</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入虚拟机Master的/usr/<span class="built_in">local</span>/目录，解压刚刚上传进去的jdk文件</span></span><br><span class="line">cd /usr/local/</span><br><span class="line">tar -zxvf jdk-8u251-linux-x64.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压后的文件夹名称为jdk1.8.0_251</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 配置环境变量</span></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在最后添加以下几行（先按page down或者下箭头翻到最后一行，按下i键进入vim的编辑模式）</span></span><br><span class="line">JAVA_HOME=/usr/local/jdk1.8.0_251</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line"><span class="meta">#</span><span class="bash"> 编辑完成后按下ESC键，输入:wq保存并退出</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使配置文件生效</span></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 验证环境变量</span></span><br><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure><p>出现类似结果代表环境变量配置成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/CentOS%E5%AE%89%E8%A3%85jdk8_%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%94%9F%E6%95%88.png" alt="环境变量生效"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机安装CentOS</title>
      <link href="/2020/09/30/xu-ni-ji-an-zhuang-centos/"/>
      <url>/2020/09/30/xu-ni-ji-an-zhuang-centos/</url>
      
        <content type="html"><![CDATA[<h1 id="工具清单"><a href="#工具清单" class="headerlink" title="工具清单"></a>工具清单</h1><p>VMware Workstation Pro：<a href="https://www.vmware.com/go/downloadworkstation-cn" target="_blank" rel="noopener">点此下载 VMware Workstation Pro</a>。<br>CentOS8 ISO镜像：<a href="http://mirrors.aliyun.com/centos/8.1.1911/isos/x86_64/CentOS-8.1.1911-x86_64-dvd1.iso" target="_blank" rel="noopener">阿里源下载地址</a>，当然也可以选择从<a href="https://www.centos.org/download/" target="_blank" rel="noopener">CentOS官网</a>选择其他版本。</p><h1 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h1><p>打开VM主界面，选择创建新的虚拟机</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA1.png" alt="虚拟机安装CentOS_创建虚拟机1"><br>新建虚拟机向导中，选择典型配置&gt;&gt;&gt;稍后安装操作系统&gt;&gt;&gt;客户机操作系统选择Linux，版本选择CentOS 7 64位</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA2.png" alt="虚拟机安装CentOS_创建虚拟机2"><br>虚拟机名称与位置可以任意填写</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA3.png" alt="虚拟机安装CentOS_创建虚拟机3"><br>磁盘我们选择合适的容量，建议将虚拟磁盘存储为单个文件，防止磁盘性能被降低</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA4.png" alt="虚拟机安装CentOS_创建虚拟机4"><br>选择自定义硬件，调整合适的虚拟机内存大小、处理器信息、在CD/DVD驱动器中选择已经下载好的CentOS镜像，网络适配器选择NAT模式</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA5.png" alt="虚拟机安装CentOS_创建虚拟机5"><br>开启虚拟机，将光标使用键盘移动到 <code>Install CentOS Linux</code></p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_Install1.png" alt="虚拟机安装CentOS_Install1"><br>此处选择简体中文</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_Install2.png" alt="虚拟机安装CentOS_Install2"><br>“安装软件”选项选择<strong>最小安装</strong>（此处按需求选择，一般情况下使用最小安装即可）</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_Install3.png" alt="虚拟机安装CentOS_Install3"><br><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_Install4.png" alt="虚拟机安装CentOS_Install4"><br>“网络和主机名”选项中，打开以太网网卡</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85CentOS_Install5.png" alt="虚拟机安装CentOS_Install5"></p><div class="note success"><p>一切准备就绪！开始安装操作系统，开始安装后会提示设置root密码，等待安装完成后重启虚拟机即可。</p></div>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>知乎用户信息爬虫</title>
      <link href="/2020/09/30/zhi-hu-yong-hu-xin-xi-pa-chong/"/>
      <url>/2020/09/30/zhi-hu-yong-hu-xin-xi-pa-chong/</url>
      
        <content type="html"><![CDATA[<h1 id="设计思路："><a href="#设计思路：" class="headerlink" title="设计思路："></a>设计思路：</h1><h2 id="用户信息页面"><a href="#用户信息页面" class="headerlink" title="用户信息页面"></a>用户信息页面</h2><p>用户主页，以 “ 张佳玮 ” 为例：</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E7%88%AC%E8%99%AB_url%E5%AE%9E%E4%BE%8B.png"><br>  我们观察到，如果想要定位到某个人的主页，那么只需要知道 zhihu.com/people/ 后面的字符串就可以了。</p><p>  这个页面为我们展示了详细的用户信息。我们想要完成大量用户的爬取的话，可以先从大V开始，爬取关注他们的用户，和他们关注的用户，然后一级一级地遍历。</p><h2 id="从某个大V定位其他用户"><a href="#从某个大V定位其他用户" class="headerlink" title="从某个大V定位其他用户"></a>从某个大V定位其他用户</h2><p>  首先禁用浏览器的JavaScript（以Chrome为例）：以此点击 设置–隐私设置和安全性–网站控制–JavaScript 选择 “ 已禁止 ” 。</p><div class="note info"><p>为什么要禁用JavaScript？</p></div><div class="note success"><p>因为使用requests等发送请求时，是不会加载js代码的，如果禁用了js，我们看到的网页就和爬虫爬到的页面相同了 ）</p></div><p>  禁用JavaScript后发现，“ 关注他的人 ” 等选项卡已无法正常加载，证明关注者列表通过js动态加载。此时我们启用浏览器JavaScript 。</p><h2 id="爬虫如何处理动态加载页面？"><a href="#爬虫如何处理动态加载页面？" class="headerlink" title="爬虫如何处理动态加载页面？"></a>爬虫如何处理动态加载页面？</h2><p>  我们在浏览器中按下F12，打开调试页面，点击调试界面中Network选项卡，然后尝试翻页或刷新页面使浏览器重新加载关注者列表，此时我们在Network选项卡中寻找相关数据包。</p><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E7%88%AC%E8%99%AB_network.png" alt="知乎用户信息爬虫_network"><br>观察到这是JSON格式数据包，因此我们只需要将这个数据包以JSON格式解析即可获取url_token，从而定位到用户主页面。</p><h2 id="爬虫工作思路"><a href="#爬虫工作思路" class="headerlink" title="爬虫工作思路"></a>爬虫工作思路</h2><p>  多线程爬虫设计大致思路如下图，使用Redis有序列表构建userId队列，使用Redis集合构建已经爬过的用户ID池，避免用户重复爬；另外利用Redis的Hash构建用户信息表，临时存储用户信息，随后编写指定程序与MongoDB进行同步。</p><div class="note warning"><p>Redis的集合、列表、Hash最大元素数量是40亿</p></div><p><img src= "/img/loading.gif" data-lazy-src="https://cdn.myblog.org.cn/%E7%9F%A5%E4%B9%8E%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E7%88%AC%E8%99%AB_%E7%88%AC%E8%99%AB%E5%B7%A5%E4%BD%9C%E6%80%9D%E8%B7%AF.png" alt="知乎用户信息爬虫_爬虫工作思路"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
